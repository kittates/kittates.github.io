<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>机器码的小端方式</title>
    <url>/2025/01/04/2025-1-4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	今天在看8086汇编时弹出了一个疑问：在以小端方式存储的cpu上，一条指令(操作码和地址码)的机器码也是直接以小端方式存放的吗？例如如下汇编代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">assume cs:code</span><br><span class="line">code segment</span><br><span class="line">        dw 0123h,0456h,0789h,0abch,0defh,0fedh,0cbah,0987h</span><br><span class="line">        mov bx,0</span><br><span class="line">        mov ax,0</span><br><span class="line">        mov cx,8</span><br><span class="line">s:      add ax,cs:[bx]</span><br><span class="line">        add bx,2</span><br><span class="line">        loop s</span><br><span class="line"></span><br><span class="line">        mov ax,4c00h</span><br><span class="line">        int 21h</span><br><span class="line">code ends</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>编译后的机器码如下：</p>
<p><img src="/2025/01/04/2025-1-4/image-20250104113924036.png" alt="image1"></p>
<p>对于<code>mov cx,0008</code>，对应的机器码为B90800，可以发现0800为mov指令中的立即数，并且是以小端方式存储的，而前面的B9应该是操作码对应的机器码，如果指令也是小端方式存储的，那么指令格式应该是0800B9，但这与实际的机器码不一样。</p>
<p>再在内存中查看该指令的机器码：</p>
<p><img src="/2025/01/04/2025-1-4/image-20250104114417488.png" alt="image2"></p>
<p>发现B9是存储在低地址中的。通过查看其它指令也是如此。</p>
<p>所以可知8086 指令存储规则：</p>
<ol>
<li>指令的操作码部分存储在低地址。</li>
<li>操作数的字节按照小端方式存储。</li>
</ol>
<p>大端、小端方式是针对数据部分的，具体指数据的高位字节和低位字节在内存中的排列方式，不针对操作码。</p>
<p><strong>参考：</strong></p>
<blockquote>
<p>1、<a href="https://blog.csdn.net/zyhse/article/details/133999018">汇编与机器指令转换</a></p>
</blockquote>
]]></content>
      <categories>
        <category>汇编</category>
      </categories>
  </entry>
  <entry>
    <title>洛谷-P1102 A-B 数对</title>
    <url>/2025/01/31/2025-1-31/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.luogu.com.cn/problem/P1102">原题链接</a></p>
<h2 id="分析"><a class="header-anchor" href="#分析">¶</a>分析</h2>
<p>通过分析样例发现，可能存在重复的数字，第一个1与2构成一个数对，第二个1与2也构成一个数对，1重复了2次，所以考虑用一个变量存储出现数字的次数，score+=B重复次数 * A重复次数。首先想到用结构体数组存储1~C范围中可能出现的次数，但发现C太大，数组无法存下，考虑用字典存储。</p>
<p>A-B=C等价于B+C=A，所以从头遍历字典a，如果存在a[b+c]，则score+=a[b] * a[b+c]</p>
<h2 id="code"><a class="header-anchor" href="#code">¶</a>code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(false)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IOS;</span><br><span class="line">    LL n,c,score = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cnt;</span><br><span class="line">    map&lt;LL,LL&gt; a;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        cin&gt;&gt;cnt;</span><br><span class="line">        a[cnt]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> [num,times] : a) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.<span class="built_in">find</span>(num+c)!=a.<span class="built_in">end</span>())		<span class="comment">//如果存在B+C=A</span></span><br><span class="line">        score += a[num] * a[num+c];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;score;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 998 (Div. 3)</title>
    <url>/2025/01/27/2025-1-27/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://codeforces.com/contest/2060">Codeforces Round 998 (Div. 3)</a></p>
<h1>A</h1>
<p>md一开始没读懂<em>Fibonacciness</em> 到底是个神马东西。直接遍历</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(false)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IOS;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="number">3</span>) cin&gt;&gt;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> maxn=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++) &#123;</span><br><span class="line">            cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>) a[<span class="number">3</span>] = a[<span class="number">1</span>]+a[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">2</span>) a[<span class="number">3</span>] = a[<span class="number">4</span>]-a[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">else</span> a[<span class="number">3</span>] = a[<span class="number">5</span>]-a[<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">3</span>;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j]+a[j+<span class="number">1</span>]==a[j+<span class="number">2</span>]) cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">            maxn = <span class="built_in">max</span>(maxn,cnt);</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;maxn&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>B</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(false)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2002</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">s</span> &#123;</span><br><span class="line">    <span class="type">int</span> r[N];</span><br><span class="line">    <span class="type">int</span> index;</span><br><span class="line">&#125; c[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">compare</span><span class="params">(s a,s b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.r[<span class="number">0</span>]&lt;=b.r[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IOS;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n,m;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) &#123;</span><br><span class="line">                cin&gt;&gt;c[i].r[j];  </span><br><span class="line">            &#125;</span><br><span class="line">            c[i].index = i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) </span><br><span class="line">        <span class="built_in">sort</span>(c[i].r,c[i].r+m);</span><br><span class="line">        <span class="built_in">sort</span>(c,c+n,compare);</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(c[j].r[i]&gt;cnt) cnt = c[j].r[i];</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    flag = <span class="number">1</span>;</span><br><span class="line">                    cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            cout&lt;&lt;c[i].index&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            cout&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>C</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOS ios::sync_with_stdio(false)</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IOS;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> n,k;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) </span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        <span class="built_in">sort</span>(a,a+n);</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>,j=n<span class="number">-1</span>;</span><br><span class="line">        <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]+a[j]==k) &#123;</span><br><span class="line">                i++,j--;</span><br><span class="line">                score++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]+a[j]&lt;k) i++;</span><br><span class="line">            <span class="keyword">else</span> j--;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;score&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 607 (Div. 2)</title>
    <url>/2025/01/26/2025-1-26/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://codeforces.com/contest/1281">Codeforces Round 607 (Div. 2)</a></p>
<h1>A</h1>
<p>……</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="type">char</span> c = s[s.<span class="built_in">length</span>()<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;o&#x27;</span>) <span class="built_in">puts</span>(<span class="string">&quot;FILIPINO&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;u&#x27;</span>) <span class="built_in">puts</span>(<span class="string">&quot;JAPANESE&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;KOREAN&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1><strong>B</strong></h1>
<h2 id="分析"><a class="header-anchor" href="#分析">¶</a>分析</h2>
<p>对于s至多进行一次字母交换使得s严格小于c，如果用两层循环查找可能的最小s，再加上外层的t，总共O(n^3)，会TLE。针对仅能进行一次交换，考虑从当前位置i向后查找小于s[i]的最小字符的下标minn，如果存在s[minn]!=s[i]则说明找到了小于s[i]的最小字符，swap后即为s所有情况中的最小的串，否则i++考虑下一个位置。当处理完s后获得可能的s最小值，最后再与c进行比较即可。</p>
<p><strong>需要注意的是</strong>：在查找小于s[i]的最小字符的下标minn时，要选择靠后的符合s[minn]&lt;s[i]的minn，例如</p>
<p><code>s = AAZMOAA</code></p>
<p><code>c = AAAQWER</code></p>
<p>对于i=2时，s[2]=Z，向后查找minn，当i=5或6时，均为A，但是swap(s[2],s[5])后是AAAMOZA，swap(s[2],s[6])后是AAAMOAZ，这两种情况显然第二种情况s更小，所以如果有多个相同的最小字符，选择下标最大的那个s[minn]进行交换，这样s[i]与s[minn]相距最远，swap后s[i]可以放在靠后的位置，从而s整体的字典序最小。</p>
<h2 id="code"><a class="header-anchor" href="#code">¶</a>code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">string s,c;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">findPos</span><span class="params">(<span class="type">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> minn = index;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=index+<span class="number">1</span>;i&lt;s.<span class="built_in">length</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&lt;=s[minn]) minn = i;		<span class="comment">//为了查找符合情况的靠后的字符</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> minn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        cin&gt;&gt;s&gt;&gt;c;</span><br><span class="line">        <span class="type">int</span> n = s.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="type">int</span> minn = <span class="built_in">findPos</span>(i);	<span class="comment">//从当前位置i向后查找&lt;s[i]的最小字符下标</span></span><br><span class="line">            <span class="keyword">if</span>(s[i]!=s[minn]) &#123;		<span class="comment">//存在</span></span><br><span class="line">                <span class="built_in">swap</span>(s[i],s[minn]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s&lt;c) cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;---&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>C</h1>
<h2 id="分析-v2"><a class="header-anchor" href="#分析-v2">¶</a>分析</h2>
<p>逐步模拟第一个样例，可以发现可以实际操作的s的范围为1~x，且x为1e6，这样就把s操作的范围缩小了。当s.length&lt;x时，需要继续向s添加c才能使ℓ追赶x，所以直接对s进行模拟；如果s.length&gt;=x了，这说明不用再继续向s添加c了，ℓ能够追赶x，只需要计算s的长度即可，因为是先剪切再粘贴，这就相当于给s添加了sℓ-1次的字符串c，c.length = len-ℓ，所以s的长度更新为len = len + (sℓ-1)*(len-ℓ)，注意取模。</p>
<h2 id="code-v2"><a class="header-anchor" href="#code-v2">¶</a>code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> N = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        LL len = <span class="number">0</span>;</span><br><span class="line">        string s,c;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;s;</span><br><span class="line">        <span class="type">int</span> kesai = <span class="number">0</span>;		<span class="comment">//ℓ</span></span><br><span class="line"> </span><br><span class="line">        len = s.<span class="built_in">length</span>();</span><br><span class="line">        <span class="keyword">while</span>(kesai!=x) &#123;</span><br><span class="line">            kesai++;</span><br><span class="line">            <span class="type">int</span> times = s[kesai<span class="number">-1</span>]-<span class="string">&#x27;0&#x27;</span>;		<span class="comment">//粘贴c的次数,即sℓ</span></span><br><span class="line">            <span class="keyword">if</span>(s.<span class="built_in">length</span>()&lt;x) &#123;</span><br><span class="line">                c = s.<span class="built_in">substr</span>(kesai,s.<span class="built_in">length</span>()-kesai);</span><br><span class="line">                s = s.<span class="built_in">substr</span>(<span class="number">0</span>,kesai);</span><br><span class="line">                <span class="keyword">while</span>(times--) s+=c;	<span class="comment">//向s粘贴c</span></span><br><span class="line">                len = s.<span class="built_in">length</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                len =(len+((times<span class="number">-1</span>)*((len-kesai+N)%N)%N))%N;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        cout&lt;&lt;len%N&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面会 Time limit exceeded on test 17，需要进行优化。</p>
<p>在if中是先让s变短，然后根据times再向s添加c，这等价于让s保持原样，只需要向s添加times-1次的c即可，这样减少了substr的操作，如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(s.<span class="built_in">length</span>()&lt;x) &#123;</span><br><span class="line">    c = s.<span class="built_in">substr</span>(kesai,s.<span class="built_in">length</span>()-kesai);</span><br><span class="line">    <span class="comment">// s = s.substr(0,kesai);</span></span><br><span class="line">    times--;</span><br><span class="line">    <span class="keyword">while</span>(times--) s+=c;</span><br><span class="line">    len = s.<span class="built_in">length</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>提交后通过</p>
]]></content>
      <categories>
        <category>codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>第二章 信息的表示和处理</title>
    <url>/2025/01/10/2025-1-10/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>第二章 信息的表示和处理</h1>
<h2 id="2-1-3-对强制类型转换访问和打印不同程序对象的字节表示的代码的理解"><a class="header-anchor" href="#2-1-3-对强制类型转换访问和打印不同程序对象的字节表示的代码的理解">¶</a>2.1.3 对强制类型转换访问和打印不同程序对象的字节表示的代码的理解</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> *byte_pointer;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show_bytes</span><span class="params">(byte_pointer start, <span class="type">size_t</span> len)</span> &#123;</span><br><span class="line">    <span class="type">size_t</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2x&quot;</span>,start[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show_int</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    show_bytes((byte_pointer) &amp;x,<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show_float</span><span class="params">(<span class="type">float</span> x)</span> &#123;</span><br><span class="line">    show_bytes((byte_pointer) &amp;x,<span class="keyword">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show_pointer</span><span class="params">(<span class="type">void</span> *x)</span> &#123;</span><br><span class="line">    show_bytes((byte_pointer) &amp;x,<span class="keyword">sizeof</span>(<span class="type">void</span> *));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">test_show_bytes</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="type">int</span> ival = val;</span><br><span class="line">    <span class="type">float</span> fval = (<span class="type">float</span>) ival;</span><br><span class="line">    <span class="type">int</span> *pval = &amp;ival;</span><br><span class="line">    show_int(ival);</span><br><span class="line">    show_float(fval);</span><br><span class="line">    show_pointer(pval);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    test_show_bytes(<span class="number">12345</span>);		<span class="comment">//12345.0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>对于show_int(12345)，show_int()函数接受的参数12345为int型，4B大小，在该函数内部调用show_bytes()，第一个参数会传入12345所在的存储地址(&amp;x)，并将该地址参数强制类型转换为byte_pointer型，这表明当执行show_bytes()内部的printf()时，不再以int型作为单位访问，而是以unsigned char为单位访问x所在存储单元中的数据，由于12345是以int型传入show_int()中的，所以会for循环四次访问x所在存储单元中的数据。也就是说，存储12345的x地址传入show_bytes()后仍旧是原地址，只不过在show_bytes()中访问时只能一个字节一个字节的进行访问，因为unsigned char类型大小为1B</p>
</li>
<li>
<p>对于show_pointer(pval)，show_pointer中传入的是12345所在存储单元的地址pval，在其内部传入show_bytes()中的第一个参数为指针的地址，即pval变量自身的地址，而不是pval所指向的地址，所以show_bytes()中会按unsigned char类型输出pval变量所存储的数据，循环次数为该指针的大小</p>
</li>
</ul>
<h2 id="2-1-7-练习题2-11-两数互换问题"><a class="header-anchor" href="#2-1-7-练习题2-11-两数互换问题">¶</a>2.1.7 练习题2.11 两数互换问题</h2>
<p>原文前面讨论了利用异或交换两数的方法，但是对于下面的函数，运行结果有bug</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">funSwap</span><span class="params">(<span class="type">int</span> *x,<span class="type">int</span> *y)</span> &#123;</span><br><span class="line">    *y = *x^*y;</span><br><span class="line">    *x = *x^*y;</span><br><span class="line">    *y = *x^*y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse_array</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> cnt)</span> &#123;</span><br><span class="line">    <span class="type">int</span> first,last;</span><br><span class="line">    <span class="keyword">for</span>(first=<span class="number">0</span>,last=cnt<span class="number">-1</span>;first&lt;=last;first++,last--) </span><br><span class="line">        funSwap(&amp;a[first],&amp;a[last]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    reverse_array(a,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++) </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之所以数组的长度为2*k+1时，第k+1个数为0，原因在于在最后一次for循环时，first和last均指向a[k]，此时inplace_swap中的x和y指向了同一个地址, *x = *y。运行时第一个式子 *y = *x ^ *x = 0，第二个式子 *x = 0^0 = 0，第三个式子 *y = 0^0=0。为了避免first和last指向同一个数，可以去掉 ‘=’。</p>
<h2 id="2-3-1-练习题2-27-判断溢出"><a class="header-anchor" href="#2-3-1-练习题2-27-判断溢出">¶</a>2.3.1 练习题2.27 判断溢出</h2>
<p>依据原文上面中的推导过程，当$$s&lt;x$$或$$s&lt;y$$时发生溢出，所以</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">uadd_ok</span><span class="params">(<span class="type">unsigned</span> x,<span class="type">unsigned</span> y)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> s = x+y;</span><br><span class="line">    <span class="keyword">return</span> s&gt;=x;	<span class="comment">//不溢出返回1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-3-2-练习题2-31-我没笑"><a class="header-anchor" href="#2-3-2-练习题2-31-我没笑">¶</a>2.3.2 练习题2.31 我没笑~</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* WARNING: This code is buggy */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">tadd_ok</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = x+y;</span><br><span class="line">    <span class="keyword">return</span> (sum-x==y) &amp;&amp; (sum-y==x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这题给人一种表面上的正确，但是实际是错误的。</p>
<p>由于 <strong>有符号整数溢出的行为</strong> 自然表现为模运算，所以：</p>
<ul>
<li>
<p>当x+y不溢出时，函数返回正确结果</p>
</li>
<li>
<p>当x+y正溢出时，该数会截断为后32位，即sum = x+y-2<sup>32</sup>，所以</p>
<p>sum - x = x + y - 2<sup>32</sup> - x = y - 2<sup>32</sup> = ( y - 2<sup>32</sup> ) % 2<sup>32</sup> = y</p>
<p>sum - y = x + y - 2<sup>32</sup> - y = x - 2<sup>32</sup> = ( x - 2<sup>32</sup> ) % 2<sup>32</sup> = x</p>
<p>所以( sum - x == y ) &amp;&amp; ( sum - y == x ) 恒成立</p>
</li>
<li>
<p>当x+y负溢出时，sum = x+y+2<sup>32</sup>，所以</p>
<p>sum - x = x + y + 2<sup>32</sup> - x = y + 2<sup>32</sup> = ( y + 2<sup>32</sup> ) % 2<sup>32</sup> = y</p>
<p>sum -y = x + y + 2<sup>32</sup> - y = x + 2<sup>32</sup> = ( x + 2<sup>32</sup> ) % 2<sup>32</sup> = x</p>
<p>也是恒成立的</p>
</li>
</ul>
<p>所以上述代码无论是否溢出，都恒成立，所以有问题。</p>
<h2 id="2-3-2-练习题2-32-tsub-ok溢出问题"><a class="header-anchor" href="#2-3-2-练习题2-32-tsub-ok溢出问题">¶</a>2.3.2 练习题2.32 tsub_ok溢出问题</h2>
<p>有一个特殊情况需要特别讨论，即y = -2<sup>31</sup>时,因为-y=-2<sup>31</sup></p>
<ul>
<li>
<p>x&gt;0时，不妨设x = 1，则x - y真值为1+2<sup>31</sup>,真值发生了溢出，但是在tadd_ok()中，</p>
<p>x&gt;0，y&lt;0，返回的是1即没有溢出。</p>
</li>
<li>
<p>x&lt;0时，不妨设x = -1，则x - y真值为-1+2<sup>31</sup>,真值没有溢出，但是在tadd_ok()中，</p>
<p>x&lt;0，y&lt;0，x+y = [1111……1111] + [1000……0000] = [0111……1111] &gt;0，所以返回的是0即发生了溢出</p>
</li>
</ul>
<p>所以需要在tsub_ok()单独处理这种情况</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">tsub_ok</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (y &lt; <span class="number">0</span> &amp;&amp; -y &lt; <span class="number">0</span>) &#123;	<span class="comment">/* y是否为最小负数 */</span></span><br><span class="line">        <span class="keyword">return</span> x &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tadd_ok(x, -y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CSAPP</category>
      </categories>
  </entry>
  <entry>
    <title>gogogo</title>
    <url>/2024/12/20/2024-12-20/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>奥利给,干了xdm</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>“当牛做马？”</title>
    <url>/2024/08/15/2024-8-15/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>找到了大三时选的计算机专业英语这门课最后的小作文👇</p>
<p><img src="/2024/08/15/2024-8-15/IMG_20230620_143059.jpg" alt="image1"></p>
<p><img src="/2024/08/15/2024-8-15/comment_13bbc94301efc867a4c32f53db7af2a6.png" alt="image2"></p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>五个小鸟</title>
    <url>/2024/08/02/2024-8-2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​		两周前的一天，下着大雨，在厨房的抽油烟机附近听着有鸟叽叽喳喳叫的声音，以为是窗户外面的鸟叫声，就没再多想。一会老爹就走过来告诉我抽油烟机排烟管里面有个鸟窝，里面有小鸟🐣。我这才想到：原来一开始听到的鸟叫声就是排烟管里面的。</p>
<p>​		拔出排烟管，里面都被铺满了草和苇子，里面是个鸟窝，鸟窝里面有五个🐣，身上还没有长羽毛，眼也没睁开，看来是刚孵化出来不久。随后我就用笔芯和铁棍做了个吸管用来喂养。</p>
<p>​		喂了好几天，每次我一叫唤，这些小鸟就喳喳的弹出头来张着嘴等着被投喂。就这样连续喂了好几天，翅膀上面的羽管开始绽放羽毛了。这五个当中，有两个是长的非常壮实的，另外两个中等大小，最后的一个长的很慢，其它四个都长处羽毛了，它还是光秃秃的，所以每次喂养时，总是会先侧重喂他。</p>
<p>​		早上或者下午喂完后，都会放这五只出来跑一跑，一开始只会蹲在地面上，无论我怎样推它，它都不带往前走一步，太小还是不太敢啊。但是那两只大的鸟的爪子很有劲，可以站在细木棍上了。</p>
<p>​		像先前一样，晚上喂了所有的鸟后就封起来不管它们了。结果第二天早上再去看👀时，最小的🐣歿了，肚子上起了一个大泡，都透明了。昨天晚上还很好的，饭量也正常，结果就这样了。推测是被那几个较大的鸟啄的或者被蚊子叮了（我都用纱网蒙起来了，按说不该啊！！！）。</p>
<p>​		剩下的四个，又连续喂养几天。</p>
<p>​		其中的那两只稍微大的，也慢慢的会跑了，这两只有一只在前面跑，另一只就在后面追，挺带劲的。另外两个还是不会走。这四个的翅膀也会扑棱了。预判这那两只大的用不了多长时间就会飞了，到时候就让它们自己去生存了，不喂它们了。</p>
<p>​		几天前的中午，爸妈出门了，家里只有我一个。中午十一点半的时候我听见外面砰的一声响，我以为是外面的板子倒了，在监控上一看，发现一个白猫蹲在鸟窝前咬着。我TM💢，吓得我立马冲出去连拍窗户带吼叫。赶走之后，发现有一个已经瘫倒了，一个蜷缩在边上，另外两只小的蜷缩在窝里面。我拿出那只瘫了的，喂了点水，放在地上时一只腿在抽搐，头耷拉着，脖子没有一点拉力，看了表皮并没内有伤口，喂了几口水后最终缓缓的闭上了眼，歿了。另外那只大的鸟也是一直在喘，只有翅膀上面破了流了一点血，喂了几口水就放在窝里面，避免再被猫咬，就把窝放到屋里面了。下午的时候看着那只大的还是在喘，这只和其他两只简单喂了几口后就放回窝里面了。到了晚上的时候，喂完那只大的后，没过多长时间，也闭上了眼，歿了。哎！</p>
<p>​		傻逼猫，就这两只长得壮实，长得快，马上就会飞了，哎，可惜。</p>
<p>​		那个时候就只剩下两个🐤了。</p>
<p>​		就剩下两只了，用盒子做了个新窝，把之前的草窝扔了，那上面味很大。</p>
<p>​		这两只在这几天喂的时候，不像最开始的那几天有活力了，喂得时候只吃一口，后面的就不吃了；有的时候连吃都不吃了，嗉囊里面一点食物都没有了，只能强行撬开嘴灌进去一点。在喂的时候发现这两只鸟的腿都有问题了，站都站不直。仔细看了才发现一只腿弯了，一只腿关节扭了，记得前些日子让他们自己溜达的时候也没有这样啊，难道也是被那个死猫给咬的？</p>
<p>​		喂到现在，只有一只还算能吃一点，另一只也是在濒死的边缘。</p>
<p>​		今天早上，我为这骨头太软，我磨碎了一粒钙片，在给它们拌食的时候加进去。</p>
<p>​		果然，那只较惨的鸟今天都在闭着眼，早上喂了，中午喂了一口，晚上一看嗉囊里面还有，也没再去喂，也在喘，身子僵硬，拿进屋里没过多久，也闭上了眼，歿了。</p>
<p>​		截止到2024.8.2 P.M. 8:30，五个还剩下一个，这只的状态也是不太好。😩</p>
<hr>
<p>​		2024.8.3早晨起来的时候发现也歿了😭。五个一个都没活下来。</p>
]]></content>
      <categories>
        <category>animals</category>
      </categories>
  </entry>
  <entry>
    <title>小黄人大眼萌：神偷奶爸前传</title>
    <url>/2024/06/05/2024-06-05/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>![小黄人大眼萌：神偷奶爸前传封面图](image 1.png)</p>
<p>不知道这是第几部了，以前也看了很多部，这部是格鲁小时候。</p>
<p><img src="/2024/06/05/2024-06-05/2.png" alt></p>
<p><img src="/2024/06/05/2024-06-05/2-1.png" alt></p>
<p><img src="/2024/06/05/2024-06-05/2-2.png" alt></p>
<p><img src="/2024/06/05/2024-06-05/2-3.png" alt></p>
<p><img src="/2024/06/05/2024-06-05/3.png" alt></p>
]]></content>
      <categories>
        <category>电影</category>
      </categories>
  </entry>
  <entry>
    <title>Typescript</title>
    <url>/2024/05/20/2024-5-20/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://ts.xcatliu.com/advanced/generics.html" style="color: red">Reference</a></p>
<h1>第一章 快速入门</h1>
<h2 id="0、TypeScript简介"><a class="header-anchor" href="#0、TypeScript简介">¶</a>0、TypeScript简介</h2>
<ol>
<li>TypeScript是JavaScript的超集。</li>
<li>它对JS进行了扩展，向JS中引入了类型的概念，并添加了许多新的特性。</li>
<li>TS代码需要通过编译器编译为JS，然后再交由JS解析器执行。</li>
<li>TS完全兼容JS，换言之，任何的JS代码都可以直接当成JS使用。</li>
<li>相较于JS而言，TS拥有了静态类型，更加严格的语法，更强大的功能；TS可以在代码执行前就完成代码的检查，减小了运行时异常的出现的几率；TS代码可以编译为任意版本的JS代码，可有效解决不同JS运行环境的兼容问题；同样的功能，TS的代码量要大于JS，但由于TS的代码结构更加清晰，变量类型更加明确，在后期代码的维护中TS却远远胜于JS。</li>
</ol>
<img src="/2024/05/20/2024-5-20/image-20240304151722975.png" alt="image-20240304151722975" style="zoom: 67%;">
<img src="/2024/05/20/2024-5-20/image-20240304151910540.png" alt="image-20240304151910540" style="zoom:67%;">
<h2 id="1、TypeScript-开发环境搭建"><a class="header-anchor" href="#1、TypeScript-开发环境搭建">¶</a>1、TypeScript 开发环境搭建</h2>
<p>安装typescript</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i typescript -g</span><br></pre></td></tr></table></figure>
<p>创建一个hello.ts文件</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>编译</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tsc hello.ts</span><br></pre></td></tr></table></figure>
<p>编译完成后当前目录就有了对应的JS文件了</p>
<h2 id="2、基本类型"><a class="header-anchor" href="#2、基本类型">¶</a>2、基本类型</h2>
<ul>
<li>
<p>类型声明</p>
<ul>
<li>
<p>类型声明是TS非常重要的一个特点</p>
</li>
<li>
<p>通过类型声明可以指定TS中变量（参数、形参）的类型</p>
</li>
<li>
<p>指定类型后，当为变量赋值时，TS编译器会自动检查值是否符合类型声明，符合则赋值，否则报错</p>
</li>
<li>
<p>简而言之，类型声明给变量设置了类型，使得变量只能存储某种类型的值</p>
</li>
<li>
<p>语法：</p>
  <figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> 变量: 类型;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> 变量: 类型 = 值;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">参数: 类型, 参数: 类型</span>): 类型&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>自动类型判断</p>
<ul>
<li>
<p>TS拥有自动的类型判断机制</p>
</li>
<li>
<p>当对变量的声明和赋值是同时进行的，TS编译器会自动判断变量的类型</p>
</li>
<li>
<p>所以如果你的变量的声明和赋值时同时进行的，可以省略掉类型声明</p>
</li>
</ul>
<p>例如如下：</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> c = <span class="literal">true</span>;	<span class="comment">//c会被自动识别为Boolen型</span></span><br></pre></td></tr></table></figure>
<p><img src="/2024/05/20/2024-5-20/image-20240304161726542.png" alt="image-20240304161726542"></p>
<p>如果发现类型不匹配，就会报错。即使报错，也能编译通过。之后可以设置使其报错无法通过编译。</p>
<p>可以通过指定相应的配置，使其编译成指定的JS版本，后面学到。</p>
<p>但是对于下面：</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">a:<span class="built_in">number</span>,b:<span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun</span>(<span class="number">123</span>,<span class="string">&quot;123&quot;</span>));</span><br></pre></td></tr></table></figure>
<p>输出的结果仍未&quot;123123&quot;，这是因为没有规定fun返回的类型</p>
<p>修改后：</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">a:<span class="built_in">number</span>,b:<span class="built_in">number</span></span>): <span class="built_in">number</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun</span>(<span class="number">123</span>,<span class="number">1</span>));</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>类型：</p>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">例子</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">number</td>
<td style="text-align:center">1, -33, 2.5</td>
<td style="text-align:center">任意数字</td>
</tr>
<tr>
<td style="text-align:center">string</td>
<td style="text-align:center">‘hi’, “hi”, <code>hi</code></td>
<td style="text-align:center">任意字符串</td>
</tr>
<tr>
<td style="text-align:center">boolean</td>
<td style="text-align:center">true、false</td>
<td style="text-align:center">布尔值true或false</td>
</tr>
<tr>
<td style="text-align:center">字面量</td>
<td style="text-align:center">其本身</td>
<td style="text-align:center">限制变量的值就是该字面量的值</td>
</tr>
<tr>
<td style="text-align:center">any</td>
<td style="text-align:center">*</td>
<td style="text-align:center">任意类型</td>
</tr>
<tr>
<td style="text-align:center">unknown</td>
<td style="text-align:center">*</td>
<td style="text-align:center">类型安全的any</td>
</tr>
<tr>
<td style="text-align:center">void</td>
<td style="text-align:center">空值（undefined）</td>
<td style="text-align:center">没有值（或undefined）</td>
</tr>
<tr>
<td style="text-align:center">never</td>
<td style="text-align:center">没有值</td>
<td style="text-align:center">不能是任何值</td>
</tr>
<tr>
<td style="text-align:center">object</td>
<td style="text-align:center">{name:‘孙悟空’}</td>
<td style="text-align:center">任意的JS对象</td>
</tr>
<tr>
<td style="text-align:center">array</td>
<td style="text-align:center">[1,2,3]</td>
<td style="text-align:center">任意JS数组</td>
</tr>
<tr>
<td style="text-align:center">tuple</td>
<td style="text-align:center">[4,5]</td>
<td style="text-align:center">元素，TS新增类型，固定长度数组</td>
</tr>
<tr>
<td style="text-align:center">enum</td>
<td style="text-align:center">enum{A, B}</td>
<td style="text-align:center">枚举，TS中新增类型</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>number</p>
<ul>
<li>
<pre><code class="language-typescript">  let decimal: number = 6;
  let hex: number = 0xf00d;
  let binary: number = 0b1010;
  let octal: number = 0o744;
  let big: bigint = 100n;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- boolean</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        let isDone: boolean = false;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
<li>
<p>string</p>
<ul>
<li>
<pre><code class="language-typescript">  let color: string = &quot;blue&quot;;
  color = 'red';
  
  let fullName: string = `Bob Bobbington`;
  let age: number = 37;
  let sentence: string = `Hello, my name is $&#123;fullName&#125;.
  
  `I'll be $&#123;age + 1&#125; years old next month.`;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 字面量</span><br><span class="line"></span><br><span class="line">    - 也可以使用字面量去指定变量的类型，通过字面量可以确定变量的取值范围</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        let a: 10;	//a只能为10，不能再修改了</span><br><span class="line">        let color: &#x27;red&#x27; | &#x27;blue&#x27; | &#x27;black&#x27;;	//color的取值范围为[red、blue、black]</span><br><span class="line">        let num: 1 | 2 | 3 | 4 | 5;</span><br><span class="line">        let c = boolean | string;	//可以使用 | 来连接多个类型（联合类型）</span><br><span class="line">        c = true;</span><br><span class="line">        c = &#x27;hello&#x27;;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
<li>
<p>any: 不建议使用</p>
<ul>
<li>
<pre><code class="language-typescript">  let d: any = 4;
  d = 'hello';
  d = true;
  
  let c: any;
  c = 1
  c = 'h'
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">上面的为显示的any</span><br><span class="line"></span><br><span class="line">下面为隐式的any</span><br><span class="line"></span><br><span class="line">```ts</span><br><span class="line">let d;	//声明变量时不指定类型，则TS解析器会自动判断变量的类型为any,隐式的any</span><br><span class="line">d = &#x27;hello&#x27;;</span><br><span class="line">d = true;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
<p>可以赋值给其他变量，如下：</p>
  <figure class="highlight tsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">a</span>:<span class="built_in">any</span>,<span class="attr">b</span>:<span class="built_in">number</span>;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">b = a;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>unknown：实际上是一个类型安全的any，不能赋值给其它变量</p>
  <figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">notSure</span>: <span class="built_in">unknown</span> = <span class="number">4</span>;</span><br><span class="line">notSure = <span class="string">&#x27;hello&#x27;</span>;</span><br></pre></td></tr></table></figure>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">a</span>:<span class="built_in">unknown</span>,<span class="attr">b</span>:<span class="built_in">number</span>;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">b = a;	<span class="comment">//报错</span></span><br></pre></td></tr></table></figure>
<p>不能将未知类型的变量赋值给一个确定类型的变量，但是两个unknown可以相互赋值</p>
</li>
<li>
<p>void：主要用于为函数设置为空的返回值</p>
<ul>
<li>
<pre><code class="language-typescript">  let unusable: void = undefined;
  function fun()&#123;&#125;	//没有明确指出，默认为void类型
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- never：通常用于指示一个函数永远不会正常返回，例如抛出错误、进入无限循环。</span><br><span class="line"></span><br><span class="line">- ```typescript</span><br><span class="line">    function error(message: string): never &#123;</span><br><span class="line">      throw new Error(message);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
<li>
<p>object（没啥用）</p>
<ul>
<li>
<pre><code class="language-typescript">  let obj: object = &#123;&#125;;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- &#123;&#125; ：可以定义内部属性的类型</span><br><span class="line"></span><br><span class="line">    ```ts</span><br><span class="line">    let b: &#123;name: string,age?: number&#125;	//?表示age为可选项</span><br><span class="line">    b = &#123;name: &#x27;kittates&#x27;&#125;</span><br><span class="line">    b = &#123;name: &#x27;abc&#x27;,age: 10&#125;;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">b</span>: &#123;<span class="attr">name</span>: <span class="string">&#x27;kittates&#x27;</span>,<span class="attr">age</span>: <span class="number">12</span>&#125;;	<span class="comment">//b只能为&#123;name: &#x27;kittates&#x27;,age: 12&#125;，否则报错</span></span><br><span class="line">b = &#123;<span class="attr">name</span>: <span class="string">&#x27;kittates&#x27;</span>,<span class="attr">age</span>: <span class="number">12</span>&#125;;</span><br></pre></td></tr></table></figure>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: &#123;<span class="attr">name</span>: <span class="built_in">string</span>,[<span class="attr">propName</span>:<span class="built_in">string</span>]:<span class="built_in">any</span>&#125;	<span class="comment">//propName可以取任何名，只是在这里代指一下</span></span><br><span class="line">c = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;kittates&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="attr">product</span>: &#123;</span><br><span class="line">        <span class="attr">item</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="number">12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br></pre></td></tr></table></figure>
<p><code>[propName: string]: any</code>: 这部分使用了索引签名。它表示 <code>c</code> 可以有任意数量的其他属性，这些属性的键名是字符串类型，而对应的值可以是任意类型（<code>any</code>）。<strong>这使得 <code>c</code> 可以包含除了 <code>name</code> 外的其他属性</strong>，并且这些属性的值可以是任何类型。</p>
</li>
</ul>
<ul>
<li>
<p>设置函数结构的类型声明</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明了c的两个参数为number型,且返回值也为number</span></span><br><span class="line"><span class="comment">//a、b可以取任何名，只是在这里代指一下</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">c</span>: <span class="function">(<span class="params">a:<span class="built_in">number</span>,b:<span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span>;	</span><br><span class="line">c = <span class="keyword">function</span>(<span class="params">n1:<span class="built_in">number</span>,n2:<span class="built_in">number</span></span>):<span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> n1+n2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>
<p>array</p>
  <figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">list</span>: <span class="built_in">number</span>[] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];	<span class="comment">//声明number类型的数组</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">list</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">list</span>: <span class="built_in">string</span>[];	<span class="comment">//声明string类型的数组</span></span><br><span class="line">list = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">list1</span>: <span class="title class_">Array</span>&lt;<span class="built_in">string</span>&gt;;</span><br><span class="line">list1 = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>tuple：元组-固定长度的数组</p>
<ul>
<li>
<pre><code class="language-typescript">  let x: [string, number];	//第一个元素为string，第二个元素为string
  x = [&quot;hello&quot;, 10]; 
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- enum</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        enum Color &#123;</span><br><span class="line">          Red,</span><br><span class="line">          Green,</span><br><span class="line">          Blue,</span><br><span class="line">        &#125;</span><br><span class="line">        let c: Color = Color.Green;</span><br><span class="line">        </span><br><span class="line">        enum Color &#123;</span><br><span class="line">          Red = 1,</span><br><span class="line">          Green,</span><br><span class="line">          Blue,</span><br><span class="line">        &#125;</span><br><span class="line">        let c: Color = Color.Green;</span><br><span class="line">        </span><br><span class="line">        enum Color &#123;</span><br><span class="line">          Red = 1,</span><br><span class="line">          Green = 2,</span><br><span class="line">          Blue = 4,</span><br><span class="line">        &#125;</span><br><span class="line">        let c: Color = Color.Green;</span><br><span class="line">        </span><br><span class="line">        enum Gender &#123;</span><br><span class="line">            male = 0,</span><br><span class="line">            female = 1</span><br><span class="line">        &#125;</span><br><span class="line">        let i: &#123;name: string,gender: Gender&#125;;</span><br><span class="line">        i = &#123;name: &quot;kittates&quot;,gender: Gender.male&#125;;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
<li>
<p>类型断言</p>
<ul>
<li>
<p>有些情况下，变量的类型对于我们来说是很明确，但是TS编译器却并不清楚，此时，可以通过类型断言来告诉编译器变量的类型，断言有两种形式：</p>
<ul>
<li>
<p>第一种：as</p>
<ul>
<li>
<pre><code class="language-typescript">  let someValue: unknown = &quot;this is a string&quot;;
  let strLength: number = (someValue as string).length;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 第二种：&lt;string&gt; &lt;number&gt;</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        let someValue: unknown = &quot;this is a string&quot;;</span><br><span class="line">        let strLength: number = (&lt;string&gt;someValue).length;</span><br></pre></td></tr></table></figure>


</code></pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>
<p>&amp;型</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">j</span>: &#123;<span class="attr">name</span>: <span class="built_in">string</span>&#125; &amp; &#123;<span class="attr">age</span>: <span class="built_in">number</span>&#125;;</span><br><span class="line">j = &#123;<span class="attr">name</span>: <span class="string">&quot;kittates&quot;</span>,<span class="attr">age</span>: <span class="number">12</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>声明了j必须包含name:string类型的数据和age:number类型的数据，不能多，也不能少。</p>
</li>
<li>
<p>类型别名</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> myType = <span class="number">1</span> | <span class="number">2</span> | <span class="number">3</span> | <span class="number">4</span> | <span class="number">5</span>		<span class="comment">//另起一个名字</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">k</span>: myType</span><br><span class="line">k = <span class="number">2</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="3、TS编译选项"><a class="header-anchor" href="#3、TS编译选项">¶</a>3、TS编译选项</h2>
<ul>
<li>
<p>自动编译文件</p>
<ul>
<li>
<p>编译文件时，使用 -w 指令后，TS编译器会自动监视文件的变化，并在文件发生变化时对文件进行重新编译。</p>
</li>
<li>
<p>示例：</p>
<ul>
<li>
<pre><code class="language-shell">  tsc xxx.ts -w
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    如果要监视每个文件，就要为每个文件都开启一个tsc监视，会显得繁琐，所以需要能够对整个项目监视并自动重新编译。</span><br><span class="line"></span><br><span class="line">- 自动编译整个项目</span><br><span class="line"></span><br><span class="line">    - 如果**直接使用tsc指令**，则可以自动将当前项目下的所有ts文件编译为js文件。</span><br><span class="line"></span><br><span class="line">    - 但是能直接使用tsc命令的前提时，要先**在项目根目录下创建一个ts的配置文件 tsconfig.json**</span><br><span class="line"></span><br><span class="line">    - tsconfig.json是一个JSON文件，添加配置文件后，只需只需 tsc 命令即可完成对整个项目的编译</span><br><span class="line"></span><br><span class="line">        使用`tsc --init`命令会自动生成相应的`tsconfig.json`文件，然后在使用`tsc`或者`tsc -w`即可</span><br><span class="line"></span><br><span class="line">    - 配置选项：</span><br><span class="line"></span><br><span class="line">        &lt;p style=&quot;color: pink&quot;&gt;一个*表示任意文件，**表示任意目录&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">        - include</span><br><span class="line"></span><br><span class="line">            - 定义希望被编译文件所在的目录</span><br><span class="line"></span><br><span class="line">            - 默认值：[&quot;\*\*/\*&quot;]</span><br><span class="line"></span><br><span class="line">            - 示例：</span><br><span class="line"></span><br><span class="line">                - ```json</span><br><span class="line">                    &quot;include&quot;:[&quot;src/**/*&quot;, &quot;tests/**/*&quot;]</span><br></pre></td></tr></table></figure>

      - 上述示例中，所有src目录和tests目录下的文件都会被编译

</code></pre>
</li>
<li>
<p>exclude</p>
<ul>
<li>
<p>定义需要排除在外的目录</p>
</li>
<li>
<p>默认值：[“node_modules”, “bower_components”, “jspm_packages”]</p>
</li>
<li>
<p>示例：</p>
<ul>
<li>
<pre><code class="language-json">  &quot;exclude&quot;: [&quot;./src/hello/**/*&quot;]
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">        - 上述示例中，src下hello目录下的文件都不会被编译</span><br><span class="line"></span><br><span class="line">- extends</span><br><span class="line"></span><br><span class="line">    - 定义被继承的配置文件</span><br><span class="line"></span><br><span class="line">    - 示例：</span><br><span class="line"></span><br><span class="line">        - ```json</span><br><span class="line">            &quot;extends&quot;: &quot;./configs/base&quot;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p>上述示例中，当前配置文件中会自动包含config目录下base.json中的所有配置信息</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>files</p>
<ul>
<li>
<p>指定被编译文件的列表，只有<strong>需要编译的文件少时</strong>才会用到</p>
</li>
<li>
<p>示例：</p>
<ul>
<li>
<pre><code class="language-json">  &quot;files&quot;: [
      &quot;core.ts&quot;,
      &quot;sys.ts&quot;,
      &quot;types.ts&quot;,
      &quot;scanner.ts&quot;,
      &quot;parser.ts&quot;,
      &quot;utilities.ts&quot;,
      &quot;binder.ts&quot;,
      &quot;checker.ts&quot;,
      &quot;tsc.ts&quot;
    ]
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    - 列表中的文件都会被TS编译器所编译</span><br><span class="line"></span><br><span class="line">- compilerOptions</span><br><span class="line"></span><br><span class="line">    - 编译选项是配置文件中**非常重要**也**比较复杂**的配置选项</span><br><span class="line"></span><br><span class="line">    - 在compilerOptions中包含多个子选项，用来完成对编译的配置</span><br><span class="line"></span><br><span class="line">        - 项目选项</span><br><span class="line"></span><br><span class="line">            - target</span><br><span class="line"></span><br><span class="line">                - 设置ts代码编译的目标版本</span><br><span class="line"></span><br><span class="line">                - 可选值：</span><br><span class="line"></span><br><span class="line">                    - ES3（默认）、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext(表示最新版的)</span><br><span class="line"></span><br><span class="line">                - 示例：</span><br><span class="line"></span><br><span class="line">                    - ```json</span><br><span class="line">                        &quot;compilerOptions&quot;: &#123;</span><br><span class="line">                            &quot;target&quot;: &quot;ES6&quot;</span><br><span class="line">                        &#125;</span><br></pre></td></tr></table></figure>

              - 如上设置，我们所编写的ts代码将会被编译为ES6版本的js代码

      - lib：一般不需要修改，除非是在非web环境下

          - 指定代码运行时所包含的库（宿主环境）

          - 可选值：

              - ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext、DOM、WebWorker、ScriptHost ......

          - 示例：

              - ```json
                  &quot;compilerOptions&quot;: &#123;
                      &quot;target&quot;: &quot;ES6&quot;,
                      &quot;lib&quot;: [&quot;ES6&quot;, &quot;DOM&quot;],
                      &quot;outDir&quot;: &quot;dist&quot;,
                      &quot;outFile&quot;: &quot;dist/aa.js&quot;
                  &#125;
                  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- module</span><br><span class="line"></span><br><span class="line">    - 设置编译后代码使用的模块化系统</span><br><span class="line"></span><br><span class="line">    - 可选值：</span><br><span class="line"></span><br><span class="line">        - CommonJS(nodejs方式)、UMD、AMD、System、ES2020、ESNext、None</span><br><span class="line"></span><br><span class="line">    - 示例：</span><br><span class="line"></span><br><span class="line">        - ```typescript</span><br><span class="line">            &quot;compilerOptions&quot;: &#123;</span><br><span class="line">                &quot;module&quot;: &quot;CommonJS&quot;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>

      - outDir

          - 编译后文件的所在目录

          - 默认情况下，编译后的js文件会和ts文件位于相同的目录，设置outDir后可以改变编译后文件的位置

          - 示例：

              - ```json
                  &quot;compilerOptions&quot;: &#123;
                      &quot;outDir&quot;: &quot;dist&quot;
                  &#125;
                  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">        - 设置后编译后的js文件将会生成到dist目录</span><br><span class="line"></span><br><span class="line">- outFile</span><br><span class="line"></span><br><span class="line">    - **将所有的文件编译为一个js文件**</span><br><span class="line"></span><br><span class="line">    - 默认会将所有的编写在全局作用域中的代码合并为一个js文件，如果module制定了None、System或AMD则会将模块一起合并到文件之中</span><br><span class="line"></span><br><span class="line">    - 示例：</span><br><span class="line"></span><br><span class="line">        - ```json</span><br><span class="line">            &quot;compilerOptions&quot;: &#123;</span><br><span class="line">                &quot;outFile&quot;: &quot;dist/app.js&quot;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>

          &lt;p style=&quot;color: pink&quot;&gt;但是outFile 仅支持 &quot;amd&quot; 和 &quot;system&quot; 模块。&lt;/p&gt;

      - rootDir

          - 指定代码的根目录，默认情况下编译后文件的目录结构会以最长的公共目录为根目录，通过rootDir可以手动指定根目录

          - 示例：

              - ```json
                  &quot;compilerOptions&quot;: &#123;
                      &quot;rootDir&quot;: &quot;./src&quot;
                  &#125;
                  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- allowJs</span><br><span class="line"></span><br><span class="line">    - 是否对js文件编译，默认是不对JS编译的。如果源文件中含有JS文件，allowJs为false时，目标文件中不会有JS文件</span><br><span class="line"></span><br><span class="line">- checkJs</span><br><span class="line"></span><br><span class="line">    - 是否对js文件进行检查</span><br><span class="line"></span><br><span class="line">    - 示例：</span><br><span class="line"></span><br><span class="line">        - ```json</span><br><span class="line">            &quot;compilerOptions&quot;: &#123;</span><br><span class="line">                &quot;allowJs&quot;: true,</span><br><span class="line">                &quot;checkJs&quot;: true</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>

      - removeComments

          - 是否删除注释
          - 默认值：false

      - noEmit

          - 不对代码进行编译
          - 默认值：false

      - noEmitOnError:当有错误时不生成编译后的文件

      - sourceMap

          - 是否生成sourceMap
          - 默认值：false

          

  - 严格检查

      - strict：建议开启，所以其默认值为true

          - 启用所有的严格检查，默认值为true，**设置后相当于开启了所有的严格检查**

          js中在文件开头使用`&quot;use strict&quot;;`就开启了严格模式，如下：

          <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="built_in">exports</span>, <span class="string">&quot;__esModule&quot;</span>, &#123; <span class="attr">value</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> hello_js_1 = <span class="built_in">require</span>(<span class="string">&quot;./hello.js&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(hello_js_1.<span class="property">default</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

          [参考1](https://wangdoc.com/javascript/oop/strict)

          [参考2](https://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html)

      - alwaysStrict

          - 总是以严格模式对代码进行编译

      - noImplicitAny

          - 禁止隐式的any类型

          没有指定一个变量的类型时默认为any，所以使用noImplicityAny可以禁用any类型

      - noImplicitThis

          - 禁止类型不明确的this，例如如下就会报错

          <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="variable language_">this</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

          如果指明了this的类型，就可以使用，如下：

          <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"><span class="variable language_">this</span>:Window</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="variable language_">this</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

          

      - strictBindCallApply

          - 严格检查bind、call和apply的参数列表

      - strictFunctionTypes

          - 严格检查函数的类型

      - strictNullChecks

          - 严格的空值检查

          <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> box1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;box&#x27;</span>);</span><br><span class="line">box1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">111</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

          例如上述代码，获取的box1可能为空，所以设置strictNullChecks为true后，可能会检测错来

          ![image-20240305103616210](image-20240305103616210.png)

          可以改为如下：

          <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> box1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;box&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(box1) &#123;	<span class="comment">//先判断是否为Null，然后再去绑定事件</span></span><br><span class="line">    box1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="number">111</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

          如果已经确定了box1确实存在，则可以使用!来抑制。！为空抑制运算符

          <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let box1 = document.querySelector(&#x27;box&#x27;)!;</span><br></pre></td></tr></table></figure>

      - strictPropertyInitialization

          - 严格检查属性是否初始化 

  - 额外检查

      - noFallthroughCasesInSwitch
          - 检查switch语句包含正确的break
      - noImplicitReturns
          - 检查函数没有隐式的返回值
      - noUnusedLocals
          - 检查未使用的局部变量
      - noUnusedParameters
          - 检查未使用的参数

  - 高级

      - allowUnreachableCode
          - 检查不可达代码
          - 可选值：
              - true，忽略不可达代码
              - false，不可达代码将引起错误
      - noEmitOnError
          - 有错误的情况下不进行编译
          - 默认值：false

</code></pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4、webpack"><a class="header-anchor" href="#4、webpack">¶</a>4、webpack</h2>
<p style="color: red">不同的版本可能会报错，配置信息看snake项目</p>
<ul>
<li>
<p>通常情况下，实际开发中我们都需要使用构建工具对代码进行打包，TS同样也可以结合构建工具一起使用，下边以webpack为例介绍一下如何结合构建工具使用TS。</p>
</li>
<li>
<p>步骤：</p>
<ol>
<li>
<p>初始化项目</p>
<ul>
<li>进入项目根目录，执行命令 <code> npm init -y</code>
<ul>
<li>主要作用：创建package.json文件</li>
</ul>
</li>
</ul>
</li>
<li>
<p>下载构建工具</p>
<ul>
<li>
<p><code>npm i -D webpack webpack-cli webpack-dev-server typescript ts-loader clean-webpack-plugin</code></p>
<ul>
<li>
<p>共安装了7个包</p>
<p><img src="/2024/05/20/2024-5-20/image-20240305141645661.png" alt="image-20240305141645661"></p>
<ul>
<li>
<p>webpack</p>
<ul>
<li>构建工具webpack</li>
</ul>
</li>
<li>
<p>webpack-cli</p>
<ul>
<li>webpack的命令行工具</li>
</ul>
</li>
<li>
<p>webpack-dev-server</p>
<ul>
<li>webpack的开发服务器，可以根据项目的改变自动编译并运行，实时更新</li>
</ul>
<p>在<code>package.json</code>中需要添加:</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;start&quot;: &quot;webpack serve --open chrome.exe&quot;</span><br></pre></td></tr></table></figure>
<p>启动webpack服务器，并在Chrome中运行。</p>
<p>执行如下命令来启动服务器</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm run start</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">or</span></span><br><span class="line">npm start</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>typescript</p>
<ul>
<li>ts编译器</li>
</ul>
</li>
<li>
<p>ts-loader</p>
<ul>
<li>ts加载器，用于在webpack中编译ts文件</li>
</ul>
</li>
<li>
<p>html-webpack-plugin</p>
<ul>
<li>webpack中html插件，用来自动创建html文件，并引入相应的文件</li>
</ul>
</li>
<li>
<p>clean-webpack-plugin</p>
<ul>
<li>webpack中的清除插件，每次构建都会先清除dist目录，以保证dist中的内容都是当前最新的。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>根目录下创建webpack的配置文件webpack.config.js</p>
<ul>
<li>
<pre><code class="language-javascript">  const path = require('path');
  const HTMLWebpackPlugin = require('html-webpack-plugin');
  const &#123;CleanWebpackPlugin&#125; = require('clean-webpack-plugin');
  
  module.exports = &#123;  
      entry: './src/index.ts',    //指定入口文件
      devtool: &quot;inline-source-map&quot;,
      devServer: &#123;
          contentBase: './dist'
      &#125;,
      output: &#123;   
          path: path.resolve(__dirname,'dist'), //指定打包后的文件存放的目录
          filename: 'bundle.js',  //打包后的文件名
      &#125;,
      module: &#123;   //指定webpack打包时要使用的模块
          rules: [    //指定要加载的规则
              &#123;
                  test: /\.ts$/,  //test指定的是规则生效的文件，可以使用正则
                  use: 'ts-loader',    //针对上面的文件使用ts-loader
                  exclude: /node_modules/,    //要排除的文件
              &#125;
          ]
      &#125;,
      //放置插件
      plugins: [
          new CleanWebpackPlugin(),
          new HTMLWebpackPlugin(&#123; //自动生成html文件，并引入先关的资源
              title:'KITTATES',   //添加title配置项，设置生成的html title为KITTATES
              // template: './src/index.html',   //生成的html模板是根据这个template生成的
          &#125;),    
      ],
      resolve: &#123;
          extensions: ['.ts','.js','.jsx'],    //ts、js都可以作为模块使用
      &#125;
  &#125;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">4. 根目录下创建tsconfig.json，配置可以根据自己需要，是一个`json`文件</span><br><span class="line"></span><br><span class="line">    - ```json</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;compilerOptions&quot;: &#123;</span><br><span class="line">                &quot;target&quot;: &quot;ES2015&quot;,</span><br><span class="line">                &quot;module&quot;: &quot;ES2015&quot;,</span><br><span class="line">                &quot;strict&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
<li>
<p>修改package.json添加如下配置，是一个<code>json</code>文件</p>
<ul>
<li>
<pre><code class="language-json">  &#123;
    ...略...
    &quot;scripts&quot;: &#123;
    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,
    &quot;build&quot;: &quot;webpack&quot;,	//可以通过npm run build命令直接执行webpack
    &quot;serve&quot;: &quot;webpack serve --open --mode production&quot;	
  &#125;,
    ...略...
  &#125;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    6. 在src下创建ts文件，并在并命令行执行```npm run build```对代码进行编译，或者执行```npm start```来启动开发服务器</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">## 5、Babel</span><br><span class="line"></span><br><span class="line">&lt;p style=&quot;color:red&quot;&gt;这一块没看&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">- 经过一系列的配置，使得TS和webpack已经结合到了一起，除了webpack，开发中还经常需要结合babel来对代码进行转换以使其可以兼容到更多的浏览器，在上述步骤的基础上，通过以下步骤再将babel引入到项目中。</span><br><span class="line"></span><br><span class="line">    1. 安装依赖包：</span><br><span class="line"></span><br><span class="line">        - ```npm i -D @babel/core @babel/preset-env babel-loader core-js```</span><br><span class="line">        - 共安装了4个包，分别是：</span><br><span class="line">            - @babel/core</span><br><span class="line">                - babel的核心工具</span><br><span class="line">            - @babel/preset-env</span><br><span class="line">                - babel的预定义环境</span><br><span class="line">            - @babel-loader</span><br><span class="line">                - babel在webpack中的加载器</span><br><span class="line">            - core-js</span><br><span class="line">                - core-js用来使老版本的浏览器支持新版ES语法</span><br><span class="line"></span><br><span class="line">    2. 修改webpack.config.js配置文件</span><br><span class="line"></span><br><span class="line">        - ```javascript</span><br><span class="line">            ...略...</span><br><span class="line">            module: &#123;</span><br><span class="line">                rules: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        test: /\.ts$/,</span><br><span class="line">                        use: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                loader: &quot;babel-loader&quot;,</span><br><span class="line">                                options:&#123;</span><br><span class="line">                                    presets: [</span><br><span class="line">                                        [</span><br><span class="line">                                            &quot;@babel/preset-env&quot;,</span><br><span class="line">                                            &#123;</span><br><span class="line">                                                &quot;targets&quot;:&#123;</span><br><span class="line">                                                    &quot;chrome&quot;: &quot;58&quot;,</span><br><span class="line">                                                    &quot;ie&quot;: &quot;11&quot;</span><br><span class="line">                                                &#125;,</span><br><span class="line">                                                &quot;corejs&quot;:&quot;3&quot;,</span><br><span class="line">                                                &quot;useBuiltIns&quot;: &quot;usage&quot;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ]</span><br><span class="line">                                    ]</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                loader: &quot;ts-loader&quot;,</span><br><span class="line">            </span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        exclude: /node_modules/</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">            ...略...</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p>如此一来，使用ts编译后的文件将会再次被babel处理，使得代码可以在大部分浏览器中直接使用，可以在配置选项的targets中指定要兼容的浏览器版本。</p>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<h1>第二章：面向对象</h1>
<p style="color:pink">类是对象的抽象，对象是类的实例</p>
<p>面向对象是程序中一个非常重要的思想，它被很多同学理解成了一个比较难，比较深奥的问题，其实不然。面向对象很简单，简而言之就是程序之中所有的操作都需要通过对象来完成。</p>
<ul>
<li>举例来说：
<ul>
<li>操作浏览器要使用window对象</li>
<li>操作网页要使用document对象</li>
<li>操作控制台要使用console对象</li>
</ul>
</li>
</ul>
<p>一切操作都要通过对象，也就是所谓的面向对象，那么对象到底是什么呢？这就要先说到程序是什么，计算机程序的本质就是对现实事物的抽象，抽象的反义词是具体，比如：照片是对一个具体的人的抽象，汽车模型是对具体汽车的抽象等等。程序也是对事物的抽象，在程序中我们可以表示一个人、一条狗、一把枪、一颗子弹等等所有的事物。一个事物到了程序中就变成了一个对象。</p>
<p>在程序中所有的对象都被分成了两个部分数据和功能，以人为例，人的姓名、性别、年龄、身高、体重等属于数据，人可以说话、走路、吃饭、睡觉这些属于人的功能。数据在对象中被成为属性，而功能就被称为方法。所以简而言之，在程序中一切皆是对象。</p>
<h2 id="1、类（class）"><a class="header-anchor" href="#1、类（class）">¶</a>1、类（class）</h2>
<p>要想面向对象，操作对象，首先便要拥有对象，那么下一个问题就是如何创建对象。要创建对象，必须要先定义类，所谓的类可以理解为对象的模型，程序中可以根据类创建指定类型的对象，举例来说：可以通过Person类来创建人的对象，通过Dog类创建狗的对象，通过Car类来创建汽车的对象，不同的类可以用来创建不同的对象。</p>
<ul>
<li>
<p>定义类：</p>
<ul>
<li>
<pre><code class="language-typescript">  class 类名 &#123;
  	属性名: 类型;	//里面不使用
  	
  	constructor(参数: 类型)&#123;
  		this.属性名 = 参数;
  	&#125;
  	
  	方法名()&#123;
  		....
  	&#125;
  
  &#125;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 示例：</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        class Person&#123;</span><br><span class="line">            name: string;</span><br><span class="line">            age: number;</span><br><span class="line">        </span><br><span class="line">            constructor(name: string, age: number)&#123;</span><br><span class="line">                this.name = name;</span><br><span class="line">                this.age = age;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">            sayHello()&#123;</span><br><span class="line">                console.log(`大家好，我是$&#123;this.name&#125;`);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
<li>
<p>使用类：</p>
<ul>
<li>
<pre><code class="language-typescript">  const p = new Person('孙悟空', 18);
  p.sayHello();
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## 2、面向对象的特点</span><br><span class="line"></span><br><span class="line">- 封装</span><br><span class="line"></span><br><span class="line">    - 对象实质上就是属性和方法的容器，它的主要作用就是存储属性和方法，这就是所谓的封装</span><br><span class="line"></span><br><span class="line">    - 默认情况下，对象的属性是可以任意的修改的，为了确保数据的安全性，在TS中可以对属性的权限进行设置</span><br><span class="line"></span><br><span class="line">    - 只读属性（**readonly**）：</span><br><span class="line"></span><br><span class="line">        - 如果在声明属性时添加一个readonly，则属性便成了只读属性无法修改</span><br><span class="line"></span><br><span class="line">    - TS中属性具有三种修饰符：</span><br><span class="line"></span><br><span class="line">        - public（默认值），可以在类、子类和对象中修改</span><br><span class="line">        - protected ，可以在类、子类中修改</span><br><span class="line">        - private ，可以在类中修改</span><br><span class="line"></span><br><span class="line">    - 示例：</span><br><span class="line"></span><br><span class="line">        - public</span><br><span class="line"></span><br><span class="line">            - ```typescript</span><br><span class="line">                class Person&#123;</span><br><span class="line">                    public name: string; // 写或什么都不写都是public</span><br><span class="line">                    public age: number;</span><br><span class="line">                </span><br><span class="line">                    constructor(name: string, age: number)&#123;</span><br><span class="line">                        this.name = name; // 可以在类中修改</span><br><span class="line">                        this.age = age;</span><br><span class="line">                    &#125;</span><br><span class="line">                </span><br><span class="line">                    sayHello()&#123;</span><br><span class="line">                        console.log(`大家好，我是$&#123;this.name&#125;`);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                class Employee extends Person&#123;</span><br><span class="line">                    constructor(name: string, age: number)&#123;</span><br><span class="line">                        super(name, age);</span><br><span class="line">                        this.name = name; //子类中可以修改</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                const p = new Person(&#x27;孙悟空&#x27;, 18);</span><br><span class="line">                p.name = &#x27;猪八戒&#x27;;// 可以通过对象修改</span><br></pre></td></tr></table></figure>

  - protected

      - ```typescript
          class Person&#123;
              protected name: string;
              protected age: number;
          
              constructor(name: string, age: number)&#123;
                  this.name = name; // 可以修改
                  this.age = age;
              &#125;
          
              sayHello()&#123;
                  console.log(`大家好，我是$&#123;this.name&#125;`);
              &#125;
          &#125;
          
          class Employee extends Person&#123;
          
              constructor(name: string, age: number)&#123;
                  super(name, age);
                  this.name = name; //子类中可以修改
              &#125;
          &#125;
          
          const p = new Person('孙悟空', 18);
          p.name = '猪八戒';// 不能修改
          <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- private</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        class Person&#123;</span><br><span class="line">            private name: string;</span><br><span class="line">            private age: number;</span><br><span class="line">        </span><br><span class="line">            constructor(name: string, age: number)&#123;</span><br><span class="line">                this.name = name; // 可以修改</span><br><span class="line">                this.age = age;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">            sayHello()&#123;</span><br><span class="line">                console.log(`大家好，我是$&#123;this.name&#125;`);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        class Employee extends Person&#123;</span><br><span class="line">        </span><br><span class="line">            constructor(name: string, age: number)&#123;</span><br><span class="line">                super(name, age);</span><br><span class="line">                this.name = name; //子类中不能修改</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        const p = new Person(&#x27;孙悟空&#x27;, 18);</span><br><span class="line">        p.name = &#x27;猪八戒&#x27;;// 不能修改</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p><strong>属性存取器</strong></p>
<ul>
<li>
<p>对于一些不希望被任意修改的属性，可以将其设置为private</p>
</li>
<li>
<p>直接将其设置为private将导致无法再通过对象修改其中的属性</p>
</li>
<li>
<p>我们可以在类中定义一组读取、设置属性的方法，这种对属性读取或设置的属性被称为属性的存取器</p>
</li>
<li>
<p>读取属性的方法叫做setter方法，设置属性的方法叫做getter方法</p>
</li>
<li>
<p>示例：</p>
<ul>
<li>
<pre><code class="language-typescript">  class Person&#123;
      private _name: string;
  
      constructor(name: string)&#123;
          this._name = name;
      &#125;
  
      get MyName()&#123;	//MyName是被调用时获取属性的方法名字
          return this._name;
      &#125;
  
      set MyName(name: string)&#123;	//同上
          this._name = name;
      &#125;
  
  &#125;
  
  const p1 = new Person('孙悟空');
  console.log(p1.MyName); // 通过getter读取name属性
  p1.MyName = '猪八戒'; // 通过setter修改name属性
  console.log(p1.MyName);
  
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 静态属性</span><br><span class="line"></span><br><span class="line">    - 静态属性（方法），也称为类属性。使用静态属性无需创建实例，通过类即可直接使用</span><br><span class="line"></span><br><span class="line">    - 静态属性（方法）使用static开头</span><br><span class="line"></span><br><span class="line">    - 示例：</span><br><span class="line"></span><br><span class="line">        - ```typescript</span><br><span class="line">            class Tools&#123;</span><br><span class="line">                static PI = 3.1415926;</span><br><span class="line">                </span><br><span class="line">                static sum(num1: number, num2: number)&#123;</span><br><span class="line">                    return num1 + num2</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            console.log(Tools.PI);</span><br><span class="line">            console.log(Tools.sum(123, 456));</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>实例属性：如下中的name即为实例属性</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&#x27;kittates&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>this</p>
<ul>
<li>在类中，使用this表示当前对象</li>
</ul>
</li>
</ul>
</li>
<li>
<p>继承</p>
<ul>
<li>
<p>继承时面向对象中的又一个特性</p>
</li>
<li>
<p>通过继承可以将其他类中的属性和方法引入到当前类中</p>
<ul>
<li>
<p>示例：</p>
<ul>
<li>
<pre><code class="language-typescript">  class Animal&#123;
      name: string;
      age: number;
  
      constructor(name: string, age: number)&#123;
          this.name = name;
          this.age = age;
      &#125;
  &#125;
  
  class Dog extends Animal&#123;
  
      bark()&#123;
          console.log(`$&#123;this.name&#125;在汪汪叫！`);
      &#125;
  &#125;
  
  const dog = new Dog('旺财', 4);
  dog.bark();
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 通过继承可以在不修改类的情况下完成对类的扩展</span><br><span class="line"></span><br><span class="line">- 重写</span><br><span class="line"></span><br><span class="line">    - 发生继承时，如果子类中的方法会替换掉父类中的同名方法，这就称为方法的**重写**</span><br><span class="line"></span><br><span class="line">    - 示例：</span><br><span class="line"></span><br><span class="line">        - ```typescript</span><br><span class="line">            class Animal&#123;</span><br><span class="line">                name: string;</span><br><span class="line">                age: number;</span><br><span class="line">            </span><br><span class="line">                constructor(name: string, age: number)&#123;</span><br><span class="line">                    this.name = name;</span><br><span class="line">                    this.age = age;</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">                run()&#123;</span><br><span class="line">                    console.log(`父类中的run方法！`);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            class Dog extends Animal&#123;</span><br><span class="line">            </span><br><span class="line">                bark()&#123;</span><br><span class="line">                    console.log(`$&#123;this.name&#125;在汪汪叫！`);</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">                run()&#123;</span><br><span class="line">                    console.log(`子类中的run方法，会重写父类中的run方法！`);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            const dog = new Dog(&#x27;旺财&#x27;, 4);</span><br><span class="line">            dog.bark();</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p>在子类中可以使用super来完成对父类的引用</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>抽象类（abstract class）</p>
<ul>
<li>
<p>抽象类是专门用来被其他类所继承的类，它只能被其他类所继承不能用来创建实例。只定义其结构，而其具体的实现有相应的继承它的子类来实现。</p>
</li>
<li>
<pre><code class="language-typescript">  abstract class Animal&#123;
      abstract run(): void;
      bark()&#123;
          console.log('动物在叫~');
      &#125;
  &#125;
  
  class Dog extends Animals&#123;
      run()&#123;
          console.log('狗在跑~');
      &#125;
  &#125;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">        - 使用abstract开头的方法叫做抽象方法，抽象方法没有方法体只能定义在抽象类中，继承抽象类时抽象方法必须要实现</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">## 3、接口（Interface）</span><br><span class="line"></span><br><span class="line">只有TS中由，JS中没有接口这个东西</span><br><span class="line"></span><br><span class="line">接口的作用类似于抽象类，不同点在于接口中的所有方法和属性都是没有实值的，换句话说接口中的所有方法都是抽象方法。**接口主要负责定义一个类的结构**，接口可以去限制一个对象的接口，对象只有包含接口中定义的所有属性和方法时才能匹配接口。同时，可以让一个类去实现接口，实现接口时类中要保护接口中的所有属性。**可以当成一个类型去使用**</span><br><span class="line"></span><br><span class="line">- 示例（检查对象类型）：</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        interface Person&#123;</span><br><span class="line">            name: string;</span><br><span class="line">            sayHello():void;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        function fn(per: Person)&#123;</span><br><span class="line">            per.sayHello();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        fn(&#123;name:&#x27;孙悟空&#x27;, sayHello() &#123;console.log(`Hello, 我是 $&#123;this.name&#125;`)&#125;&#125;);</span><br><span class="line">        </span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>示例（实现）</p>
<p><strong>下面的这种接口实现：实际上就是定义了一种标准，每个实现的类都需要具有这些统一的标准，而不能各自去实现</strong></p>
<ul>
<li>
<pre><code class="language-typescript">  interface Person&#123;
      name: string;
      sayHello():void;
  &#125;
  
  class Student implements Person&#123;	//实现接口内部的具体实现
      constructor(public name: string) &#123;
          this.name = name;
      &#125;
  
      sayHello() &#123;
          console.log('大家好，我是'+this.name);
      &#125;
  &#125;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 4、泛型（Generic）</span><br><span class="line"></span><br><span class="line">[参考泛型文档](https://ts.xcatliu.com/advanced/generics.html)</span><br><span class="line"></span><br><span class="line">定义一个函数或类时，有些情况下无法确定其中要使用的具体类型（返回值、参数、属性的类型不能确定），此时泛型便能够发挥作用。</span><br><span class="line"></span><br><span class="line">泛型可以实现用户将数据传给类</span><br><span class="line"></span><br><span class="line">- 举个例子：</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        function test(arg: any): any&#123;</span><br><span class="line">        	return arg;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p>上例中，test函数有一个参数类型不确定，但是能确定的是其返回值的类型和参数的类型是相同的，由于类型不确定所以参数和返回值均使用了any，但是很明显这样做是不合适的，首先使用any会关闭TS的类型检查，其次这样设置也不能体现出参数和返回值是相同的类型</p>
</li>
<li>
<p>使用泛型：</p>
</li>
<li>
<pre><code class="language-typescript">  function test&lt;T&gt;(arg: T): T&#123;
  	return arg;
  &#125;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 这里的```&lt;T&gt;```就是泛型，T是我们给这个类型起的名字（不一定非叫T），设置泛型后即可在函数中使用T来表示该类型。所以泛型其实很好理解，**就表示某个类型。**</span><br><span class="line"></span><br><span class="line">- 那么如何使用上边的函数呢？</span><br><span class="line"></span><br><span class="line">    - 方式一（直接使用）：</span><br><span class="line"></span><br><span class="line">        - ```typescript</span><br><span class="line">            test(10)</span><br></pre></td></tr></table></figure>

      - 使用时可以直接传递参数使用，**类型会由TS自动推断出来**，但有时编译器无法自动推断时还需要使用下面的方式

  - 方式二（指定类型）：

      - ```typescript
          test&lt;number&gt;(10)
          <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">        - 也可以在函数后手动指定泛型</span><br><span class="line"></span><br><span class="line">- 可以同时指定多个泛型，泛型间使用逗号隔开：</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        function test&lt;T, K&gt;(a: T, b: K): K&#123;</span><br><span class="line">            return b;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        test&lt;number, string&gt;(10, &quot;hello&quot;);</span><br></pre></td></tr></table></figure>

  - 使用泛型时，完全可以将泛型当成是一个普通的类去使用

</code></pre>
</li>
<li>
<p><strong>类中同样可以使用泛型</strong>：</p>
<ul>
<li>
<pre><code class="language-typescript">  class MyClass&lt;T&gt;&#123;
      prop: T;
  
      constructor(prop: T)&#123;
          this.prop = prop;
      &#125;
  &#125;
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 除此之外，也可以对泛型的范围进行约束</span><br><span class="line"></span><br><span class="line">    接口可以进行限制，，进而可以应用到泛型中</span><br><span class="line"></span><br><span class="line">    - ```typescript</span><br><span class="line">        interface MyInter&#123;</span><br><span class="line">            length: number;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        function test&lt;T extends MyInter&gt;(arg: T): number&#123;</span><br><span class="line">            return arg.length;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
<li>
<p>使用T extends MyInter表示泛型T必须是MyInter的子类，不一定非要使用接口类和抽象类同样适用。</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>项目：贪吃蛇</h1>
<p><img src="/2024/05/20/2024-5-20/image-20240305184543981.png" alt="image-20240305184543981"></p>
]]></content>
      <categories>
        <category>typescript</category>
      </categories>
      <tags>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>风起了</title>
    <url>/2024/05/03/2024-5-3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/2024/05/03/2024-5-3/1.png" alt="风起了封面图"></p>
<p>​	昨天晚上论文实在是写不下去了，就打算找了一部电影看。</p>
<p>​	我在动漫一栏中搜索时偶然间点中了这部电影的封面，于是自动播放起了该电影的部分片段。这一片段播放的是一个日本青年造飞机的故事，很感兴趣，于是就点进去看了，一直看到凌晨将近1点。</p>
<p><img src="/2024/05/03/2024-5-3/2.png" alt="内容"></p>
<p>​	电影具体的内容是二战日本零式战机的设计者崛越二郎的生平。从小对飞机有着浓厚的兴趣，但是由于身体上的缺陷，无法成为飞行员，在心中的那位伟大的飞机设计师的鼓舞下，立志要成为一名能够创造出新式战机的设计师。</p>
<p>​	后续的内容就是崛越在三菱公司设计飞机和游学时的故事，同时在游学时偶然间碰到了早期帮助过的女主。但是女主遗传了其母亲的肺结核，所剩时日不多，于是从疗养院独自前方崛越的工作处。</p>
<p><img src="/2024/05/03/2024-5-3/3.png" alt="女主"></p>
<p><img src="/2024/05/03/2024-5-3/4.png" alt="男主"></p>
<p>最终结局，哎，还是悲剧😢</p>
]]></content>
      <categories>
        <category>电影</category>
      </categories>
  </entry>
  <entry>
    <title>codepen test</title>
    <url>/2024/03/03/2024-3-3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用<code>https://codepen.io/</code>在线体验代码</p>
<p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="XWQJxZL" data-editable="true" data-user="kittates" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
  <span>See the Pen <a href="https://codepen.io/kittates/pen/XWQJxZL">
  hello world</a> by kittates (<a href="https://codepen.io/kittates">@kittates</a>)
  on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>
]]></content>
      <tags>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>this指向</title>
    <url>/2024/02/08/2024-2-8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>先看两段代码，分析各自的输出结果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&quot;Jerry&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> object = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span>,</span><br><span class="line">    <span class="attr">getFunc</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">object.<span class="title function_">getFunc</span>()();</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&quot;Jerry&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> object = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span>,</span><br><span class="line">    <span class="attr">getFunc</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> that = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(that.<span class="property">name</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">object.<span class="title function_">getFunc</span>()();</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<p>第一个输出Jerry，第二个输出Tom</p>
<p>这类问题可以简化为this的指向:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> object = &#123;</span><br><span class="line">    <span class="attr">getFunc</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;@1&quot;</span>,<span class="variable language_">this</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;@2&quot;</span>,<span class="variable language_">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">object.<span class="title function_">getFunc</span>()();</span><br></pre></td></tr></table></figure>
<p>当调用<code>object.getFunc()</code>时，由于<code>getNameFunc</code> 是一个方法，当它被调用时，它的执行上下文（this）会绑定到对象 <code>object</code>,此时的@1处的this指向的是object。但在该方法内部，它返回了另一个函数，我们假设令该返回的函数名为f1，<code>object.getFunc()</code>执行后，再执行f1() ， 由于该函数是在全局作用域下调用并执行的，所以@2处this指向window。</p>
<p>在上面最初的第二段代码中，用that保存了object中的this，所以在执行完后输出的是object中的name，也就是Tom；反观第一段代码，return出去的函数是在全局条件下调用执行的，所以this指向的是window，输出的也是window下的name，也就是Jerry了。</p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>this</tag>
      </tags>
  </entry>
  <entry>
    <title>小学</title>
    <url>/2024/02/05/2024-2-5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重新输入." data-whm="文章不能被校验, 不过您还是能看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="83e628b89e858d26c7df571831e1d1be863ab405dcc2367b55de2ff4dbea722c">10d79030e8222445804370796b90fca1c3a749c59a0f585838d23806ac11ee2076831055f9ec42335f85ebb628d34bffc14586d517393746fcb143c00eab5935d8b7f162b7ac4b0c27623f3054fcf917a63f8fbe2f57c6f9ad729d3f1e93aaca2c1bc9501a2d0143970fe3616b73425d22902c056d1a2c37f6d29f78f72176a421c452065c321934b2c7971b0ef90260fb7894d54cda22c3085879114876a8961facca8872d1bbaf2af27dc3211faf29914882402487d1bdea36f5224f715c176724e2b5780a7854ac4976875cd7579ae2d9faa794f0d956cef9f503c4e1ccfa4e085107045629f1998f98ce56d64454f339a138774e9c0539657af5ae0d0eeb678ff4d28dbbebda328738e747ad59a9a51146e98f28ca9431febd9c92ed14094a1c77c930e705317622264670276217ac0245dc53997af1b6c04f30c1d1693a858f3cfc441a7dbda43939fa9f0f3ef79c6a331f093612b4c64fa5841220b62ca19c2d5bfaef55edf37e36788d0aa73ff4b26aa579003a2634409b10debc86b69ca4188a0b3ed142f1741329329c9a5708061b62d8a014da7723d78b08194d95b520e3cf536157205808d8f73ddcea9475c05201222ae29ccb5b69ba07679aca509365fe8d960178e663b33c80f157a05a48b76f77f4bee43979ffd0145a1bda148aa1a7407542c878c13917486dd46fd3cb1e391dbe049aa270a12726408820fae9ccdd3b0956cb6264c9e0cf7bbb8b2987fc22b2c7de93df402de5cada2537538f86a2379f2db12a92ea8df102399551ff3f82739d03d65c3b295c310f59acdcc00207f99267f284e05a156db303199893d95f6419b25265430fe71754544c81a6c363814d5a14b5445d4b47ed6cec</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>鼠鼠！</title>
    <url>/2024/02/01/2024-2-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>😱</p>
<p><img src="/2024/02/01/2024-2-1/Snipaste_2024-01-29_21-05-19.png" alt></p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>git push,Time out?</title>
    <url>/2024/01/05/2024-1-5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天也是像往常一样要往github push，但是push了好几次有time out了，之前也曾出现过几次，经过一顿搜索查询后才知道，我不知道什么时候设置了git全局代理。<br>
关闭代理</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>引用名正则替换</title>
    <url>/2024/01/03/2024-1-3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取Markdown文件的内容</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./408/操作系统.md&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义替换图片标记的正则表达式模式</span></span><br><span class="line">  <span class="keyword">const</span> pattern = <span class="regexp">/\!\[image\-(\d+)\]\([^)]+\)/g</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 替换匹配的图片标记</span></span><br><span class="line">  <span class="keyword">const</span> replacedContent = data.<span class="title function_">replace</span>(pattern, <span class="function">(<span class="params">match, p1</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> imageTag = <span class="string">`&lt;img src=&quot;操作系统.assets/image-<span class="subst">$&#123;p1&#125;</span>.png&quot; alt=&quot;image-<span class="subst">$&#123;p1&#125;</span>&quot; style=&quot;zoom:33%;&quot;&gt;`</span>;</span><br><span class="line">    <span class="keyword">return</span> imageTag;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将替换后的内容写回文件</span></span><br><span class="line">  fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;your_操作系统.md&#x27;</span>, replacedContent, <span class="string">&#x27;utf8&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;图片标记替换完成！&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>马上就要上考场了</title>
    <url>/2023/12/20/2023-12-20/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>怎么形容我现在的状态呢？想学，但是又有点急躁，只能尽量的去压制着，谨慎着去控制，尽可能在这一坤天的时间内将页面调入内存。😢</p>
]]></content>
  </entry>
  <entry>
    <title>2013英二小短文</title>
    <url>/2023/09/22/2023-9-22/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    I can pick a date from the past 53 years and know instantly where I was, what happened in the news and even the day of the week. I’ve been able to do this since I was four.</p>
<p>​	I never feel overwhelmed with the amount of information my brain absorbs. My mind seems to be able to cope and the information is stored wasy neatly. When I think of a sad memory, I do what everyone does——try to put it to one side. I don’t think it’s harder for me just became my memory is clearer. Powerful memory doesn’t make my emotions any more acute or vived. I can recall the day my grandfather died and the sadness I felt when we went to the hospital the day before. I also remember that musical play <em>Hair</em> opened on the Broadway on the same day——they both just pop into my mind in the same way.</p>
<p>更像是一种对自我的评价。</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
  </entry>
  <entry>
    <title>假期回忆</title>
    <url>/2023/08/27/2023-8-27/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    8月24号下午16:11，老头突然上来说明后两天有考试，要占用教室，让我们把所有的书本等物品带走。</p>
<p>​	就这样，暑假也在老头的这声吆喝声中悄无声息地接近了尾声。</p>
<p>​	25 、26号这两天在图书馆度过的，期间伴随着天不停地哗啦啦的下雨。今天是27号，明天要去实习，下午将书带到了公教楼，准备洗个澡去，回来在公教楼继续学。</p>
<p>​	地点仍是在306，只不过当初的那批人现在只剩下了三个还在这个教室学习，也包括我在内，其余的都是一些新面孔了。</p>
<p>​	暑假期间也没有拍过多的图片，只是拍了两张空教室的，没有带着人一起拍。</p>
<p><img src="/2023/08/27/2023-8-27/1.jpg" alt></p>
<p><img src="/2023/08/27/2023-8-27/2.jpg" alt></p>
<p>​	虽说在同一教室学习了仅仅两个月左右，感觉让是有一种物是人非，人走离散的feeling。</p>
<p>​	留作一个纪念吧，所说在图书馆可能还会碰面，但这种情况也是少之又少的😞</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>愚</title>
    <url>/2023/08/23/2023-8-23/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重新输入." data-whm="文章不能被校验, 不过您还是能看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="35406c9ad0ce79d722f0e6c78a0a6a830833ca25b1af42a324f8b1e6710b848e">10d79030e8222445804370796b90fca1331cc27949fc41078acd1c35d52ceccb24608f63df5a436244f13e61d0da99d1aa9e16b7153725c7250f1d61a5ff01e7463bd3126ad107db65b0b0d46757569c305b40bfdc4598f4c27f97249026e44f72bf2e4836e6c3a2084a433d252fcb04cfae355a9bf770d322e0afb7210c8b17468790ee51ede0581cbec7fdbefe4e51ab2c617516d6ca517ab4a3fbd0acfb27db42c388d4350671ae7b78eac1ec72b4f57d06090a549269bc279a123600cf271e4dd25920e2f2c4178c121e432ebaec5a197aad4a51c2148731fd59c78f2a3f33e2a6041a66b46e717987a4b88a27b4317815bfd7c356f188ae0031c93119ada5fbef625d162ef2db0c7394ee4b498648a218d4880979c0b19f78e0407d50768993592d580f0d29fdc0ca6d5d6a6c9d4254a6f51767eb50a56f57b60c9a2dba64ba0a9760549ca14832eb7e5e4a44ddf9834376346ae9044f24f952c372ddb719fddf230abfc762ef7bb2a50186fb096e9d161bd909fdac3d7d398ff5c9554811a25308878c48a9317b6b0a3969aef3ed0322d25de2f9ad22ca3c97f34f46b950c1d356e2645dc101a0c7a9f63fe04222f698dfa7a0121bfec9c60f0a5ca370d5808f8ee0b0a7dcbdb7afe9709eff5909c2019657e19d0bf48c7c1586836b1112527dc2e4cd93afdedef4e0cd91103d702a7cb724c4a7aa876812639d3372d1f8d95872421ff754b162763f625e0cbb6a12402b23a905f649fcdecfb1ce68193e518cf92edb35ff046ebffe029932bc32080fc1cc425a251f3896e4cb1fc3f76003fab9c27df87f4e7d13fe5da80863e643bfddbd15905be78b81350236ac3801ac3268e54f633647b362c54209b1bf3531056dafcc5a8b307ba6bf01064237a980ee629e664883852a08705cb8f9c6a3746aa6e80bff6f08bbd1481f0675014628ac7aec574aa8cf3d2ee4b224fc20e25a30e1acb0d27a4e7d91c4fd3cff95831cfff7c95fd9298acb045e322e9d2949f820d1cd2187caed2bfb575ea7cd5d43cdc810f2810edf56e0b33dbd32e4e5bfb11b6edf82e090dd6712bc81fe97486e476bf324aa8b6369de62c673ef58055a66045847b60d001e40dfd739da82ce4dd69e6171778a644fcadc66b65b717a092fd6b7cca31377f50784d3ad99b9d04899178dbe52c30b762f9a27c779aaa77277adaae8640bb721db051b5f4690290e9a4b15ee225b16faa1a15d4d8eba09876251c902e742f99d87481a5e36a9d812564e8a5d2474b36af314b7db24fb224869757a8b293fdc8f6f0899d1ac13c828d6a13359b67ff41a9b00fc5835beba152e9a08d3ec76cb875d23e4ec188fdf31a39a7df85d4331e431c2eea07b65ceaf38974ead0b3f68bfaf8192b86f36a53ec310a2cf70d11add5927a3a02f2fe0a867b63c6a9e9cf83babf857e00d6544abcb7ceeab24eb8e8d3795d8ae17bd2b2d4964b30fd4585de613ea8826bfeeb6660b794cdebc396afe876c8901832232683ef3ed5f21d90870d7c34fe98ba3a01d6d67c664ba415f753376eb656eddba3c0eeb920eb8423c2d4cdc6a64cb2c412b6672b81d771b932b9d21b9d03053850d59bc32ef17e2b2a8e5fb97a2d14a38402ee7c1848e2ad63122c4c7b44e1b7aea4d6adad159136b7d777d66d1f93f35c67e937734546db40269e4323ac3bde448d5ac24367cff69d71668e104a847def4e1e726b718242ec6f663f67aa4d1700c8455aa80d5e70e6116ff453a51afb7d351254273974d85340c4cb2151864c97a5ee08ed21c01dec450107f0e1da0f73f78f295598375b258f2a161f238e7f9d911d35dec434f07b8866808e176d6e2fe5577203b4255326819ca84bd5eeb82283d7e778c0fea2f842c73e19be8fd0262c6a90b35cbc48f8a966878d60edda57aa4e9ef2fbd30f580fd042d5e332f059bcbb5d8263bb689aed5a41e2ef711bc8fcc84470619aa31afa44ee00e64a9562b4ffa16847371d2a82436ee5bcf172c4afb988e26ccd43af51298244429a0c41ec2e5a040caa854088499ff2aa1fa2ec14ca774ee0eeb5aa6f3e772d8f394b3612ddd6794db8162c9b891c665a6144067cc6a52f82c1b5ff9ab9ce4fda03a162be6cc8663a7536f7d15d38215a1561b08301b8bf7949e142a6726b0986feb16301265644d373b6cf84585985417e4702646fc71116c41a9c7596f34233c65b4203f0bde336f7655c383c75abb4d70a17ff93161724aa2d72b33ab83475186b91f35a0e604a353cd36d191e44dc2639c</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>完型又TM做破防了~</title>
    <url>/2023/07/27/2023-7-27/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>nnd,今天晚上认认真真地做了07年的完型，结果TM错了13个，哎，瞬间感觉这英语真的是**。😢</p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>破防~</title>
    <url>/2023/07/17/2023-7-17/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    这垃圾英语阅读，给哥们我做破防了，原文就这样写着了是don’t have time，而且后面还重复了there time for…，TM答案就是硬给我幻想着推导出一个结论答案，我踏马😄呵呵了。</p>
<p>​    04~09年的做完了，总共24篇，总体情况不容乐观，还有待提升和加强，英语语句的流畅度还有待进一步提高，还是太慢了，照这样的速度，3个小时除去作文也就勉勉强强能做完。</p>
<p>​    TM太气人了，测，想想犯的错误就blast。</p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>QQ找回--一些回念</title>
    <url>/2023/07/09/2023-7-9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​		  今天下午休息的时候回想起来上六、七年级时使用的QQ号（距离现在也有9年多了），当时忘记了密码，又重新申请了一个新的，也就是如今所使用的。现在想找回密码重新登陆一下，那个号上面有着值得两位怀念的亲人。</p>
<p>​		  成功找回了。看了看他上一次的动态还是在15年，那时他还没有出事，如果正常发展的话，也就不会有后面一连串的连锁的烂事了。想想距今也将近9年了啊。权当是一个念想、回忆吧，仅在我的前十五年里出现过，</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>学 or 摆 ?</title>
    <url>/2023/06/30/2023-6-30/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>MD，学学学😠，奋斗起来此时🏃，不学何时学💦，待到明年春暖花开时学？否否否👍</p>
<p>拒绝开摆✋，only one word，that’s:</p>
<p>​                                                                                             👇</p>
<p>​                                                                                       👉  <strong>学</strong>  👈</p>
<p>​                                                                                              👆</p>
<p><strong>想开摆</strong> ？🖕</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>week summary</title>
    <url>/2023/05/18/2023-5-18/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​		计划OS和计算机网络在六月底结束，也就是说用一个月零几天的时间来快速的过一遍，这期间还会有考试和六级，但不得不紧张起来了，前面的数据结构和计组耗费了太多的时间了，尤其是做计组的那些大题，也不能这么太绝对，现在看了大题之后再去学习的话是有思路的。</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>emotional damage</title>
    <url>/2023/05/09/2023-5-9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	测，今天晚上做计组的真题大题给我做破防了，真是测了啊。<br>
​	TM的这都五月份了，计组还有两章没看，DS也忘了，OS和NW还没开，真是大测特测啊，这TM还能复习的完吗。还TM要期末考试，考尼玛呢考，测了算了。<br>
​	测，以后节约时间，中午下午不往宿舍回了，真TM浪费时间。一天就TM学那点时间，真正高效的时间占比又TM那么少，效率那么低，测了啊。我TM要在七月底完成所有的复习：math、408、English reading。测了，忘了还有TM的政治，呃呃啊啊啊，测测测。</p>
<p>​	哎，复习了这么长时间，第一次emotional damage。</p>
<hr>
<p>不说了，继续做题去了。<br>
😭 😭 😭</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>感慨</title>
    <url>/2023/05/08/2023-5-8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	今天在二教平阶406的后门墙角处看到了这样的一张便利贴</p>
<img src="/2023/05/08/2023-5-8/IMG_20230507_221455.jpg" alt="IMG_20230507_221455" style="zoom: 60%;">
<p>似乎是上年考研的时候他们留下的。那时候我也在教室的，在三楼。当时人挺多的，图书馆暂时关闭了。</p>
<hr>
<p>今天看了一段视频，感慨了一番。是时候冲刺拼搏了，到别的地方拼搏。</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>测试0v7670摄像头</title>
    <url>/2023/04/28/2023-4-28/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="测试出来的图片似乎失真了？"><a class="header-anchor" href="#测试出来的图片似乎失真了？">¶</a>测试出来的图片似乎失真了？</h2>
<p>​	今天晚上熬大夜来测试arduino uno与0v7670之间的数据通信。在网上找了很多资料用来参考。结果在运行后发现传输出来的图片是下面这样儿的：</p>
<p><img src="/2023/04/28/2023-4-28/first.jpg" alt></p>
<p><img src="/2023/04/28/2023-4-28/second.jpg" alt></p>
<p>这两张图片看起来有点糊啊，暂时不知道是什么问题造成的。</p>
<hr>
<p>一下内容是2023.4.28 22:50时  补充的内容</p>
<p><img src="/2023/04/28/2023-4-28/third.jpg" alt></p>
<p><img src="/2023/04/28/2023-4-28/forth.jpg" alt></p>
<p>今天正好是五一假期的前一天，所以我决定暂时休息一晚上，用来调试昨天晚上还没有完成的ov7670。</p>
<p>又经过一番Google，调整这个参数（可以为9、10、11、13）能够在一定程度上将清晰的画面传入到机器中</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">writeReg</span>(<span class="number">0x11</span>, <span class="number">9</span>);</span><br></pre></td></tr></table></figure>
<p>总体来说是能够看到画面了，但是还是有一点糊 ，再就是数据传输的延迟比较大。</p>
<p>以后再找时间调整调整。</p>
]]></content>
      <categories>
        <category>circuit</category>
      </categories>
  </entry>
  <entry>
    <title>一切由人类设计的事物，都不要去解释，而是要去共情！</title>
    <url>/2023/04/22/cs/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前几天，包括这几天在学习计算机组成原理这门课中的数据运算时，总会感觉到有些迷茫：它到底为什么要这样设计，这样设计的原因是什么。当我在搜索某个问题的时候，我在知乎上面看到了这样一句：</p>
<blockquote>
<p>一切由人类设计的事物，都不要去解释，而是要去共情！</p>
</blockquote>
<p>😭😪</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
  </entry>
  <entry>
    <title>栈的应用-括号匹配</title>
    <url>/2023/02/24/%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/2023/02/24/%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/1.png" alt></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="type">char</span> data[MaxSize];</span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">initStack</span><span class="params">(SqStack &amp;s)</span></span>&#123;</span><br><span class="line">    s.top = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">push</span><span class="params">(SqStack &amp;s,<span class="type">char</span> e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s.top==MaxSize<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    s.data[++s.top] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">pop</span><span class="params">(SqStack &amp;s,<span class="type">char</span> &amp;e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s.top == <span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    e = s.data[s.top--];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Empty</span><span class="params">(SqStack s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s.top == <span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">brackCheck</span><span class="params">(<span class="type">char</span> str[],<span class="type">int</span> length)</span></span>&#123;</span><br><span class="line">    SqStack s;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">initStack</span>(s)) cout&lt;&lt;<span class="string">&quot;initStack yes\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;initStack error\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i]==<span class="string">&#x27;(&#x27;</span> || str[i]==<span class="string">&#x27;&#123;&#x27;</span> || str[i]==<span class="string">&#x27;[&#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">push</span>(s,str[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// if(Empty(s)) return false;</span></span><br><span class="line">            <span class="type">char</span> topELem;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">pop</span>(s,topELem)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;)&#x27;</span> &amp;&amp; topELem!=<span class="string">&#x27;(&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;&#125;&#x27;</span> &amp;&amp; topELem!=<span class="string">&#x27;&#123;&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;]&#x27;</span> &amp;&amp; topELem!=<span class="string">&#x27;[&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Empty</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> syntan[] = &#123;<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;)&#x27;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> length = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">brackCheck</span>(syntan,length)) cout&lt;&lt;<span class="string">&quot;correct\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;not correct\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>DS</category>
      </categories>
      <tags>
        <tag>DS</tag>
      </tags>
  </entry>
  <entry>
    <title>清灰</title>
    <url>/2023/02/13/%E6%B8%85%E7%81%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	电脑开机一会儿散热扇就嗡嗡的转，今天趁着有空，给它清清灰。</p>
<p>​	打开一看，出风口都塞满了快，散热扇叶也都被灰裹着。</p>
<img src="/2023/02/13/%E6%B8%85%E7%81%B0/clean_dusk.jpg" style="zoom:75%">
<p>几天前看family guy的时候，发现Brian模仿了下面一段视频，很有魔性</p>
<video src="https://www.albinoblacksheep.com/mp4/banana(www.albinoblacksheep.com).mp4" align="center" height="40%" width="40%" controls="controls" proload="proload" poster="https://ts1.cn.mm.bing.net/th/id/R-C.5b75af4feb5710b859af776bc2b0a308?rik=v1ehfltkfkD2gw&riu=http%3a%2f%2fvignette2.wikia.nocookie.net%2fmighty355%2fimages%2ff%2ffb%2fBrian_griffin_by_mighty355-d7u8wtl.png%2frevision%2flatest%3fcb%3d20150629144513&ehk=%2fQ5RbQ8d5EApmFzkUFMu2BJOZGm4bx5e%2bAeLlOPZ7MM%3d&risl=&pid=ImgRaw&r=0">
<p><a href="https://www.bilibili.com/video/BV1oA4y1R7Fk">Brian模仿</a></p>
<p><a href="https://www.bilibili.com/video/BV1pj411M7A3">Stewie模仿</a></p>
</video>]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>行内块元素缝隙问题</title>
    <url>/2023/01/20/%E8%A1%8C%E5%86%85%E5%9D%97%E5%85%83%E7%B4%A0%E7%BC%9D%E9%9A%99%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天重新学习css的过程中发现了一个小问题，如下：</p>
<p><img src="/2023/01/20/%E8%A1%8C%E5%86%85%E5%9D%97%E5%85%83%E7%B4%A0%E7%BC%9D%E9%9A%99%E9%97%AE%E9%A2%98/1.png" alt></p>
<p><img src="/2023/01/20/%E8%A1%8C%E5%86%85%E5%9D%97%E5%85%83%E7%B4%A0%E7%BC%9D%E9%9A%99%E9%97%AE%E9%A2%98/2.png" alt></p>
<p>行内块元素之间有一个小缝隙，原本以为是div自带margin，通过margin:0清除后发现缝隙仍在，想到用浮动来消除，果然可以。但是为什么有这个东西呢？</p>
<p>Google之后发现这是有标签之间的空格、换行等其他造成的，如果换成下面这样，页面就会在一行上面显示</p>
<p><img src="/2023/01/20/%E8%A1%8C%E5%86%85%E5%9D%97%E5%85%83%E7%B4%A0%E7%BC%9D%E9%9A%99%E9%97%AE%E9%A2%98/3.png" alt></p>
<p>其它的解决方法:</p>
<p>为父容器设置font-size: 0;这是为了让其内部文字消失</p>
<p><strong>参考：</strong></p>
<ul>
<li><a href="https://blog.csdn.net/w390058785/article/details/80097061">参考1</a></li>
<li><a href="https://blog.51cto.com/u_14046111/2799631">参考2</a></li>
</ul>
<p>这一次的学习中又发现了往前未察觉到的问题，果然还得继续学👨‍🎓</p>
]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>Sun Jan 15 2023 17:59:42 GMT+0800 (中国标准时间)</title>
    <url>/2023/01/15/2023-1-15/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重新输入." data-whm="文章不能被校验, 不过您还是能看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="bfc093c59bee6f0c81eddf6ff74ecdf14122a0d900e78804bc76e7b18e547bcb">10d79030e8222445804370796b90fca1331cc27949fc41078acd1c35d52ceccb01e757594830f72e2cd32c0bb5009397f60225258c1f58df335a501bf4d7b185f7fb526045343f007808603aa681e50b716401abb288dd8e606af1f8c3f6c047495118c29855caa56862b27cc9aa5a232219ea9469f883662fd58cb948f6f2f033fdb9f6ae1f54c05b58dbc69390bbea0b330c2d91e82c709ac7c2c482857745e3cfd28b7e8210ab83f97ea66f84be3f48ced8773a475b2312483cc33965140a2b74d7bc31cba05e155c4007d0ae8f5026404d0df17ccdc494dc397d420ac36d96eaaf8e8ee475386898960d840d388582fccd046682f43dce4dd9162a2dd5f4</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>Tue Dec 20 2022 19:36:43 GMT+0800 (中国标准时间)</title>
    <url>/2022/12/20/2022-12-20/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	16号从学校回的家，17号在老家做核酸时发现14号在学校做的核酸结果还没出，感觉大事不妙。</p>
<p>​	果不其然，17号晚上嗓子就有点紧，我赶紧吃了片阿莫西林，晚上睡觉的时候感觉轻松了些。第二天也就是18号早上起来发现更紧了，早上吃饭的时候还好好的，身体没发现什么异常。18号上午11:35左右想在床上面躺躺，身体就突然冷了起来，不停的打寒颤。一开始我就以为是普通的感冒。随后身体是越来越不行了，这种冷的感觉一直持续了很长一段时间，之后身体就热起来了，四肢乏力，头也疼（但不是疼的最厉害的那种）。家里人就猜着是不是感染了。下午饭吃的藕，也就吃了那几口吧，当时那种状态真的吃不下东西，放到现在的我早就给他吃完了。下午3:35左右，来电话了，说是混管阳了。之后就一直躺在床上，难受、头疼，浑身乏力。晚上5点多，头疼的更厉害了：心脏泵血，太阳穴的血管就蹭蹭往外膨胀，感觉脑袋要炸了一样，想闭上眼睡过去，但是疼的直接睡不着，下午7:30左右，头疼的我都把下午吃的那几口饭给吐出来了。体温一直很高，晚上测了一次是39.8°C差一点就到40了。晚上吃了半片脑清片才迷迷糊糊的睡过去，睡得时候脑子里面很乱：感觉脑袋里面放了很多要干的事，而且还只能一个一个的做，打算挑一个吧还毫无头绪，一整晚就是这种状态。</p>
<p>​	19号上午打算去做个单管核酸。早饭喝了几勺子小米饭，吃了半个鸡蛋，把连花清瘟吃了就走了，那味儿太难闻了，胃里面咕咕叫。饭是一点都吃不下去。回来之后还是一直在床上面躺着，头还是很疼，但没有昨天晚上那样疼了。下午状态好了些，但是体温还是在38°C以上。晚上8点多核酸出来了：阳性，爸妈都是阴性。此时感觉状态好多了，就是嗓子还是有点紧紧地，晚上睡觉最里面发苦。</p>
<p>​	20号除了嗓子紧紧地不大舒服，其它的都正常了。算了算总共耗时1天半，感染这东西很难受。</p>
<p>​	我是怎么感染上了？</p>
<ul>
<li>在学校感染的（很大的概率），14号在学校测得核酸，17号还没出来，学校大概看我16号回了家，他就不再负核酸的责了吧，也就没再通知我混管阳这件事。在学校的时间大部分都在宿舍，只有在买饭的时候采取食堂，期间也都是带着口罩的，即便是手上接触了，我每次回宿舍也都用舒肤佳搓一遍，不应该会被感染啊。或许是在15号晚上送我舍友的时候在车子上感染的？</li>
<li>在车站或者是路上感染的（也有可能），当时只带了口罩，没戴手套。客车是那种小型的，但都坐满了人。车内空间相对小，呼出来的气有可能被其他人吸进去了，间接的造成了感染。</li>
</ul>
<p>春季开学的时候感觉又会有一大批人被感染，说不准，也不一定。</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>Sun Nov 27 2022 00:52:22 GMT+0800 (中国标准时间)</title>
    <url>/2022/11/27/2022-11-27/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	已经有好长时间没有更新了，最近事太多了。</p>
<p>​	原本周四周五的考试，被这这突如其来的疫情延期了。</p>
<p>​	从这周开始，疫情渐渐又兴起，恰当时有个教职工在家隔离确诊了。学校开始了这一段时期的线上课程。相关的考试相继延期到后期（具体什么时候根据现况而定），不光只有这些：还有不见头的每日核酸一检；图书馆暂停开放，考研生只能转战到公教楼学习。考研倒计时一个月。又过了几天，食堂不能堂食了，这对我们这些离宿舍近的人来说没有多大事，但是对那考研生来说添加了不少麻烦，有的在路边的石凳上面吃、在楼道台阶上吃，总之来说：对我们这些还不到考研的人来说是没多大影响的，但是对那些考研生来说，这疫情真恶心。食堂的某些店还趁着这个时候强买强卖：哥们我晚上买的米线给我加上了一块钱的塑料碗，以前都是问你要不要，现在这段时间直接不问，默认加一块钱把碗强卖给你。😄</p>
<p>​	今天上计组的时候，老师说下周还要继续线上。那这考试又不知道要延迟到何时。未来不可期啊。</p>
<p>​	临近结束，得加油了。</p>
<p>​	<img src="/2022/11/27/2022-11-27/1.png" alt></p>
<p>​	<img src="/2022/11/27/2022-11-27/2.png" alt></p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>Mon Nov 07 2022 23:22:51 GMT+0800 (中国标准时间)</title>
    <url>/2022/11/07/2022-11-7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	今天总结一下，感觉很好，该完成的任务都完成了。</p>
<p>​	今天早上第一节有课，忘记了有没有吃饭，应该是吃了吧。其余的时间没课了，大部分都是在上自习学习。</p>
<p>​	今天还是主要以英语为主，OS、Javaweb为辅。</p>
<p>​	英语把前天做的卷子的生词整理了下，很多大约整理了三页多。单词书记了半页，不急慢慢来吧，总共还剩下不到几页了，距离六级还有一个多月的时间，再加上复习下之前的单词，足够了。下午做了篇选词填空，错了4个，分析了下主要是生词不认识导致的。还有昨天下午做的：长阅读，错了4个，纯粹是理解错了；第一篇仔细阅读：1个，真不该错!!!；第二篇仔细阅读：3个，就他妈理解错了；总体来说还算可以，这才做了两套。阅读的流畅性不是问题，再做几套找找语感。单词还是再坚持记得：新的、旧的一起记忆。听力不求高分，但求150即可。六级能过500嘛❓,尝试尝试，万一过了呢😲,只是万一啊</p>
<p>​	Javaweb把课本上的内容过了遍，要是让我手写代码，简单的还可以，难的我就测它的🐴。后面几天再看看发的例题库（真尼玛多）。</p>
<p>​	OS才看到线程，还有好多要看的，还有两周多就要考试了，拼一拼。</p>
<p>​    <strong>总之一句话：看了不代表会了。</strong></p>
<p>​	刚刚在小红书上面找到了六级作文模板，看我不使劲的背。</p>
<p>​	云班课测试题还没写，run了去写云班课了😭</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>tcp Chat(poor version)</title>
    <url>/2022/11/04/tcp%20Chat(poor%20version)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天晚上闲来无事(<s>实际上是上人工智能实验课做的这件事</s>)，找到了上计算机网络时写的有关tcp的代码，再来回顾一下。</p>
<p><strong>这是一个很poor的版本，客户端的信息如果超过屏幕的高度，就会被隐藏</strong></p>
<p><s>事实上，我也懒得挤时间去修改这个大Bug了，还有去添加发送图片、文件的功能了</s></p>
<p>从所周知，tcp协议广泛应用于我们身边。协议的接受就不再说了（三次握手四次挥手嘛😁<s>我也忘得差不多了</s>）</p>
<p>服务端要先运行，否则客户端怎么能够连接到请求的主机呢。</p>
<ul>
<li>start host</li>
</ul>
<p><img src="/2022/11/04/tcp%20Chat(poor%20version)/server.png" alt></p>
<ul>
<li>
<p>clients connect</p>
<p><img src="/2022/11/04/tcp%20Chat(poor%20version)/client.png" alt></p>
</li>
<li>
<p>client exit the dialog page</p>
</li>
</ul>
<p>​	<img src="/2022/11/04/tcp%20Chat(poor%20version)/exit.png" alt></p>
<ul>
<li>
<p>server’s info when client exit</p>
<p><img src="/2022/11/04/tcp%20Chat(poor%20version)/exit_server.png" alt></p>
</li>
</ul>
<p>以后找个时间修改修改bugs😄。</p>
<h4 id="server-py"><a class="header-anchor" href="#server-py">¶</a><a href="http://server.py">server.py</a></h4>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">chat</span>(<span class="params">connectionSocket, addr</span>):</span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="comment"># 新加进来的用户不在user元组中，就要向其他用户通告该用户进入进入连接的提示</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> addr <span class="keyword">in</span> user:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;new connection from %s:%s...&#x27;</span> % addr)</span><br><span class="line">        <span class="comment"># 向其他用户通告新用户的加入</span></span><br><span class="line">        <span class="keyword">for</span> scs <span class="keyword">in</span> serv_clie_socket:</span><br><span class="line">            serv_clie_socket[scs].send(data + <span class="string">&quot; enter the room&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="comment"># 将用户的IP+port对应的username加入到user中</span></span><br><span class="line">        user[addr] = data.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="comment"># 将用户的套接字加入到ser_clie_socket中</span></span><br><span class="line">        serv_clie_socket[addr] = connectionSocket</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s:%s already in the room&#x27;</span> % addr)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        d = connectionSocket.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="comment"># 包含exit关键词退出</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="string">&#x27;exit&#x27;</span> <span class="keyword">in</span> d.decode(<span class="string">&#x27;utf-8&#x27;</span>)) | (<span class="string">&#x27;break the link&#x27;</span> <span class="keyword">in</span> d.decode(<span class="string">&#x27;utf-8&#x27;</span>))):</span><br><span class="line">            name = user[addr]</span><br><span class="line">            user.pop(addr)</span><br><span class="line">            serv_clie_socket.pop(addr)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 向其他用户通告某一用户的离开</span></span><br><span class="line">            <span class="keyword">for</span> scs <span class="keyword">in</span> serv_clie_socket:</span><br><span class="line">                serv_clie_socket[scs].send((name + <span class="string">&quot; left the room&quot;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Connection from %s:%s closed.&#x27;</span> % addr)</span><br><span class="line"></span><br><span class="line">            num = num - <span class="number">1</span></span><br><span class="line">            <span class="comment"># 结束该线程</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;The current number of people is &quot;</span> + <span class="built_in">str</span>(num))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 展示信息</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s:%s= &quot;%s&quot;&#x27;</span> % (addr[<span class="number">0</span>], addr[<span class="number">1</span>],d.decode(<span class="string">&#x27;utf-8&#x27;</span>) ))</span><br><span class="line">            <span class="comment"># 向其他用户通告接受的该条信息</span></span><br><span class="line">            <span class="keyword">for</span> scs <span class="keyword">in</span> serv_clie_socket:</span><br><span class="line">                <span class="keyword">if</span> serv_clie_socket[scs] != connectionSocket:</span><br><span class="line">                    serv_clie_socket[scs].send(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个欢迎套接字</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">addr = (<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">12000</span>)</span><br><span class="line">s.bind((<span class="string">&#x27;&#x27;</span>,<span class="number">12000</span>))</span><br><span class="line"><span class="comment"># 监听用户的请求连接，设为128个请求</span></span><br><span class="line">s.listen(<span class="number">128</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;server on&#x27;</span>, addr[<span class="number">0</span>], <span class="string">&quot;:&quot;</span>, addr[<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 存放请求用户的(IP+端口号:用户名)的键值对</span></span><br><span class="line">user = &#123;&#125;</span><br><span class="line"><span class="comment"># 存放不同用户的socket</span></span><br><span class="line">serv_clie_socket = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Waiting for request from client:&quot;</span>)</span><br><span class="line">        connectionSocket, addr = s.accept()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;received request from client&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> ConnectionResetError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;error&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从client接受到的用户名</span></span><br><span class="line">    data = connectionSocket.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;user: &quot;</span>, data.decode())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建线程 守护线程</span></span><br><span class="line">    r = threading.Thread(target=chat, args=(connectionSocket, addr), daemon=<span class="literal">True</span>)</span><br><span class="line">    r.start()</span><br><span class="line">    num = num + <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The current number of people is &quot;</span>, num)</span><br></pre></td></tr></table></figure>
<h4 id="client-py"><a class="header-anchor" href="#client-py">¶</a><a href="http://client.py">client.py</a></h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用者端</span></span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> font</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">string = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Send</span>(<span class="params">sock</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> string != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        message = name + <span class="string">&#x27; : &#x27;</span> + string</span><br><span class="line">        sock.send(message.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;exit&#x27;</span> <span class="keyword">in</span> string.lower():</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recv</span>(<span class="params">sock</span>):</span><br><span class="line">    sock.send(name.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="comment"># 获取其他用户信息的时间</span></span><br><span class="line">        time_tuple = time.localtime(time.time())</span><br><span class="line">        <span class="built_in">str</span> = (<span class="string">&quot;&#123;&#125;-&#123;&#125;-&#123;&#125; &#123;&#125;:&#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(time_tuple[<span class="number">0</span>],time_tuple[<span class="number">1</span>],time_tuple[<span class="number">2</span>],time_tuple[<span class="number">3</span>], time_tuple[<span class="number">4</span>],time_tuple[<span class="number">5</span>]))</span><br><span class="line">        time_recv = tkinter.Label(t,text=<span class="built_in">str</span>,width=<span class="number">40</span>,anchor=<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">        time_recv.pack()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;enter the room&quot;</span> <span class="keyword">in</span> data.decode(<span class="string">&#x27;utf-8&#x27;</span>):</span><br><span class="line">            rrecv = tkinter.Label(t, text=data.decode(<span class="string">&#x27;utf-8&#x27;</span>), width=<span class="number">40</span>, anchor=<span class="string">&#x27;w&#x27;</span>,bg=<span class="string">&#x27;powderblue&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;left the room&quot;</span> <span class="keyword">in</span> data.decode(<span class="string">&#x27;utf-8&#x27;</span>):</span><br><span class="line">            rrecv = tkinter.Label(t, text=data.decode(<span class="string">&#x27;utf-8&#x27;</span>), width=<span class="number">40</span>, anchor=<span class="string">&#x27;w&#x27;</span>, bg=<span class="string">&#x27;pink&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rrecv = tkinter.Label(t, text=data.decode(<span class="string">&#x27;utf-8&#x27;</span>), width=<span class="number">40</span>, anchor=<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">        rrecv.pack()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># def getOnline():</span></span><br><span class="line"><span class="comment">#     tmp = socket.recv(1024)</span></span><br><span class="line"><span class="comment">#     data1 = tmp.d</span></span><br><span class="line"><span class="comment">#     if &quot;%&#x27;online is&#x27;%&quot; in data1:</span></span><br><span class="line"><span class="comment">#         num = []</span></span><br><span class="line"><span class="comment">#         num = data1.dp</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">left</span>():</span><br><span class="line">    <span class="keyword">global</span> string</span><br><span class="line">    <span class="comment"># 得到文本框中的内容</span></span><br><span class="line">    string = rv1.get()</span><br><span class="line">    <span class="comment"># 发送信息</span></span><br><span class="line">    Send(s)</span><br><span class="line">    <span class="keyword">if</span> string != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        time_tuple = time.localtime(time.time())</span><br><span class="line">        <span class="built_in">str</span> = (<span class="string">&quot;&#123;&#125;-&#123;&#125;-&#123;&#125; &#123;&#125;:&#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(time_tuple[<span class="number">0</span>],time_tuple[<span class="number">1</span>],time_tuple[<span class="number">2</span>],time_tuple[<span class="number">3</span>], time_tuple[<span class="number">4</span>],time_tuple[<span class="number">5</span>]))</span><br><span class="line">        <span class="comment"># 发送时间</span></span><br><span class="line">        time_send = tkinter.Label(t,text=<span class="built_in">str</span>,width=<span class="number">40</span>,anchor=<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">        time_send.pack()</span><br><span class="line">        <span class="comment"># 发送信息</span></span><br><span class="line">        rleft = tkinter.Label(t, text=string, width=<span class="number">40</span>, anchor=<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">        rleft.pack()</span><br><span class="line">        rv1.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Creat</span>():</span><br><span class="line">    <span class="keyword">global</span> name</span><br><span class="line">    name = n.get()</span><br><span class="line">    <span class="comment"># 开启一个接收信息线程</span></span><br><span class="line">    tr = threading.Thread(target=recv, args=(s,), daemon=<span class="literal">True</span>)</span><br><span class="line">    tr.start()</span><br><span class="line">    <span class="comment"># 销毁之前的窗口</span></span><br><span class="line">    l.destroy()</span><br><span class="line">    e.destroy()</span><br><span class="line">    b.destroy()</span><br><span class="line">    <span class="comment"># 创建主对话窗口</span></span><br><span class="line">    t.title(<span class="string">&quot;chatroom&quot;</span>)</span><br><span class="line">    t.geometry(<span class="string">&quot;400x500&quot;</span>)</span><br><span class="line">    rL0 = tkinter.Label(t, text=<span class="string">&#x27;%s&#x27;</span> % name, width=<span class="number">40</span>)</span><br><span class="line">    rL0.pack()</span><br><span class="line">    rE1 = tkinter.Entry(t, textvariable=rv1,width=<span class="number">40</span>)</span><br><span class="line">    rE1.place(x=<span class="number">1</span>, y=<span class="number">450</span>)         <span class="comment"># 200 450</span></span><br><span class="line">    rB1 = tkinter.Button(t, text=<span class="string">&quot;send&quot;</span>, width=<span class="number">7</span>, height=<span class="number">1</span>, command=left)</span><br><span class="line">    rB1.place(x=<span class="number">320</span>, y=<span class="number">450</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">close_chat</span>():</span><br><span class="line">    <span class="comment"># 点击窗口退出时，增加提示页面</span></span><br><span class="line">    tkinter.messagebox.showwarning(title=<span class="string">&#x27;exit&#x27;</span>, message=<span class="string">&#x27;exit?&#x27;</span>)</span><br><span class="line">    <span class="comment"># 向服务器发送退出信息</span></span><br><span class="line">    s.send(<span class="string">&quot;break the link&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个客户端socket,让操作系统分配port</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">server = (<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">12000</span>)</span><br><span class="line">s.connect(server)  <span class="comment"># 建立连接</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t = tkinter.Tk()</span><br><span class="line">t.title(<span class="string">&quot;chat&quot;</span>)</span><br><span class="line">t.geometry(<span class="string">&quot;300x270+500+200&quot;</span>)</span><br><span class="line"></span><br><span class="line">l = tkinter.Label(t, text=<span class="string">&#x27;please input your nickname&#x27;</span>, width=<span class="number">40</span>, height=<span class="number">10</span>,font=(<span class="string">&#x27;黑体&#x27;</span>,<span class="number">15</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">l.pack()</span><br><span class="line">n = tkinter.StringVar()</span><br><span class="line">e = tkinter.Entry(t, width=<span class="number">20</span>, textvariable=n,font=(<span class="string">&#x27;黑体&#x27;</span>,<span class="number">15</span>,<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">e.pack()</span><br><span class="line">rv1 = tkinter.StringVar()</span><br><span class="line"><span class="comment"># 获取用户名</span></span><br><span class="line">name = n.get()</span><br><span class="line">b = tkinter.Button(t, text=<span class="string">&quot;login&quot;</span>, width=<span class="number">30</span>, height=<span class="number">40</span>, command=Creat)</span><br><span class="line">b.pack()</span><br><span class="line"><span class="comment"># 添加协议处理程序机制，点击退出按钮时，弹窗提示</span></span><br><span class="line">t.protocol(<span class="string">&quot;WM_DELETE_WINDOW&quot;</span>, close_chat)</span><br><span class="line"></span><br><span class="line">t.mainloop()</span><br><span class="line"></span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tcp</category>
      </categories>
      <tags>
        <tag>tcp</tag>
      </tags>
  </entry>
  <entry>
    <title>Thu Oct 27 2022 23:32:54 GMT+0800 (中国标准时间)</title>
    <url>/2022/10/27/2022-10-27/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​	今天总体感觉不太行，效率有点低。</p>
<p>​	今天上午第一节是计组，还是和往常一样洗漱吃面包🍞，50多出的门，提前去记几个单词。</p>
<p>​	到教室后发现已经有好几个人在那了，比我来的还早，服了。</p>
<p>​	计组前一天晚上预学了一会儿，所以学的还算很简单。</p>
<p>​	第二节没有课，但是得利用这段时间去测码。人不多，很快就做完了。</p>
<p>​	做完核酸在二楼吃了自选菜，花了我18块多😭。</p>
<p>​	中午回宿舍，本想下午第一节的计组实验课不去了，想run。但是上午上实验的那两个班点名了，也只好不得不去了。困得一批。</p>
<p>​	吕国华的软件工程也是一如既往的摆。<strong>还是摆点好啊！！！</strong></p>
<p>​	晚上吃的肉酱面，就是豆干切成的小块，哪里有什么肉酱，就TM是一坨💩.</p>
<p>​	晚上6.10多去上的自习。你妈找个空教室真TM难，不是有在上课的，就是大一的崽子们在上晚自习的，还他们上晚自习的位置不固定。最后爬到平阶五楼才找到了个位置。</p>
<p>​	晚上学习的这段时间效率不太高。对软件项目管理就是😵 😪的状态。后面的人工智能和软件工程考试可怎么办啊😩.</p>
<p>​	<strong>不会真的要寄了吧，鼠鼠不想寄啊</strong>。</p>
<p>​	想玩玩Steam新出的Chicken Feet，不好，我怎么露出了鸡脚，我可是ikun啊。</p>
<p>​	奈何游侠没有资源，等等吧。</p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>Wed Oct 26 2022 23:18:46 GMT+0800 (中国标准时间)</title>
    <url>/2022/10/26/2022-10-26/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>整体来说今天的体验还算可以。😐</p>
<p>​	今天定了7：30的闹钟，拖了5分钟才起来。了了的洗漱了一下，吃了半个面包🍞，就去教室上自习去了。</p>
<p>第二节上Javaweb，第一节还是挺自由的。</p>
<p>​	原本想在平阶找个教室学一会儿，奈何都有课，只能转战战场去阶梯。TMD阶梯三层也有上课的，最后去了第二节上课的教室。</p>
<p>​	第一节课的空闲时间记了些单词（半页吧），学了些软件项目管理的题，下周一考试😱，再不复习就真寄了。</p>
<p>​	第二节的Javaweb没带书，就光听张维玉讲了（讲的太慢了，哎）。</p>
<p>​	中午在二楼买的孜然肉拌面，排到我的时候断电了，这就是工带😅的日常。孜然肉确实挺好吃😋，9块，腊肠的太贵了12块，没舍得买。</p>
<p>​	下午全都是实验课。第一节是Javaweb，课本又TM忘带了，做了操作系统的实验3（太难啦）。第二节的神经网络与深度学习run了，老师又不点名😏。去菜鸟拿g304的接收器。找了大半天快递都没找到，最后才发现掉到货架后面了，CAO了。</p>
<p>​	拿完快递在二楼吃的饺子。</p>
<p>​	回宿舍睡了会儿去上自习了。得学习了。</p>
<p>​	明天还得测码，啥时候是个头啊😟.</p>
<p>配上一张晚上学习回来的图：</p>
<p><img src="/2022/10/26/2022-10-26/IMG_20221026_224453.jpg" alt="20221026"></p>
]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
  <entry>
    <title>文章加密测试</title>
    <url>/2022/10/21/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重新输入." data-whm="文章不能被校验, 不过您还是能看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="7f39a005883f4c50aaaeb04f89cf6031bf5a022750f097e31cbe36efe9197a9d">10d79030e8222445804370796b90fca1c6633170324f5faa9b296864ddd36cd05e3e954fb26025d50f33e13be0ba10553a61396067e4c48673bab9f8e933e1e7f09ae12e3291b482b5f29408626d138068863a08c3ccf29945e042dcfd98d0a4</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>javaweb连接数据库实现图书管理系统</title>
    <url>/2022/10/19/javaweb%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>index.jsp</h1>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">19</span></span><br><span class="line">  Time: <span class="number">12</span>:<span class="number">04</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.sql.*&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;图书管理系统&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;p align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;./add.html&quot;</span>&gt;添加图书信息&lt;/a&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;table align=<span class="string">&quot;center&quot;</span> width=<span class="string">&quot;50%&quot;</span> border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;书名&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;作者&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;出版社&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;价格&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;管理&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">      Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">      <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;wangzhe2412&quot;</span>);</span><br><span class="line">      <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from bookinfo&quot;</span>;</span><br><span class="line">      <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> con.createStatement();</span><br><span class="line">      <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line">      <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="number">1</span>);</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= rs.getString(<span class="string">&quot;bookname&quot;</span>)%&gt;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= rs.getString(<span class="string">&quot;author&quot;</span>)%&gt;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= rs.getString(<span class="string">&quot;press&quot;</span>)%&gt;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= rs.getString(<span class="string">&quot;price&quot;</span>)%&gt;&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;./edit.jsp?id=&lt;%=id%&gt;&quot;</span>&gt;修改&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;./del.jsp?id=&lt;%=id%&gt;&quot;</span> onclick=<span class="string">&quot;return confirm(&#x27;确定要删除吗?&#x27;)&quot;</span>&gt;删除&lt;/a&gt;</span><br><span class="line">      &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">      &#125;</span><br><span class="line">      rs.close();</span><br><span class="line">      stmt.close();</span><br><span class="line">      con.close();</span><br><span class="line">    %&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>add.html</h1>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>添加图书信息<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>添加图书信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&#x27;form1&#x27;</span> <span class="attr">action</span>=<span class="string">&quot;./add.jsp&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span>书名：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;bookname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span>作者：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span>出版社：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;press&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span>价格：<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;price&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1>add.jsp</h1>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">10</span>/<span class="number">12</span></span><br><span class="line">  Time: <span class="number">14</span>:<span class="number">55</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.sql.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">bookname</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;bookname&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">author</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;author&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">press</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;press&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">price</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;price&quot;</span>);</span><br><span class="line">    Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;wangzhe2412&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into bookinfo values(null,?,?,?,?)&quot;</span>;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span>con.prepareStatement(sql);</span><br><span class="line">    pstmt.setString(<span class="number">1</span>,bookname);</span><br><span class="line">    pstmt.setString(<span class="number">2</span>,author);</span><br><span class="line">    pstmt.setString(<span class="number">3</span>,press);</span><br><span class="line">    pstmt.setFloat(<span class="number">4</span>,Float.parseFloat(price));</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> pstmt.executeUpdate();</span><br><span class="line">    <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;添加失败，单击确定跳转到图书列表页&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(result == <span class="number">1</span>)&#123;</span><br><span class="line">        msg = <span class="string">&quot;添加成功，单击确定跳转到图书列表页&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pstmt.close();</span><br><span class="line">    con.close();</span><br><span class="line">%&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    window.alert(<span class="string">&#x27;&lt;%= msg%&gt;&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;1,url =./index.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>edit.jsp</h1>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.sql.*&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">10</span>/<span class="number">19</span></span><br><span class="line">  Time: <span class="number">13</span>:<span class="number">38</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;修改图书信息&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">    <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;wangzhe2412&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from bookinfo where id=?&quot;</span>;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> con.prepareStatement(sql);</span><br><span class="line">    pstmt.setInt(<span class="number">1</span>,Integer.parseInt(id));</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> pstmt.executeQuery();</span><br><span class="line">    <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">      <span class="type">String</span> <span class="variable">bookname</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;bookname&quot;</span>);</span><br><span class="line">      <span class="type">String</span> <span class="variable">author</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;author&quot;</span>);</span><br><span class="line">      <span class="type">String</span> <span class="variable">press</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;press&quot;</span>);</span><br><span class="line">      <span class="type">float</span> <span class="variable">price</span> <span class="operator">=</span> rs.getFloat(<span class="string">&quot;price&quot;</span>);</span><br><span class="line">  %&gt;</span><br><span class="line">  &lt;h2 align=<span class="string">&quot;center&quot;</span>&gt;修改图书信息&lt;/h2&gt;</span><br><span class="line">  &lt;form action=<span class="string">&quot;./edit_do.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span> name=<span class="string">&quot;form1&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;id&quot;</span> value=<span class="string">&quot;&lt;%= id%&gt;&quot;</span>&gt;;</span><br><span class="line">    &lt;table align=<span class="string">&quot;center&quot;</span> width=<span class="string">&quot;30%&quot;</span> border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;th width=<span class="string">&quot;30%&quot;</span>&gt;书名：&lt;/th&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;bookname&quot;</span> value=<span class="string">&quot;&lt;%=bookname%&gt;&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;th width=<span class="string">&quot;30%&quot;</span>&gt;作者：&lt;/th&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;author&quot;</span> value=<span class="string">&quot;&lt;%=author%&gt;&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;th width=<span class="string">&quot;30%&quot;</span>&gt;出版社：&lt;/th&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;press&quot;</span> value=<span class="string">&quot;&lt;%=press%&gt;&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;th width=<span class="string">&quot;30%&quot;</span>&gt;价格：&lt;/th&gt;</span><br><span class="line">        &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;price&quot;</span> value=<span class="string">&quot;&lt;%=price%&gt;&quot;</span>&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;th colspan=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">          &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;修改&quot;</span>&gt;</span><br><span class="line">          &lt;input type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">        &lt;/th&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">    &#125;</span><br><span class="line">    rs.close();</span><br><span class="line">    pstmt.close();</span><br><span class="line">    con.close();</span><br><span class="line">  %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>edit_do.jsp</h1>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.sql.*&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">10</span>/<span class="number">19</span></span><br><span class="line">  Time: <span class="number">13</span>:<span class="number">52</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">  <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">  <span class="type">String</span> <span class="variable">bookname</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;bookname&quot;</span>);</span><br><span class="line">  <span class="type">String</span> <span class="variable">author</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;author&quot;</span>);</span><br><span class="line">  <span class="type">String</span> <span class="variable">press</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;press&quot;</span>);</span><br><span class="line">  <span class="type">String</span> <span class="variable">price</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;price&quot;</span>);</span><br><span class="line">  Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">  <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;wangzhe2412&quot;</span>);</span><br><span class="line">  <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update bookinfo set bookname=?,author=?,press=?,price=? where id=?&quot;</span>;</span><br><span class="line">  <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> con.prepareStatement(sql);</span><br><span class="line">  pstmt.setString(<span class="number">1</span>,bookname);</span><br><span class="line">  pstmt.setString(<span class="number">2</span>,author);</span><br><span class="line">  pstmt.setString(<span class="number">3</span>,press);</span><br><span class="line">  pstmt.setFloat(<span class="number">4</span>,Float.parseFloat(price));</span><br><span class="line">  pstmt.setInt(<span class="number">5</span>,Integer.parseInt(id));</span><br><span class="line">  <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> pstmt.executeUpdate();</span><br><span class="line">  <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;修改失败，点击确定跳转到图书列表页&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>(result == <span class="number">1</span>)&#123;</span><br><span class="line">    msg = <span class="string">&quot;修改成功，点击确定跳转到图书列表页&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  pstmt.close();</span><br><span class="line">  con.close();</span><br><span class="line">%&gt;</span><br><span class="line">&lt;script&gt;window.alert(<span class="string">&quot;&lt;%=msg%&gt;&quot;</span>);&lt;/script&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;1,url=./index.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>del.jsp</h1>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.sql.Connection&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.sql.DriverManager&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.sql.PreparedStatement&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">10</span>/<span class="number">19</span></span><br><span class="line">  Time: <span class="number">14</span>:<span class="number">06</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">  <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;wangzhe2412&quot;</span>);</span><br><span class="line">  <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from bookinfo where id=?&quot;</span>;</span><br><span class="line">  <span class="type">PreparedStatement</span> <span class="variable">pstmt</span> <span class="operator">=</span> con.prepareStatement(sql);</span><br><span class="line">  pstmt.setInt(<span class="number">1</span>,Integer.parseInt(id));</span><br><span class="line">  <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> pstmt.executeUpdate();</span><br><span class="line">  <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;删除失败，点击确定跳转到图书列表页&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>(result == <span class="number">1</span>)&#123;</span><br><span class="line">    msg = <span class="string">&quot;删除成功，点击确定跳转到图书列表页&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  pstmt.close();</span><br><span class="line">  con.close();</span><br><span class="line">%&gt;</span><br><span class="line">&lt;script&gt;window.alert(<span class="string">&quot;&lt;%=msg%&gt;&quot;</span>);&lt;/script&gt;</span><br><span class="line">&lt;%</span><br><span class="line">  response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;1,url = ./index.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>总结</h1>
<p>只是用了结构，没有运用样式表。😁</p>
]]></content>
      <categories>
        <category>javaweb</category>
      </categories>
      <tags>
        <tag>javaweb</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery笔记</title>
    <url>/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>jQuery概述</h1>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220805110605056.png" alt="image-20220805110605056"></p>
<p>jQuery是一个JavaScript库，是对原生JS的封装，内部仍旧是JS实现的</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220805110931749.png" alt="image-20220805110931749"></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220805111025100.png" alt="image-20220805111025100"></p>
<h1>jQuery的基本使用</h1>
<p><a href="http://jquery.com">jQuery download</a></p>
<h2 id="script加载顺序"><a class="header-anchor" href="#script加载顺序">¶</a>script加载顺序</h2>
<ol>
<li>
<p>等着页面DOM加载完毕再去执行js代码</p>
<p>相对传统写法</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	xxx</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>等着页面DOM加载完毕再去执行js代码</p>
<p>相对简洁，推荐使用</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	xxx</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220805112750724.png" alt="image-20220805112750724"></p>
<h2 id="jQuery的顶级对象"><a class="header-anchor" href="#jQuery的顶级对象">¶</a>jQuery的顶级对象 $</h2>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220805113137854.png" alt="image-20220805113137854"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="title function_">alert</span>(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="title function_">jQuery</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="title function_">alert</span>(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="jQuery对象和DOM对象"><a class="header-anchor" href="#jQuery对象和DOM对象">¶</a>jQuery对象和DOM对象</h2>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220806182502209.png" alt="image-20220806182502209"></p>
<p>DOM对象只能调用DOM方法，jQuery对象只能调用jQuery方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//调用div</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="DOM对象和jQuery对象之间的转换"><a class="header-anchor" href="#DOM对象和jQuery对象之间的转换">¶</a>DOM对象和jQuery对象之间的转换</h2>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220806182829872.png" alt="image-20220806182829872"></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220806182842701.png" alt="image-20220806182842701"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myVideo=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;video&#x27;</span>);</span><br><span class="line">$(myVideo);<span class="comment">//不用加引号</span></span><br></pre></td></tr></table></figure>
<p>console.dir打印之后发现$(‘div’)是以伪数组的形式存储的</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220806183303057.png" alt="image-20220806183303057"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//play()是一个方法</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>].<span class="title function_">play</span>();</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>).<span class="title function_">play</span>();</span><br></pre></td></tr></table></figure>
<h1>jQuery常用API</h1>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220806183550492.png" alt="image-20220806183550492"></p>
<h2 id="选择器"><a class="header-anchor" href="#选择器">¶</a>选择器</h2>
<h3 id="基础选择器"><a class="header-anchor" href="#基础选择器">¶</a>基础选择器</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220806183954044.png" alt="image-20220806183954044"></p>
<p><strong>注意：</strong> $(‘div’)返回的是一个伪数组，要想真正获取其中的元素，要加索引号，例如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&#x27;div&#x27;</span>)[<span class="number">0</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>));</span><br></pre></td></tr></table></figure>
<h3 id="层级选择器"><a class="header-anchor" href="#层级选择器">¶</a>层级选择器</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220806184711791.png" alt="image-20220806184711791"></p>
<h3 id="隐式迭代"><a class="header-anchor" href="#隐式迭代">¶</a>隐式迭代</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220807171832048.png" alt="image-20220807171832048"></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//会将所有的<span class="selector-tag">div</span>设置样式</span><br><span class="line">$(&#x27;<span class="selector-tag">div</span>&#x27;)<span class="selector-class">.css</span>();</span><br></pre></td></tr></table></figure>
<h3 id="筛选选择器"><a class="header-anchor" href="#筛选选择器">¶</a>筛选选择器</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220807172201280.png" alt="image-20220807172201280"></p>
<p><strong>$()里面的都是对象，所以:first、:laster、:eq(index)等的需要写到$()里面</strong></p>
<h3 id="筛选方法"><a class="header-anchor" href="#筛选方法">¶</a>筛选方法</h3>
<p><strong>注意：</strong> 是方法</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220807172250492.png" alt="image-20220807172250492"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;ui&#x27;</span>).<span class="title function_">children</span>();<span class="comment">//将所有的儿子选出，不会把孙子辈的选出来</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">siblings</span>(<span class="string">&#x27;li&#x27;</span>);<span class="comment">//除了自身节点之外的所有亲兄弟</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//筛选选择器</span></span><br><span class="line">$(<span class="string">&#x27;ul li:eq(2)&#x27;</span>).<span class="title function_">css</span>();</span><br><span class="line"><span class="comment">//筛选方法,推荐写法</span></span><br><span class="line">$(<span class="string">&#x27;ul li&#x27;</span>).<span class="title function_">eq</span>(<span class="number">2</span>).<span class="title function_">css</span>();</span><br></pre></td></tr></table></figure>
<p>小项目：新浪下滑菜单,多种做法</p>
<p>应用了隐式迭代，内部绑定事件</p>
<p>show()、hide()方法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&#x27;.nav&gt;li&#x27;</span>).<span class="title function_">mouseover</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&#x27;.nav&gt;li&#x27;</span>).<span class="title function_">mouseout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="排他思想"><a class="header-anchor" href="#排他思想">¶</a>排他思想</h3>
<p>例如：点击当前按钮后更改颜色，其余按钮无颜色</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//隐式迭代，给所有的按钮绑定了click事件</span></span><br><span class="line">    $(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">//设置当前按钮颜色</span></span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>);</span><br><span class="line">        <span class="comment">//让当前按钮的button兄弟节点更改为无颜色</span></span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">siblings</span>(<span class="string">&quot;button&quot;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>小项目：淘宝服饰精品</p>
<h3 id="获得当前索引号"><a class="header-anchor" href="#获得当前索引号">¶</a>获得当前索引号</h3>
<p>相比于用原生JS，jQuery更简洁</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">this</span>).<span class="title function_">index</span>()<span class="comment">//是方法，要加（），从0开始</span></span><br></pre></td></tr></table></figure>
<p>在获取li的索引号时，不需要提前设置每个li的索引号</p>
<h3 id="链式编程"><a class="header-anchor" href="#链式编程">¶</a>链式编程</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220809210207773.png" alt="image-20220809210207773"></p>
<p>相当于以下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">$(<span class="variable language_">this</span>).<span class="title function_">siblings</span>().<span class="title function_">css</span>(<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>注意是哪个对象执行样式</p>
<p>去除重复，以达到简洁</p>
<h2 id="样式操作"><a class="header-anchor" href="#样式操作">¶</a>样式操作</h2>
<h3 id="操作css方法"><a class="header-anchor" href="#操作css方法">¶</a>操作css方法</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220809212208919.png" alt="image-20220809212208919"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//注意用花括号括起来</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">css</span>(&#123;</span><br><span class="line">	<span class="attr">width</span>: <span class="number">400</span>,</span><br><span class="line">	<span class="attr">height</span>: <span class="number">400</span>，</span><br><span class="line">    <span class="attr">backgroundColor</span>: <span class="string">&#x27;pink&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>如果是复合属性，要用驼峰命名法</p>
<h3 id="设置类样式方法"><a class="header-anchor" href="#设置类样式方法">¶</a>设置类样式方法</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220809213534169.png" alt="image-20220809213534169"></p>
<p><strong>注意：</strong> 里面的类名不能加.</p>
<p>小项目：tab栏切换</p>
<p>上面设置css是给伪数组形式的元素设置，而不是直接的元素形式，所以可以通过</p>
<p>$(‘div’).eq(index).css()进行设置，而$(‘div’)[index]是直接的DOM元素形式，jQuery方法不能被DOM对象调用的，所以不正确</p>
<h3 id="类操作与className区别"><a class="header-anchor" href="#类操作与className区别">¶</a>类操作与className区别</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810122157443.png" alt="image-20220810122157443"></p>
<h2 id="效果"><a class="header-anchor" href="#效果">¶</a>效果</h2>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810122338194.png" alt="image-20220810122338194"></p>
<h3 id="显示隐藏效果"><a class="header-anchor" href="#显示隐藏效果">¶</a>显示隐藏效果</h3>
<ol>
<li>show()</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">show</span>([speed,[easing],[fn]])	<span class="comment">//[]可以省略</span></span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810123030786.png" alt="image-20220810123030786"></p>
<ol start="2">
<li>
<p>hide()</p>
<p>参数规范和上述相同</p>
</li>
<li>
<p>toggle()  切换</p>
<p>参数规范和上述相同</p>
</li>
</ol>
<p><strong>在实际开发中一般是不用参数的</strong></p>
<h3 id="滑动"><a class="header-anchor" href="#滑动">¶</a>滑动</h3>
<ol>
<li>
<p>solideDown()  下滑</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810130333391.png" alt="image-20220810130333391"></p>
</li>
<li>
<p>slideUp()  上滑</p>
<p>参数规范和上述相同</p>
</li>
<li>
<p>slideToggle()  滑动切换</p>
<p>参数规范和上述相同</p>
</li>
</ol>
<p>小项目：新浪下滑菜单动画优化版</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;.nav&gt;li&#x27;</span>).<span class="title function_">mouseover</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// $(this).children(&#x27;ul&#x27;).show();</span></span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">slideDown</span>(<span class="number">200</span>);</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">&#x27;.nav&gt;li&#x27;</span>).<span class="title function_">mouseout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">slideUp</span>(<span class="number">200</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="事件切换"><a class="header-anchor" href="#事件切换">¶</a>事件切换</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810132627073.png" alt="image-20220810132627073"></p>
<ol>
<li>两个函数都写时，在移入和移除时分别执行</li>
<li>只写一个函数时，在移入、移除时执行同一个函数</li>
</ol>
<p>小项目：新浪下滑菜单切换优化版(两个函数)</p>
<p>更加简洁</p>
<p><strong>$(’ ').hover()</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;.nav&gt;li&#x27;</span>).<span class="title function_">hover</span>(</span><br><span class="line">    <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">slideDown</span>(<span class="number">200</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">slideUp</span>(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>小项目：新浪下滑菜单切换终极优化版(一个函数)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用hover()时只含一个函数，但存在bug:短时间内多次触发动画问题</span></span><br><span class="line">$(<span class="string">&#x27;.nav&gt;li&#x27;</span>).<span class="title function_">hover</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">slideToggle</span>(<span class="number">200</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="动画队列及其停止排队的方法"><a class="header-anchor" href="#动画队列及其停止排队的方法">¶</a>动画队列及其停止排队的方法</h3>
<p>短时间内多次触发动画，会使得动画形成一个动画队列，当鼠标移除动画触发范围时，动画仍旧会继续执行</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810133304019.png" alt="image-20220810133304019"></p>
<p>小项目：新浪下滑菜单切换终极优化bug版(一个函数)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;.nav&gt;li&#x27;</span>).<span class="title function_">hover</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">children</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">slideToggle</span>(<span class="number">200</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="淡入淡出"><a class="header-anchor" href="#淡入淡出">¶</a>淡入淡出</h3>
<ol>
<li>fadeOut() 淡出</li>
</ol>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810133453817.png" alt="image-20220810133453817"></p>
<ol start="2">
<li>
<p>fadeIn() 淡入</p>
</li>
<li>
<p>fadeToggle() 淡入淡出切换</p>
<p>上述规范相同</p>
</li>
<li>
<p>fadeTo()  以渐进方式调整到指定的不透明度</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810134308403.png" alt="image-20220810134308403"></p>
<p><strong>注意：</strong> 是调整的不透明度(不透明度为1表示是不透明的)，speed和opacity必须写</p>
</li>
</ol>
<p>小项目：高亮显示案例</p>
<h3 id="自定义动画animate"><a class="header-anchor" href="#自定义动画animate">¶</a>自定义动画animate</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810161358481.png" alt="image-20220810161358481"></p>
<p>里面的params以键值对形式，因为是元素做动画，所以要用DOM元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;div&quot;</span>).<span class="title function_">animate</span>(&#123;</span><br><span class="line">        <span class="attr">left</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">top</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">opacity</span>: <span class="number">.4</span></span><br><span class="line">    &#125;,<span class="number">500</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>小项目：折叠卡片/手风琴</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul li&#x27;</span>).<span class="title function_">mouseenter</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">stop</span>().<span class="title function_">animate</span>(&#123;<span class="attr">width</span>: <span class="number">224</span>&#125;).<span class="title function_">find</span>(<span class="string">&#x27;.small&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">fadeOut</span>().<span class="title function_">siblings</span>().<span class="title function_">stop</span>().<span class="title function_">fadeIn</span>();</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">siblings</span>(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">animate</span>(&#123;<span class="attr">width</span>:<span class="number">69</span>&#125;).<span class="title function_">find</span>(<span class="string">&#x27;.big&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">fadeOut</span>().<span class="title function_">siblings</span>().<span class="title function_">stop</span>().<span class="title function_">fadeIn</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong> 要在动画前面加stop()</p>
<h2 id="属性操作"><a class="header-anchor" href="#属性操作">¶</a>属性操作</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;);<span class="comment">//当div发生变化时调用函数</span></span><br></pre></td></tr></table></figure>
<h3 id="设置或获取元素固有属性值-prop"><a class="header-anchor" href="#设置或获取元素固有属性值-prop">¶</a>设置或获取元素固有属性值 prop()</h3>
<p>property:属性的意思</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810191930580.png" alt="image-20220810191930580"></p>
<p>是获取不了自定义属性的</p>
<h3 id="设置或获取元素自定义属性值attr"><a class="header-anchor" href="#设置或获取元素自定义属性值attr">¶</a>设置或获取元素自定义属性值attr()</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810192559840.png" alt="image-20220810192559840"></p>
<p>好像是获取不了元素自带的属性</p>
<p><strong>设置自定义索引：</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;$(<span class="string">&#x27;div&#x27;</span>).<span class="property">length</span>;i++)&#123;</span><br><span class="line">    $(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">eq</span>(i).<span class="title function_">attr</span>(<span class="string">&#x27;data-index&#x27;</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="数据缓存data"><a class="header-anchor" href="#数据缓存data">¶</a>数据缓存data()</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810195411179.png" alt="image-20220810195411179"></p>
<p>这里面的数据是存放在元素的内存里面的</p>
<p>获取H5自定义属性 data-index时不用写data-，并且返回的是数字型</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$().<span class="title function_">data</span>(<span class="string">&#x27;uname&#x27;</span>,<span class="string">&#x27;andy&#x27;</span>);</span><br><span class="line">$().<span class="title function_">data</span>(<span class="string">&#x27;index&#x27;</span>);<span class="comment">//获取data-index</span></span><br></pre></td></tr></table></figure>
<p>小项目：购物车模块全选</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;input:checked&#x27;</span>);<span class="comment">//自动获取复选框选中的个数</span></span><br></pre></td></tr></table></figure>
<p>元素自带属性要用prop()，自定义属性用attr()，一定要注意，否则样式不会生效</p>
<h2 id="文本属性值"><a class="header-anchor" href="#文本属性值">¶</a>文本属性值</h2>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810204515874.png" alt="image-20220810204515874"></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220810204652764.png" alt="image-20220810204652764"></p>
<p>例如清空文本框内容<code>$('textarea').val(&quot;&quot;);</code></p>
<p>小项目：购物车模块-增减商品数量</p>
<p><strong>注意：</strong> 程序里面有 <code>return false</code>,后面的代码就不会执行了</p>
<h3 id="保留几位小数"><a class="header-anchor" href="#保留几位小数">¶</a>保留几位小数</h3>
<p>保留几位小数： <code>(100/3).toFixed(2) -&gt; 33.33</code></p>
<h3 id="返回指定祖先元素"><a class="header-anchor" href="#返回指定祖先元素">¶</a>返回指定祖先元素</h3>
<p><code>parents('选择器')</code> 可以返回指定的祖先，注意是parents</p>
<h2 id="元素操作"><a class="header-anchor" href="#元素操作">¶</a>元素操作</h2>
<h3 id="遍历元素"><a class="header-anchor" href="#遍历元素">¶</a>遍历元素</h3>
<ol>
<li><code>each(function(index,domEle))&#123;&#125;</code></li>
</ol>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811173810613.png" alt="image-20220811173810613"></p>
<p>index和domEle可以用其他自定义变量名称代替，使用jQuery对象时，需要将DOM对象转换为jquery对象，里面的是回调函数</p>
<ol start="2">
<li><code>$.each(调用对象,function(index,domEle)&#123;&#125;)</code></li>
</ol>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811175129888.png" alt="image-20220811175129888"></p>
<p>例如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[];<span class="comment">//数组</span></span><br><span class="line">$.<span class="title function_">each</span>(arr,<span class="keyword">function</span>(<span class="params">index,domEle</span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(index,domEle);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.<span class="title function_">each</span>(&#123;<span class="attr">name</span>:<span class="string">&quot;andy&quot;</span>,<span class="attr">age</span>: <span class="number">18</span>&#125;,<span class="keyword">function</span>(<span class="params">index,domEle</span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(index,domEle);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//这里的index会把name、age输出，domEle将andy、18输出</span></span><br></pre></td></tr></table></figure>
<h3 id="创建元素"><a class="header-anchor" href="#创建元素">¶</a>创建元素</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811180758773.png" alt="image-20220811180758773"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> li = $(<span class="string">&#x27;&lt;li&gt;i am the last one&lt;/li&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>实际上创建了一个新的标签对象，再将其添加到合适位置即可</p>
<h3 id="添加元素"><a class="header-anchor" href="#添加元素">¶</a>添加元素</h3>
<ol>
<li>
<p>内部添加</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811181248083.png" alt="image-20220811181248083"></p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> li=$(<span class="string">&#x27;&lt;li&gt;hello world&lt;/li&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">append</span>(li);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>外部添加</p>
<pre><code> ![image-20220811181311419](image-20220811181311419.png)
</code></pre>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> div=$(<span class="string">&#x27;&lt;div&gt;hello world&lt;/div&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;.demo&#x27;</span>).<span class="title function_">after</span>(div);<span class="comment">//在demo的后面插入新创建的div</span></span><br></pre></td></tr></table></figure>
<p><strong>区别:</strong> 内部添加是父子关系，外部添加是兄弟关系</p>
<h3 id="删除元素"><a class="header-anchor" href="#删除元素">¶</a>删除元素</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811182548391.png" alt="image-20220811182548391"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">remove</span>();<span class="comment">//谁调用谁删除</span></span><br><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">empty</span>();<span class="comment">//将ul中的所有li删除</span></span><br><span class="line">$(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>小项目：购物车删除模块，属于购物车模块</p>
<h2 id="尺寸、位置操作"><a class="header-anchor" href="#尺寸、位置操作">¶</a>尺寸、位置操作</h2>
<h3 id="尺寸"><a class="header-anchor" href="#尺寸">¶</a>尺寸</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811184021291.png" alt="image-20220811184021291"></p>
<h3 id="位置"><a class="header-anchor" href="#位置">¶</a>位置</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811184629724.png" alt="image-20220811184629724"></p>
<p>通过键值对的形式设置</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220811184740160.png" alt="image-20220811184740160"></p>
<p>position只能获取，不能设置</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220813194901320.png" alt="image-20220813194901320"></p>
<p><code>页面滚动事件： $(window).scroll(function()&#123;&#125;)</code></p>
<h3 id="节流阀-互斥锁"><a class="header-anchor" href="#节流阀-互斥锁">¶</a>节流阀/互斥锁</h3>
<p>两个函数不能同时执行，开个变量flag解决即可。</p>
<h1>jQuery事件</h1>
<h3 id="事件注册"><a class="header-anchor" href="#事件注册">¶</a>事件注册</h3>
<ol>
<li>
<p>单个事件注册：</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220814212242737.png" alt="image-20220814212242737"></p>
</li>
</ol>
<h3 id="事件处理"><a class="header-anchor" href="#事件处理">¶</a>事件处理</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220814212903622.png" alt="image-20220814212903622"></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220814215448166.png" alt="image-20220814215448166"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不同事件分别触发不同的函数</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">on</span>(&#123;<span class="comment">//注意花括号</span></span><br><span class="line">	<span class="attr">mouseenter</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">		<span class="title function_">alert</span>(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">		<span class="title function_">alert</span>(<span class="number">2</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//多个事件触发统一事件</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">on</span>(<span class="string">&quot;mouseenter mouseleave&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220815124030985.png" alt="image-20220815124030985"></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220815124428835.png" alt="image-20220815124428835"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;ol&#x27;</span>).<span class="title function_">on</span>(<span class="string">&quot;click&quot;</span>,<span class="string">&quot;li&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> li=$(<span class="string">&#x27;&lt;li&gt;hello world&lt;/li&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;ol&#x27;</span>).<span class="title function_">append</span>(li);</span><br></pre></td></tr></table></figure>
<p>on给后来插入的标签创建click事件</p>
<p>传统方式下在事件之前创建元素幷插入也是可以的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> li=$(<span class="string">&#x27;&lt;li&gt;hello world&lt;/li&gt;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;ol&#x27;</span>).<span class="title function_">append</span>(li);</span><br><span class="line">$(<span class="string">&#x27;ol&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>小项目：微博发布信息</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>($(<span class="string">&#x27;.message&#x27;</span>).<span class="title function_">val</span>())&#123;</span><br><span class="line">            <span class="keyword">var</span> li=$(<span class="string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>);</span><br><span class="line">            li.<span class="title function_">html</span>($(<span class="string">&#x27;.message&#x27;</span>).<span class="title function_">val</span>()+<span class="string">&#x27;&lt;p&gt;删除&lt;/p&gt;&#x27;</span>);</span><br><span class="line">            $(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">prepend</span>(li);</span><br><span class="line">            li.<span class="title function_">slideDown</span>();</span><br><span class="line">            $(<span class="string">&#x27;.message&#x27;</span>).<span class="title function_">val</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">&#x27;.details ul&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">slideUp</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                $(<span class="variable language_">this</span>).<span class="title function_">remove</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">    </span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><strong>2. 事件处理off()解绑事件</strong></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816162336259.png" alt="image-20220816162336259"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">on</span>(&#123;&#125;)；</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">off</span>();<span class="comment">//将div的所有事件解绑</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">off</span>(<span class="string">&#x27;click&#x27;</span>);<span class="comment">//接触某一个事件</span></span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">one</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;);<span class="comment">//只会执行一次，执行完之后就不需要解绑了</span></span><br></pre></td></tr></table></figure>
<p><strong>3.自动触发事件trigger()</strong></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816163220933.png" alt="image-20220816163220933"></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816163238548.png" alt="image-20220816163238548"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(selector).<span class="title function_">trigger</span>(event,[param1,param2,...])</span><br></pre></td></tr></table></figure>
<p>triggerHandler() 方法触发被选元素的指定事件类型。但不会执行浏览器默认动作，也不会产生事件冒泡。</p>
<p>triggerHandler() 方法与 trigger() 方法类似。不同的是它不会触发事件（比如表单提交）的默认行为，而且只影响第一个匹配元素。</p>
<ul>
<li>它不会引起事件（比如表单提交）的默认行为</li>
<li>.trigger() 会操作 jQuery 对象匹配的所有元素，而 .triggerHandler() 只影响第一个匹配元素。</li>
<li>由 .triggerHandler() 创建的事件不会在 DOM 树中冒泡；如果目标元素不直接处理它们，则不会发生任何事情。</li>
<li>该方法的返回的是事件处理函数的返回值，而不是具有可链性的 jQuery 对象。此外，如果没有处理程序被触发，则这个方法返回 undefined。</li>
</ul>
<p>例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--triggerhandler--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/jquery/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">  $(<span class="string">&quot;input&quot;</span>).<span class="title function_">select</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;input&quot;</span>).<span class="title function_">after</span>(<span class="string">&quot;发生 Input select 事件！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  $(<span class="string">&quot;button&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;input&quot;</span>).<span class="title function_">triggerHandler</span>(<span class="string">&quot;select&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;FirstName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Hello World&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>激活 input 域的 select 事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>请注意，与 trigger() 方法不同，triggerHandler() 方法不会引起所发生事件的默认行为（文本不会被选中）。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--与 trigger() 方法不同，triggerHandler() 方法不会引起所发生事件的默认行为（文本不会被选中--&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--trigger--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/jquery/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">  $(<span class="string">&quot;input&quot;</span>).<span class="title function_">select</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;input&quot;</span>).<span class="title function_">after</span>(<span class="string">&quot;文本被选中！&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">  $(<span class="string">&quot;button&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;input&quot;</span>).<span class="title function_">trigger</span>(<span class="string">&quot;select&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;FirstName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Hello World&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>激活 input 域的 select 事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--会执行默认行为--&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="事件对象"><a class="header-anchor" href="#事件对象">¶</a>事件对象</h3>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816165124091.png" alt="image-20220816165124091"></p>
<p>更多方法参考webAPI中讲解的内容</p>
<h1>jQuery其他方法</h1>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816165425227.png" alt="image-20220816165425227"></p>
<h2 id="拷贝对象"><a class="header-anchor" href="#拷贝对象">¶</a>拷贝对象</h2>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816170703217.png" alt="image-20220816170703217"></p>
<p><code>上面的是对象&#123;&#125;拷贝，不是标签</code></p>
<p><strong>分析</strong></p>
<ol>
<li>targetObj{}为空</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> obj=&#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;andy&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> targetObj=&#123;&#125;</span><br><span class="line">    $.<span class="title function_">extend</span>(targetObj,obj);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(targetObj);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p>targetObj{}不为空时会覆盖targetObj原来的数据</p>
</li>
<li>
<p>deep</p>
<p>浅拷贝只是将地址拷贝给了目标对象，修改两个其中一个，另一个也会跟着改变</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816171409423.png" alt="image-20220816171409423"></p>
<p>深拷贝会将所有的数据拷贝另外开辟一个地址存储，不会拷贝地址，两者数据不会共享，冲突的数据会覆盖，不冲突的保留</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816171745028.png" alt="image-20220816171745028"></p>
</li>
</ol>
<p><strong>标签拷贝</strong></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816165905026.png" alt="image-20220816165905026"></p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816165914181.png" alt="image-20220816165914181"></p>
<h2 id="多库共存"><a class="header-anchor" href="#多库共存">¶</a>多库共存</h2>
<p>自己写的代码有$符号，而jQuery又自带$,会产生冲突,例如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="keyword">function</span> <span class="title function_">$</span>(<span class="params">ele</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(ele);</span><br><span class="line">	&#125;</span><br><span class="line">	$(<span class="string">&#x27;div&#x27;</span>);<span class="comment">//自定义的函数也带有$</span></span><br><span class="line">	$.<span class="title function_">each</span>();<span class="comment">//会报错，它不知道$是jQuery的还是自定义函数的</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816172554240.png" alt="image-20220816172554240"></p>
<p>如果jQuery还是冲突，就将<code>$</code>让用户自己重命名：var xxx=$.noConflict()</p>
<h2 id="jQuery插件"><a class="header-anchor" href="#jQuery插件">¶</a>jQuery插件</h2>
<p><strong>要先引入jQuery插件</strong></p>
<ol>
<li>插件</li>
</ol>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816174019097.png" alt="image-20220816174019097"></p>
<p>第二个插件地址停更至2020</p>
<ol start="2">
<li>
<p>图片懒加载插件</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816175104060.png" alt="image-20220816175104060"></p>
</li>
<li>
<p>全屏滚动</p>
<p><img src="/2022/09/27/jQuery%E7%AC%94%E8%AE%B0/image-20220816175644512.png" alt="image-20220816175644512"></p>
</li>
</ol>
<h1>ToDoList案例</h1>
]]></content>
      <categories>
        <category>jquery</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>修复hexo使用Markdown格式添加图片的问题</title>
    <url>/2022/09/19/%E4%BF%AE%E5%A4%8Dhexo%E4%BD%BF%E7%94%A8Markdown%E6%A0%BC%E5%BC%8F%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>修复了使用Markdown格式添加图片的问题</p>
<p>下载插件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-marked</span><br></pre></td></tr></table></figure>
<p>修改博客根目录文件中的配置项：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br><span class="line">marked:</span><br><span class="line">  prependRoot: <span class="literal">true</span></span><br><span class="line">  postAsset: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>注意路径使用：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript进阶</title>
    <url>/2022/09/19/javascript%E8%BF%9B%E9%98%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="API"><a class="header-anchor" href="#API">¶</a>API</h2>
<p>API(Application Programming Interface应用程序编程接口)，是一些预先定义的函数,目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力,而无需源码,或理解内部工作机制的细节</p>
<h2 id="WEB-API"><a class="header-anchor" href="#WEB-API">¶</a>WEB API</h2>
<p>是浏览器提供的一套操作浏览器功能和页面元素的API(BOM和DOM)， 现阶段主要针对于浏览器讲解常用的API,主要针对浏览器做交互效果，MDN详细API:<a href="https://developer.mozilla.org/zh-CN/docs/Web/API">https://developer.mozilla.org/zh-CN/docs/Web/API</a></p>
<h2 id="DOM"><a class="header-anchor" href="#DOM">¶</a>DOM</h2>
<h3 id="简介"><a class="header-anchor" href="#简介">¶</a>简介</h3>
<ul>
<li>
<p>文档对象模型(Document Object Model),是W3C组织推荐的处理可扩展标记语言(html或者XML)的标椎</p>
</li>
<li>
<p>编程接口.通过DOM接口可以改变网页的内容、结构和样式</p>
</li>
<li>
<p>文档:一个页面就是一个文档,DOM中使用document表示</p>
</li>
<li>
<p>元素:页面中的所有标签都是元素,DOM中使用element表示</p>
</li>
<li>
<p>节点:网页中的所有页面都是节点(标签、属性、文本、注释等),DOM中使用node</p>
</li>
</ul>
<h3 id="获取元素"><a class="header-anchor" href="#获取元素">¶</a>获取元素</h3>
<p>通过以下方式获得：</p>
<ol>
<li>
<p>根据ID获取:getElementById()方法获取带有ID的元素对象:</p>
<p>由于元素的 ID 在大部分情况下要求是独一无二的，这个方法自然而然地成为了一个高效查找特定元素 的方法。返回的是一个匹配ID的DOM的Element对象,若没有找到,就返回null，例如：</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;time&quot;</span>&gt;</span>2021<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="comment">//页面是从上向下加载的,所以先得有标签,才能在运行script中的内容</span></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">var</span> timer=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;time&#x27;</span>);  <span class="comment">//参数必须是字符串类型</span></span></span><br><span class="line"><span class="language-javascript">	<span class="variable language_">console</span>.<span class="title function_">log</span>(timer.<span class="property">value</span>);<span class="comment">//最后结果输出(完整标签)&lt;div id=&quot;time&quot;&gt;2021&lt;/div&gt;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>console.dir(timer)//打印 div#timer 属性和方法</p>
</li>
<li>
<p>根据标签获取:</p>
<p>getElementsByTagName()方法可以返回带有指定标签名的对象的集合,返回过来的是 获取过来元素对象的集合 以伪数组的形式存储</p>
<p>例如：</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> cnt=<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(cnt[<span class="number">0</span>]);<span class="comment">//打印出 &lt;li&gt;hello1&lt;/li&gt;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>循环打印出所有li标签的内容</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;(cnt.<span class="property">length</span>);i++)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(cnt[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> t <span class="keyword">in</span> cnt)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(cnt[t])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还可以获取某个元素(父元素)内部所有指定标签名的子元素:</p>
<p>例如: 如何获取ol中的li,而不获取ul中的li?</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">id</span>=<span class="string">&#x27;ol&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//方法一</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> cnt=<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;ol&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(cnt[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//方法二</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> cnt=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;ol&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(cnt.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>父元素必须是单个对象(必须指明是哪一个元素对象),获取的时候不包含父元素自己</p>
<p>以上方法为传统方式</p>
<ol start="3">
<li>
<p>通过HTML5新增的方法获取:</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;类名&#x27;</span>); <span class="comment">//根据类名返回元素对象集合</span></span><br><span class="line"><span class="title function_">querySelector</span>(<span class="string">&#x27;选择器&#x27;</span>);    <span class="comment">//根据指定选择器返回第一个元素对象,注意只能返回第一个元素对象,里面的选择器需要加符号(.demo #demo)，也可以是标签选择器</span></span><br><span class="line"><span class="title function_">querySelectorAll</span>(<span class="string">&#x27;选择器&#x27;</span>); <span class="comment">//根据指定选择器返回所有元素对象,集合</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>特殊元素获取(body,html):</p>
<p>获取body:document.body 不带参数</p>
<p>获取html:document.documentElement 不带参数</p>
</li>
</ol>
<h3 id="事件基础"><a class="header-anchor" href="#事件基础">¶</a>事件基础</h3>
<p>事件三要素/事件三部分:事件源、事件类型、事件处理程序</p>
<ol>
<li>事件源:事件被触发的对象,谁-&gt;按钮</li>
<li>事件类型:如何触发,什么事件-&gt;鼠标点击(onclick) 鼠标经过 键盘按下 滑轮滚动等</li>
<li>事件处理程序:通过一个函数赋值的方式完成</li>
</ol>
<p>例如一个简单的事件:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>example<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;     <span class="comment">//匿名函数调用</span></span></span><br><span class="line"><span class="language-javascript">       <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>执行事件的步骤:</p>
<ol>
<li>获取事件源  var div=document.getSelecetor(‘div’)</li>
<li>注册事件(绑定事件)  div.onclick</li>
<li>添加事件处理程序(采取函数赋值形式) div.onclick=fcuntion(){}</li>
</ol>
<p>常见的鼠标事件:</p>
<ul>
<li>onclick:左键触发</li>
<li>onmouseover:经过触发</li>
<li>onmouseout:离开触发</li>
<li>onfocus:焦点触发</li>
<li>onblur:失去焦点触发</li>
<li>onmousemove:移动触发</li>
<li>onmouseup:弹起触发</li>
<li>onmousedown:按下触发</li>
</ul>
<h3 id="操作元素"><a class="header-anchor" href="#操作元素">¶</a>操作元素</h3>
<p>DOM可以改变网页的内容、结构和样式,利用DOM操作元素来改变元素里面的内容、属性等</p>
<pre><code>直接调用时是获取元素的文本内容，例如demo.innerText
</code></pre>
<ol>
<li>
<p>改变元素内容:</p>
<p>element.innerText:从起始位置到终止位置的内容,但它去除HTML标签,同时空格和换行也会去掉，用的较少</p>
<p>element.innerHTML:起始位置到终点位置的全部内容,包括HTML标签,同时保留空格和换行，用的较多</p>
<p>上述只是对普通的盒子进行的，要想对表单元素进行设置，需要调用value,例如:input.value=‘xxx’</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.<span class="property">innerText</span>=<span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">text[<span class="number">0</span>].<span class="property">innerText</span> +=<span class="string">&#x27;hello&#x27;</span> <span class="comment">//追加内容</span></span><br></pre></td></tr></table></figure>
<pre><code>innerText输入的是文本,不能识别HTML,并且能够去除空格和标签;而innerHTML能够识别HTML,同时保留空格和换行
例如:div.innerHTML='&lt;strong&gt;今天是:&lt;/strong&gt;2021'
推荐使用innerHTML(是一种标准)
</code></pre>
<ol start="2">
<li>
<p>常用元素的属性操作:</p>
<p>1、innerText、innerHTML改变元素内容(普通盒子如div)，innerHTML更常用<br>
2、src href<br>
3、id alt title</p>
<p><strong>图片切换小项目</strong></p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span>&gt;</span>one<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span>&gt;</span>two<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../CSS3/img/a.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;no_img&quot;</span> <span class="attr">title</span>=<span class="string">&quot;girl&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> a=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;a&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> b=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;b&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> img=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    a.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">src</span>=<span class="string">&#x27;../CSS3/img/b.png&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">title</span>=<span class="string">&#x27;man&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    b.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">src</span>=<span class="string">&#x27;../CSS3/img/a.jpg&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">title</span>=<span class="string">&#x27;girl&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>
<p>表单元素的属性操作:</p>
<p>利用DOM可以操作如下表单元素的属性: type value checked selected disabled(被禁用)</p>
<p>表单里面的值 文字内容是通过value来修改的</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">example.<span class="property">value</span>=<span class="string">&#x27;xxxx&#x27;</span>;</span><br><span class="line">btn.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    btn.<span class="property">disabled</span>=<span class="literal">true</span>;<span class="comment">//方法一,按钮禁用</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">disabled</span>=<span class="literal">true</span>;<span class="comment">//方法二,按钮禁用</span></span><br><span class="line">    <span class="comment">//this指的是事件函数的调用者</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>
<p>样式属性操作：</p>
<p>通过JS修改元素的大小、颜色、位置等样式</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">element.<span class="property">style</span>	<span class="comment">//行内样式操作</span></span><br><span class="line">element.<span class="property">className</span>	<span class="comment">//类名样式操作</span></span><br></pre></td></tr></table></figure>
<p><strong>行内样式操作</strong></p>
<p>修改的样式很少时使用</p>
<p>里面的属性名采用驼峰命名法，比如backgroundColor、fontSize等</p>
<p>JS修改的style样式操作，产生的是行内样式，css权重比较高</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dic=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">backgroundColor</span>=<span class="string">&#x27;purple&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>小项目1：循环精灵图</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> lis=<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;lis.<span class="property">length</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">var</span> index=i*<span class="number">44</span>;</span><br><span class="line">            lis[i].<span class="property">style</span>.<span class="property">backgroundPosition</span> = <span class="string">&#x27;0 -&#x27;</span>+index+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>小项目2：显示隐藏文本框内容</p>
<p>当修改的样式太多时，使用行内样式显得比较复杂</p>
<p><strong>类名样式操作</strong></p>
<p>先将要修改的样式提前声明一个样式类，然后再调用声明的样式this.className=‘change’</p>
<p>className会直接更改元素的类型，会覆盖原先的类名</p>
<p>如果想要保留原先的类，则：</p>
<p>this.className=‘first change’</p>
<p>在实际开发中，更推荐使用类名样式，这样在后期的维护中只需要修改类名中的内容即可，而不用去修改JS</p>
<p>小项目：密码框格式提示错误信息：</p>
<p>两种方式均可</p>
</li>
</ol>
<p>5.排他思想</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220720210003035.png" alt="image-20220720210003035"></p>
<p>当页面有多个按钮时，为每个按钮设置一个onclick会显得繁琐，这时最好用循环来做</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btns=<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;btns.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            btns[i].<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//在调用之前将所有其他的按钮背景颜色置空，在执行要改变的颜色</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;btns.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                      <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">backgroundColor</span>=<span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">backgroundColor</span>=<span class="string">&#x27;pink&#x27;</span>;	</span></span><br><span class="line"><span class="language-javascript">            &#125;            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>小项目1：百度换肤</p>
<p>小项目2：表格隔行变色的效果，不难，就不写了</p>
<p>小项目3：表单全选取消全选</p>
<p>6.自定义属性的操作</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721184552893.png" alt="image-20220721184552893"></p>
<p>第一种方式只能用于标签自带的属性值，而第二种可以调用用户自定义的属性</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721185233936.png" alt="image-20220721185233936"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//index为自定义属性，id为标签自带属性</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;demo&#x27;</span> <span class="attr">index</span>=<span class="string">&#x27;1&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>设置属性值：</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721185932621.png" alt="image-20220721185932621"></p>
<p>提倡标签自带的属性用第一种写，自定义的用第二种，只是提倡</p>
<p>移除属性：</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721190048395.png" alt="image-20220721190048395"></p>
<p><strong>小项目：tab栏切换,京东做法 重要</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721215708512.png" alt="image-20220721215708512"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721215931036.png" alt="image-20220721215931036"></p>
<p>getAttribute是没有兼容性问题的，第二种ie11才开始支持</p>
<p>注意一点：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-list-name</span>=<span class="string">&#x27;xxx&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">var</span>  div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">	<span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">dataset</span>-listName);</span></span><br><span class="line"><span class="language-javascript">	<span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">dataset</span>[<span class="string">&#x27;listName&#x27;</span>]);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>data-list-name–&gt;驼峰命名法–&gt;listName</p>
<p>如果自定义属性里面有多个-链接的单词，我们获取属性的时候要采取驼峰命名法</p>
<h3 id="节点操作"><a class="header-anchor" href="#节点操作">¶</a>节点操作</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721221839314.png" alt="image-20220721221839314"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721222831040.png" alt="image-20220721222831040"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220721223058592.png" alt="image-20220721223058592"></p>
<ol>
<li>父级节点</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722132615870.png" alt="image-20220722132615870"></p>
<ol start="2">
<li>子节点</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722132928003.png" alt="image-20220722132928003"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722133121217.png" alt="image-20220722133121217"></p>
<p>实际开发中更提倡使用上面一种方式，第一种方式包含了无用的节点</p>
<pre><code>获取指定的节点：
</code></pre>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722133405915.png" alt="image-20220722133405915"></p>
<p>上面的方式会包含无用的节点</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722133558468.png" alt="image-20220722133558468"></p>
<p>上面的方式不包含无用的节点，但有兼容性问题，解决方案如下(实际开发中的)：</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722133937672.png" alt="image-20220722133937672"></p>
<p>小项目：新浪下拉菜单</p>
<ol start="3">
<li>兄弟节点</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722160325319.png" alt="image-20220722160325319"></p>
<p>获取的是上、下一个兄弟节点，包括元素节点或者文本节点等等</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722160414655.png" alt="image-20220722160414655"></p>
<ol start="4">
<li>创建节点</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722163003461.png" alt="image-20220722163003461"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722163041556.png" alt="image-20220722163041556"></p>
<p>后面追加元素</p>
<p>例如</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">var</span> ul=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"> <span class="keyword">var</span> li=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"> ul.<span class="title function_">appendChild</span>(li);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722163601337.png" alt="image-20220722163601337"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ul.<span class="title function_">insertBefore</span>(li,ul.<span class="property">children</span>[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>
<p>小项目：简单版发布浏览案例</p>
<ol start="5">
<li>删除节点</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722172142091.png" alt="image-20220722172142091"></p>
<p>小项目：删除留言案例</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722174840322.png" alt="image-20220722174840322"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">&#x27;javascript:void(0);&#x27;</span>&gt; &lt;/a&gt;</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;javascript:;&#x27;</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>不要忘记后面的分号</p>
<ol start="6">
<li>复制节点</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722210247738.png" alt="image-20220722210247738"></p>
<p>这样只是复制了一份节点，还需要将其放到结构中去</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ul=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> clone_li=ul.<span class="property">children</span>[<span class="number">0</span>].<span class="title function_">cloneNode</span>();</span><br><span class="line">ul.<span class="title function_">appendChild</span>(clone_li);</span><br></pre></td></tr></table></figure>
<p>可以用appendChild或者insertBefore</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220722211221343.png" alt="image-20220722211221343"></p>
<p>小项目：动态生成表格</p>
<p>循环数组对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">name</span>: <span class="string">&#x27;xx&#x27;</span>,</span><br><span class="line">	<span class="attr">sex</span>: <span class="string">&#x27;xx&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用,其中obj[k]获取下表为k的属性值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> obj)&#123;</span><br><span class="line">	obj[k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>三种动态创建元素的区别</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723210458794.png" alt="image-20220723210458794"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723210506321.png" alt="image-20220723210506321"></p>
<p>相当于重新创建并加载一个新的页面，在实际开发中不常用</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723211222777.png" alt="image-20220723211222777"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//拼接字符串的效率很低，大约3100毫秒左右</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">	inner.<span class="property">innerHTML</span>+=<span class="string">&#x27;&lt;a href=#&gt;xx&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//利用数组存取，然后再join，效率很高,大约7毫秒左右</span></span><br><span class="line"><span class="keyword">var</span> arr=[];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">	arr.<span class="title function_">push</span>(<span class="string">&#x27;&lt;a href=#&gt;xx&lt;/a&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">inner.<span class="property">innerHTML</span>=arr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723211233945.png" alt="image-20220723211233945"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//比innerHTML拼接字符串的方法效率高很多，但比innerHTML数组连接相比效率低,大约需要20毫秒左右</span></span><br><span class="line"><span class="keyword">var</span> create=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.create&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">	<span class="keyword">var</span> a=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">	create.<span class="title function_">appendChile</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>面试时可能会问到</strong></p>
<h3 id="DOM重点核心-总结"><a class="header-anchor" href="#DOM重点核心-总结">¶</a>DOM重点核心(总结)</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212238955.png" alt="image-20220723212238955"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212323316.png" alt="image-20220723212323316"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212405742.png" alt="image-20220723212405742"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212421499.png" alt="image-20220723212421499"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212434961.png" alt="image-20220723212434961"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212525897.png" alt="image-20220723212525897"></p>
<h3 id="image-20220723212728774"><a class="header-anchor" href="#image-20220723212728774">¶</a><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212728774.png" alt="image-20220723212728774"></h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212900254.png" alt="image-20220723212900254"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723212934112.png" alt="image-20220723212934112"></p>
<h2 id="DOM事件高级"><a class="header-anchor" href="#DOM事件高级">¶</a>DOM事件高级</h2>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220723213147868.png" alt="image-20220723213147868"></p>
<h3 id="注册事件-绑定事件"><a class="header-anchor" href="#注册事件-绑定事件">¶</a>注册事件(绑定事件)</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724110252698.png" alt="image-20220724110252698"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724110309160.png" alt="image-20220724110309160"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724110531411.png" alt="image-20220724110531411"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724110630107.png" alt="image-20220724110630107"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var hello=function()&#123;</span></span><br><span class="line"><span class="comment">//     alert(&#x27;hellonihao &#x27;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hello</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> btns=<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">btns[<span class="number">1</span>].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,hello);</span><br><span class="line"><span class="comment">// btns[1].addEventListener(&#x27;click&#x27;,function()&#123;</span></span><br><span class="line"><span class="comment">//     alert(&#x27;hello world&#x27;);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br></pre></td></tr></table></figure>
<p>addEventListener()同一个元素同一个事件可以添加多个监听器(事件处理程序)，IE9之前版本支持，推荐使用addEventListener();</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724111826236.png" alt="image-20220724111826236"></p>
<p>attachEvent()是IE9之前版本支持，仅做了解，实际生产环境中不要使用</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724112237837.png" alt="image-20220724112237837"></p>
<h3 id="删除事件-解绑事件"><a class="header-anchor" href="#删除事件-解绑事件">¶</a>删除事件(解绑事件)</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724112420776.png" alt="image-20220724112420776"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> divs=<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    divs[<span class="number">0</span>].<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        divs[<span class="number">0</span>].<span class="property">onclick</span>=<span class="literal">null</span>;<span class="comment">//解绑事件</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724114408260.png" alt="image-20220724114408260"></p>
<p>listener不能用匿名函数来写</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> divs=<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//事件监听</span></span></span><br><span class="line"><span class="language-javascript">    divs[<span class="number">0</span>].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,fun);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//事件监听函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;worji&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        divs[<span class="number">0</span>].<span class="title function_">removeEventListener</span>(<span class="string">&#x27;click&#x27;</span>,fun);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724114854045.png" alt="image-20220724114854045"></p>
<p>第二种使用attachEvent()时的解绑事件函数</p>
<h3 id="DOM事件流"><a class="header-anchor" href="#DOM事件流">¶</a>DOM事件流</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724120301253.png" alt="image-20220724120301253"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724120308719.png" alt="image-20220724120308719"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724165638826.png" alt="image-20220724165638826"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//结果是：先弹出father，再弹出son</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    father</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> father=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.father&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> son=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.son&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    father.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;father&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">    son.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;son&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724170328318.png" alt="image-20220724170328318"></p>
<h3 id="事件对象"><a class="header-anchor" href="#事件对象">¶</a>事件对象</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">div.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">event</span>)&#123;&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>
<p>event就是一个事件对象，写到监听函数里面当做形参来看</p>
</li>
<li>
<p>事件对象只有有了事件(onclick onmouseover…)才会存在，他是系统自动创建的，不需要我们传递参数</p>
</li>
<li>
<p>事件对象是事件的一系列相关数据的集合，跟事件相关的，比如鼠标点击里面就包含了鼠标的相关信息、鼠标坐标等，如果是键盘事件就包含键盘的信息，不如判断用户按下了那个键等</p>
</li>
<li>
<p>事件对象的名称是可以自己修改的，建议使用e来代替</p>
</li>
<li>
<p>兼容性问题：IE678用window.event</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">div.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">event</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>兼容性处理方案：e=e||window.event;但实际开发中不太需要</p>
</li>
</ol>
<p><strong>事件对象的常见属性和方法：</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724182255100.png" alt="image-20220724182255100"></p>
<ol>
<li>target:</li>
</ol>
<p>e.target返回的事触发事件的对象(元素)，而this返回的事绑定事件的对象，例如当鼠标点击li中的内容1时：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ul=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    ul.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>console.log(e.target)会输出<ul></ul>,因为鼠标点击的是li中的1，所以触发元素是li,然后通过冒泡传给ul；console.log(this)会输出ul，因为当前绑定事件的元素是ul</p>
<p>但e.target存在兼容性问题，在IE678中不能使用，此时需要调用e.srcElement;</p>
<p>兼容方案：var target=e.target||e.srcElement</p>
<ol start="2">
<li>
<p>currentTarget</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725125805013.png" alt="image-20220725125805013"></p>
<p>是跟this非常相似的属性，但currentTarget存在兼容性问题，IE678不认识，所以在实际开发中提倡使用this</p>
</li>
<li>
<p>e.type返回事件的类型，不带On，如click、mouseover、mouseout</p>
</li>
<li>
<p>e.preventDefault() 阻止默认的行为(事件)</p>
<p>例如链接、表单，我们要求当满足某个条件时才可以跳转到该链接上去，没有满足时让链接不跳转，或者让提交按钮不提交</p>
<p>是一个方法，需要加小括号</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://cs.kittates.top&quot;</span>&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> a=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;a&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        e.<span class="title function_">preventDefault</span>();<span class="comment">//dom推荐方法</span></span></span><br><span class="line"><span class="language-javascript">        e.<span class="property">returnValue</span>;<span class="comment">//低版本浏览器使用，IE678</span></span></span><br><span class="line"><span class="language-javascript">    &#125;) </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>低版本浏览器使用e.returnValue,注意是一个属性，不需要加小括号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">return false</span><br></pre></td></tr></table></figure>
<p>也能阻止默认行为，没有兼容性问题，但其之后的代码不再执行</p>
<h3 id="阻止事件冒泡"><a class="header-anchor" href="#阻止事件冒泡">¶</a>阻止事件冒泡</h3>
<p><strong>面试&amp;&amp;开发</strong></p>
<p>标准写法：利用e.stopPropagation()方法</p>
<p>例如让son弹出,而father不弹出，则需要在son中的函数中调用e.stopPropagation()方法来阻止向上一级的冒泡，存在兼容性问题，IE678不能使用</p>
<p>IE678：window.event.canelBubble=true</p>
<h3 id="事件委托-代理、委派"><a class="header-anchor" href="#事件委托-代理、委派">¶</a>事件委托(代理、委派)</h3>
<p>事件冒泡的一个应用</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724192947408.png" alt="image-20220724192947408"></p>
<p>不用为每个子节点绑定事件(太繁琐)，不必重复使用DOM</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ul=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    ul.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//e.target表明是哪一个节点，如果是点击的ul中的li,则会显示li，通过e.target.style设置该节点的相应属性即可</span></span></span><br><span class="line"><span class="language-javascript">        e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">backgroundColor</span>=<span class="string">&#x27;pink&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="常用的鼠标事件"><a class="header-anchor" href="#常用的鼠标事件">¶</a>常用的鼠标事件</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724195839866.png" alt="image-20220724195839866"></p>
<p><strong>常用的鼠标事件：</strong></p>
<ol>
<li>
<p>禁止鼠标右键菜单</p>
<p>contextmenu鼠标右键菜单事件</p>
</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724200014206.png" alt="image-20220724200014206"></p>
<p>虽然不显示右键菜单，但是还是可以通过ctrl+v来复制和粘贴的</p>
<ol start="2">
<li>
<p>禁止鼠标选中(selectstart 开始选中)</p>
<p>selectstart鼠标选中事件</p>
</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724200430381.png" alt="image-20220724200430381"></p>
<p>但是：</p>
<pre><code>	从文字的最左边还是有一条缝隙是可以复制的

	crtl+A也可以

	F12键调试复制
</code></pre>
<p><strong>鼠标事件对象</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220724201045613.png" alt="image-20220724201045613"></p>
<p>e.screen在实际开发中用的比较少，了解</p>
<p>小项目：跟随鼠标移动的小天使</p>
<p>用到的是mousemove事件，获取鼠标移动时的数据</p>
<p><strong>注意</strong>：设置坐标时记得加后面的单位</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">img.<span class="property">style</span>.<span class="property">top</span>=y-img.<span class="property">height</span>/<span class="number">2</span>+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">img.<span class="property">style</span>.<span class="property">left</span>=x-img.<span class="property">width</span>/<span class="number">2</span>+<span class="string">&#x27;px&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>相同原理的样例：淘宝商品封面放大效果</p>
<h3 id="常用的键盘事件"><a class="header-anchor" href="#常用的键盘事件">¶</a>常用的键盘事件</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725130330190.png" alt="image-20220725130330190"></p>
<p>Alt键、左右箭头键等功能键onkeypress不能识别</p>
<p><strong>存在执行顺序：</strong></p>
<p>如果keydown和keypress事件都存在时，先执行keydown，最后执行keyup事件</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725130953315.png" alt="image-20220725130953315"></p>
<p>键盘事件对象：</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725154545871.png" alt="image-20220725154545871"></p>
<p>通过keyCode可以获取键盘按键的ASCII码值，从而判断按下了哪个键</p>
<p>**注意：**keyup、keydown事件不区分字母大小写，a和A得到的都是65；keypress是区分大小写的，默认是大写</p>
<p>小项目1：模拟京东按键输入内容</p>
<p>小项目2：模拟京东快递单号查询</p>
<p>拓展开发：射击小游戏</p>
<h2 id="BOM"><a class="header-anchor" href="#BOM">¶</a>BOM</h2>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725162442416.png" alt="image-20220725162442416"></p>
<h3 id="BOM概述"><a class="header-anchor" href="#BOM概述">¶</a>BOM概述</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725163132303.png" alt="image-20220725163132303"></p>
<p>例如在不同的浏览器调用alert函数，弹出的外观是不一样的</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725163212388.png" alt="image-20220725163212388"></p>
<p>DOM包含在BOM中，所以</p>
<p>在学习DOM时，经常是document.querySelector(‘xxx’),而规范的写法是window.document.querySelector(‘xxx’)，window可以省略的</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725163821128.png" alt="image-20220725163821128"></p>
<p>在DOM中声明的全局变量或方法，在BOM中可以通过window.example的形式调用</p>
<h3 id="window对象的常见事件"><a class="header-anchor" href="#window对象的常见事件">¶</a>window对象的常见事件</h3>
<ol>
<li>窗口加载事件</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725164615657.png" alt="image-20220725164615657"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725165004286.png" alt="image-20220725165004286"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样<script></script>就可以写到文档的任何一个位置了，也可以外部引用</p>
<p>window.onload若有多个，只会执行最后一个；而window.addEventListener(‘load’,function(){})若有多个时，会全部执行</p>
<p><strong>DOMContentLoaded</strong>:</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725165236520.png" alt="image-20220725165236520"></p>
<p>DOMContentLoaded在把基本构架加载完成之后就会执行，而window.onload是将所有内容加载后才执行，相比之下，DOMContentLoaded比window.onload加载速度快</p>
<ol start="2">
<li>
<p>调整窗口大小事件</p>
<p><strong>resize事件</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725190233682.png" alt="image-20220725190233682"></p>
<pre><code> window.innerWidth 获取当前屏幕的宽度
</code></pre>
</li>
</ol>
<h3 id="定时器"><a class="header-anchor" href="#定时器">¶</a>定时器</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725190436804.png" alt="image-20220725190436804"></p>
<ol>
<li>
<p>setTimeout()定时器</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725190557208.png" alt="image-20220725190557208"></p>
<p>setTimeout()属于window对象，window可以省略，可以直接调用，像alert(); 延时时间是毫秒单位，省略默认为0</p>
<p>函数调用可以直接在setTimeout()里面写函数，也可以在外部写完后再在setTimeout里面调用，还有一种不提倡的写法:‘函数名()’</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法一</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="title function_">alert</span>(<span class="string">&#x27;xxx&#x27;</span>);</span><br><span class="line">&#125;,<span class="number">2000</span>)</span><br><span class="line"><span class="comment">//方法二</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callback</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="title function_">alert</span>(<span class="string">&#x27;xxx&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">setTimeout</span>(callback,<span class="number">2000</span>);</span><br><span class="line"><span class="comment">//不提倡写法</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="string">&#x27;callback()&#x27;</span>,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure>
<p>由于页面中可能会有多个不同的定时器，可以给定时器加标识符（名字），例如：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> time1=<span class="built_in">setTimeout</span>(callback1,<span class="number">2000</span>);</span><br><span class="line"><span class="keyword">var</span> time2=<span class="built_in">setTimeout</span>(callback2,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure>
<pre><code> ![image-20220725191625173](image-20220725191625173.png)
</code></pre>
<p>小项目：5s之后自动关闭广告</p>
<p>清除定时器：clearTimeout()</p>
</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725192829342.png" alt="image-20220725192829342"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> timer=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;bomb&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,<span class="number">5000</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearTimeout</span>(timer);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stop the bomb&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>cancel<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>setInterval()定时器</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725193842673.png" alt="image-20220725193842673"></p>
<p>小项目：倒计时</p>
<p>清除定时器：clearInterval()</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220725200842171.png" alt="image-20220725200842171"></p>
<p>小项目：发送短信</p>
<h3 id="this指向问题"><a class="header-anchor" href="#this指向问题">¶</a>this指向问题</h3>
<p><strong>面试重点</strong></p>
<ol>
<li>
<p>在全局作用域或者是普通函数中：this指向全局对象window</p>
<p>**注意：**计时器中的this指向window</p>
</li>
<li>
<p>在方法中调用：this指向的是包含该方法的对象(调用者)，例如</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o=&#123;</span><br><span class="line">	<span class="attr">sayHi</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">		<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);<span class="comment">//this指向o</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>构造函数中调用:this指向构造函数的实例，例如：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);<span class="comment">//指向fun</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fun=<span class="keyword">new</span> <span class="title function_">fun</span>();</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="JS执行队列"><a class="header-anchor" href="#JS执行队列">¶</a>JS执行队列</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726114247625.png" alt="image-20220726114247625"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726114321302.png" alt="image-20220726114321302"></p>
<p>例如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<p>上述结果为：先1 再2 后3，运行了异步处理机制</p>
<p>JS虽然是单线程的，但是允许处理多个任务</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">&#125;,<span class="number">0</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>上述结果为：先1 再2 后3,原因如下：</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726115013726.png" alt="image-20220726115013726"></p>
<p>任务队列又称为消息队列</p>
<p><strong>JS执行机制</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726115456875.png" alt="image-20220726115456875"></p>
<p>执行栈中的任务完成之后，会把任务队列中的任务放到执行栈中，继续执行。所有任务执行完成之后，队列就会清空</p>
<p>**事件循环(event loop)：**执行栈中的同步任务完成之后，会重复的到任务队列中查看是否有新的任务，如果有，就拿到执行栈中执行</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726120722940.png" alt="image-20220726120722940"></p>
<h3 id="location对象"><a class="header-anchor" href="#location对象">¶</a>location对象</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726122400647.png" alt="image-20220726122400647"></p>
<ol>
<li>
<p>location对象属性</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726123927115.png" alt="image-20220726123927115"></p>
</li>
</ol>
<p>重点记住href、search</p>
<p>小项目1：5秒钟之后自动跳转页面</p>
<p>小项目2：获取URL参数数据：</p>
<pre><code>			通过location.search获取参数,格式是类似于?name=kittates的形式，先通过substr获取name=kittates的字串，然后通过split('=')将其分割为数组，得到第二个参数即为所需，
</code></pre>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> params=location.<span class="property">search</span>.<span class="title function_">substr</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> t=params.<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">var</span> span=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span><br><span class="line">span.<span class="property">innerHTML</span>=t;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p>location对象的方法</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726173247251.png" alt="image-20220726173247251"></p>
</li>
</ol>
<p>location.href()和location.assign()都能够返回前一个页面，location.replace()不能后退，replace将url的地址替换了，以前地址的缓存被替换了</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220726173733907.png" alt="image-20220726173733907"></p>
<h3 id="navigator对象"><a class="header-anchor" href="#navigator对象">¶</a>navigator对象</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220727131042304.png" alt="image-20220727131042304"></p>
<p>根据是手机端还是电脑端打开的页面从而以不同的形式展现</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220727131445634.png" alt="image-20220727131445634"></p>
<p>了解即可，一般情况下都是服务端做的</p>
<h3 id="history对象"><a class="header-anchor" href="#history对象">¶</a>history对象</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220727131807080.png" alt="image-20220727131807080"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="keyword">var</span> btn=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">	btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">		history.<span class="title function_">forward</span>();<span class="comment">//前进</span></span><br><span class="line">		history.<span class="title function_">back</span>();<span class="comment">//后退</span></span><br><span class="line">		history.<span class="title function_">go</span>(<span class="number">2</span>);<span class="comment">//前进2步</span></span><br><span class="line">		history.<span class="title function_">go</span>(-<span class="number">3</span>);<span class="comment">//后退3步</span></span><br><span class="line">	&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>一般在浏览器中不会使用，但是会在一些OA办公系统中见到</p>
<h2 id="PC端网页特效"><a class="header-anchor" href="#PC端网页特效">¶</a>PC端网页特效</h2>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220727133149802.png" alt="image-20220727133149802"></p>
<h3 id="元素偏移量offset"><a class="header-anchor" href="#元素偏移量offset">¶</a>元素偏移量offset</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220727135803280.png" alt="image-20220727135803280"></p>
<p>offsetTop和offsetLeft以带有定位的父亲为准，如果有父亲或者父亲没有定位，则以body为准</p>
<p><strong>offset与style的区别</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220727141445529.png" alt="image-20220727141445529"></p>
<p>行内样式表:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#x27;&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>小项目1：获取鼠标在盒子内的坐标</p>
<p>小项目2：拖动模态框</p>
<p>小项目3：仿京东放大镜页面效果</p>
<h3 id="元素可视区client"><a class="header-anchor" href="#元素可视区client">¶</a>元素可视区client</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220727205910268.png" alt="image-20220727205910268"></p>
<p>与offset的区别是：clientWidth、clientHeight不包含边框</p>
<h3 id="淘宝flexible-js源码分析"><a class="header-anchor" href="#淘宝flexible-js源码分析">¶</a>淘宝flexible.js源码分析</h3>
<ol>
<li>
<p>立即执行函数：不需要调用，立马能够自己执行的函数</p>
<p>写法1：（function() {})()</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
<p>写法2：（function(){}())</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;())</span><br></pre></td></tr></table></figure>
<p>里面也可以传递参数</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(a,b);</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
<p>也可以为立即函数起个名字</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(a+b);</span><br><span class="line">&#125;)(a,b)</span><br></pre></td></tr></table></figure>
<p>立即函数独立的创建了一个作用域，里面所有的变量都是局部变量，不会有命名冲突的情况</p>
<pre><code> ![image-20220729112920811](image-20220729112920811.png)
</code></pre>
</li>
</ol>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220803092246234.png" alt="image-20220803092246234"></p>
<h3 id="元素滚动scroll"><a class="header-anchor" href="#元素滚动scroll">¶</a>元素滚动scroll</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220729113254601.png" alt="image-20220729113254601"></p>
<p>scrollWidth和scrollHeight不包含边框，但是包含padding，内容可能会超出盒子的范围，所以获取的是元素实际的大小</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//显示滚动条</span><br><span class="line"><span class="attribute">overflow</span>: auto</span><br></pre></td></tr></table></figure>
<p><strong>scroll事件</strong></p>
<p>小项目：仿淘宝固定右侧侧边栏</p>
<p><strong>注意</strong></p>
<p>获取页面被卷去的高度：window.pageYOffset，但存在兼容性问题</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220729121130865.png" alt="image-20220729121130865"></p>
<p>DTD：<!DOCTYPE html></p>
<p>兼容性封装函数如上</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220729121405687.png" alt="image-20220729121405687"></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220729121501468.png" alt="image-20220729121501468"></p>
<p><strong>页面滚动距离用window.pageXOffset、window.pageYOffset获取</strong></p>
<p><strong>mouseenter和mouseover的区别：</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220729161710530.png" alt="image-20220729161710530"></p>
<p>mouseover子盒子会冒泡到当前盒子而mouseenter不会</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220803095029188.png" alt="image-20220803095029188"></p>
<p>mouseover会冒泡</p>
<h3 id="动画函数封装"><a class="header-anchor" href="#动画函数封装">¶</a>动画函数封装</h3>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220729161936559.png" alt="image-20220729161936559"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>夏雨荷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 简单动画函数封装obj目标对象 target 目标位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj, target</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> &gt;= target) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 停止动画 本质是停止定时器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearInterval</span>(timer);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + <span class="number">1</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">30</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">animate</span>(div, <span class="number">300</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">animate</span>(span, <span class="number">200</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上述存在使用absolute relative动画速度不同的问题？</p>
<p>解决：</p>
<p>absolute：如果元素没有已定位的祖先元素，那么它的位置则是相对于最初的包含块（body）。</p>
<p>relative：元素“相对于”它的原始起点（上一个位置）进行移动</p>
<p><strong>封装</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220803101200997.png" alt="image-20220803101200997"></p>
<p>上述方法每次调用就会开辟一段空间，性能不太好。</p>
<p>性能优化+消除变量歧义：</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220803105336298.png" alt="image-20220803105336298"></p>
<p>将timer作为调用对象的属性进行操作</p>
<p>给动画设置按钮，点击按钮执行，出现问题：</p>
<p>按钮点击次数越多，动画速度越快，解决方案：</p>
<p>先清除之前的定时器，再调用动画</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220803110246053.png" alt="image-20220803110246053"></p>
<p><strong>缓动动画</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220803111019357.png" alt="image-20220803111019357"></p>
<p>代码实现：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj,target</span>)&#123;</span><br><span class="line">        obj.<span class="property">timer</span>=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(obj.<span class="property">offsetLeft</span>==target)&#123;</span><br><span class="line">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="comment">//再计时器内部设置步长,将步长设置为整数，避免出现精度问题而无法正常到达目标位置</span></span><br><span class="line">            <span class="keyword">var</span> step=<span class="title class_">Math</span>.<span class="title function_">ceil</span>((target-obj.<span class="property">offsetLeft</span>)/<span class="number">10</span>);</span><br><span class="line">            <span class="comment">// if(step&lt;1) clearInterval(obj.timer);</span></span><br><span class="line">            obj.<span class="property">style</span>.<span class="property">left</span>=obj.<span class="property">offsetLeft</span>+step+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;lasting&quot;</span>);</span><br><span class="line">        &#125;,<span class="number">15</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    <span class="title function_">animate</span>(div,<span class="number">700</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>实现后退(比如点击500到达500位置，点击800到达800位置，实现前进后退功能)：</p>
<p>step&lt;0要向下取整,要加判断</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">step = step&lt;<span class="number">0</span>?<span class="title class_">Math</span>.<span class="title function_">floor</span>(step):<span class="title class_">Math</span>.<span class="title function_">ceil</span>(step)</span><br></pre></td></tr></table></figure>
<p><strong>动画函数添加回调函数</strong></p>
<p>将函数名作为参数传递过去</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj,target,callback</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        obj.<span class="property">timer</span>=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(obj.<span class="property">offsetLeft</span>==target)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//定时器结束后执行callback函数</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(callback)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">callback</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125; </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//再计时器内部设置步长,将步长设置为整数，避免出现精度问题而无法正常到达目标位置</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> step=<span class="title class_">Math</span>.<span class="title function_">ceil</span>((target-obj.<span class="property">offsetLeft</span>)/<span class="number">10</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// if(step&lt;1) clearInterval(obj.timer);</span></span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">style</span>.<span class="property">left</span>=obj.<span class="property">offsetLeft</span>+step+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(&quot;lasting&quot;);</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,<span class="number">15</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">animate</span>(div,<span class="number">700</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello&quot;</span>);&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>动画函数单独封装成一个js文件</p>
<p>小项目：引用animate动画函数</p>
<p>通过一下方式引用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;animate.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>出现的问题：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj,target,callback</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span><br><span class="line">    obj.<span class="property">timer</span>=<span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">offsetLeft</span>);</span><br><span class="line">        <span class="keyword">var</span> step=(target-obj.<span class="property">offsetLeft</span>)/<span class="number">10</span>;</span><br><span class="line">        step = step&lt;<span class="number">0</span>?<span class="title class_">Math</span>.<span class="title function_">floor</span>(step):<span class="title class_">Math</span>.<span class="title function_">ceil</span>(step)</span><br><span class="line">        <span class="keyword">if</span>(obj.<span class="property">offsetLeft</span>==target)&#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span><br><span class="line">            <span class="comment">//定时器结束后执行callback函数</span></span><br><span class="line">            callback&amp;&amp;<span class="title function_">callback</span>();</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">//再计时器内部设置步长,将步长设置为整数，避免出现精度问题而无法正常到达目标位置</span></span><br><span class="line">        obj.<span class="property">style</span>.<span class="property">left</span>=obj.<span class="property">offsetLeft</span>+step+<span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    &#125;,<span class="number">15</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>中间的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(obj.<span class="property">offsetLeft</span>==target)()</span><br></pre></td></tr></table></figure>
<p>最好使用==，因为存在如果target是负值-160的时候，而此时是&gt;=,(target-obj.offsetLeft)/10=(-160-0)/10=-16,这是会发现-16是&gt;=target，也就是-16&gt;=-160的，所以执行一次就clear了，所以综上，还是使用==</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> step=(target-obj.<span class="property">offsetLeft</span>)/<span class="number">10</span>;</span><br><span class="line">step = step&lt;<span class="number">0</span>?<span class="title class_">Math</span>.<span class="title function_">floor</span>(step):<span class="title class_">Math</span>.<span class="title function_">ceil</span>(step)</span><br></pre></td></tr></table></figure>
<p>第一行先保持原样，第二行在据实际判断执行的操作</p>
<p>小项目1：网页轮播图，在品优购上面操作</p>
<p>手动调用事件，例如：</p>
<p>arrow_r.click():模拟手动点击触发事件</p>
<p><strong>节流阀</strong></p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220803202030268.png" alt="image-20220803202030268"></p>
<p>小项目2：返回顶部</p>
<p><strong>window.scrollTo(x,y)</strong></p>
<p>滚动到文档中的某个坐标。</p>
<p><img src="/2022/09/19/javascript%E8%BF%9B%E9%98%B6/image-20220804134743887.png" alt="image-20220804134743887"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(&#123;</span><br><span class="line">    <span class="attr">top</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="attr">behavior</span>: <span class="string">&quot;smooth&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>小项目3：筋斗云</p>
<h2 id="移动端网页特效"><a class="header-anchor" href="#移动端网页特效">¶</a>移动端网页特效</h2>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>dom</tag>
        <tag>bom</tag>
      </tags>
  </entry>
  <entry>
    <title>javaweb开发技术-第五章实验</title>
    <url>/2022/09/18/javaweb%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF-%E7%AC%AC%E4%BA%94%E7%AB%A0%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="javaweb开发技术教程（第二版）第五章实验"><a class="header-anchor" href="#javaweb开发技术教程（第二版）第五章实验">¶</a>javaweb开发技术教程（第二版）第五章实验</h3>
<p>将用户的会话信息存储在session中</p>
<h4 id="goods-jsp"><a class="header-anchor" href="#goods-jsp">¶</a>goods.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">17</span>:08</span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=GBK&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        h3 &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        .tb &#123;</span><br><span class="line">            margin: 40px auto;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 250px;</span><br><span class="line">        &#125;</span><br><span class="line">        table &#123;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">80</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        button &#123;</span><br><span class="line">            display: block;</span><br><span class="line">            width: 80px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            margin: 10px auto;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;商品列表&lt;/h3&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;goods_ok.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span> class=<span class="string">&quot;tb&quot;</span>&gt;</span><br><span class="line">    &lt;table border=<span class="string">&quot;1px&quot;</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;商品标号&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;商品名称&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;商品价格&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;goods&quot;</span> value=<span class="string">&quot;图书&quot;</span>&gt;<span class="number">1</span>&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;图书&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;<span class="number">20</span>&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;goods&quot;</span> value=<span class="string">&quot;CD&quot;</span>&gt;<span class="number">2</span>&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;CD&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;<span class="number">10</span>&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;goods&quot;</span> value=<span class="string">&quot;衣服&quot;</span>&gt;<span class="number">3</span>&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;衣服&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;<span class="number">390</span>&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;goods&quot;</span> value=<span class="string">&quot;玩具&quot;</span>&gt;<span class="number">4</span>&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;玩具&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;<span class="number">5</span>&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;goods&quot;</span> value=<span class="string">&quot;手机&quot;</span>&gt;<span class="number">5</span>&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;手机&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;<span class="number">2090</span>&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;购买&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="goods-ok-jsp"><a class="header-anchor" href="#goods-ok-jsp">¶</a>goods_ok.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.lang.reflect.Array&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Arrays&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">18</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=GBK&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">    request.setCharacterEncoding(<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">    String[] goods = request.getParameterValues(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(goods == <span class="literal">null</span>)&#123;</span><br><span class="line">      out.println(<span class="string">&quot;您没有选中的物品&quot;</span>);</span><br><span class="line">      out.println(<span class="string">&quot;&lt;a href=&#x27;goods.jsp&#x27;&gt;返回商店&lt;/a&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      out.println(<span class="string">&quot;您确定要购买：&quot;</span>);</span><br><span class="line">      <span class="keyword">for</span>(String t:goods)&#123;</span><br><span class="line">        out.print(t+<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      out.println(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">      ArrayList&lt;String&gt; carts = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>(carts==<span class="literal">null</span>)&#123;</span><br><span class="line">        carts = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">      &#125;</span><br><span class="line">      ArrayList&lt;String&gt; carts_add = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts_add&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>(carts_add==<span class="literal">null</span>)&#123;</span><br><span class="line">        carts_add = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">for</span>(String t:goods)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!carts.contains(t))&#123;</span><br><span class="line">          carts_add.add(t);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      session.setAttribute(<span class="string">&quot;carts_add&quot;</span>,carts_add);</span><br><span class="line">  %&gt;</span><br><span class="line">  &lt;a href=<span class="string">&quot;carts_yes.jsp&quot;</span>&gt;是&lt;/a&gt;</span><br><span class="line">  &lt;a href=<span class="string">&quot;carts_no.jsp&quot;</span>&gt;否&lt;/a&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">    &#125;</span><br><span class="line">  %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="carts-yes-jsp"><a class="header-anchor" href="#carts-yes-jsp">¶</a>carts_yes.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">18</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">    request.setCharacterEncoding(<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">    ArrayList&lt;String&gt; carts = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts&quot;</span>);</span><br><span class="line">    ArrayList&lt;String&gt; carts_add = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts_add&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(carts==<span class="literal">null</span>)&#123;</span><br><span class="line">      carts = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(carts_add == <span class="literal">null</span>)&#123;</span><br><span class="line">      carts_add = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(String t:carts_add)&#123;</span><br><span class="line">      carts.add(t);</span><br><span class="line">    &#125;</span><br><span class="line">    session.setAttribute(<span class="string">&quot;carts&quot;</span>,carts);</span><br><span class="line">    response.sendRedirect(<span class="string">&quot;carts.jsp&quot;</span>);</span><br><span class="line">  %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="carts-no-jsp"><a class="header-anchor" href="#carts-no-jsp">¶</a>carts_no.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">18</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line"></span><br><span class="line">    session.setAttribute(<span class="string">&quot;carts_add&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">    response.sendRedirect(<span class="string">&quot;goods.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="carts-jsp"><a class="header-anchor" href="#carts-jsp">¶</a>carts.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">18</span>:<span class="number">22</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">      request.setCharacterEncoding(<span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">      ArrayList&lt;String&gt; carts = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts&quot;</span>);</span><br><span class="line">      ArrayList&lt;String&gt; carts_add = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts_add&quot;</span>);</span><br><span class="line">      out.print(<span class="string">&quot;本次新增购买的商品: &quot;</span>);</span><br><span class="line">      <span class="keyword">for</span>(String t:carts_add)&#123;</span><br><span class="line">          out.print(t+<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      out.println();</span><br><span class="line">      out.print(<span class="string">&quot;您的购物车里共有: &quot;</span>);</span><br><span class="line">      <span class="keyword">for</span>(String t:carts)&#123;</span><br><span class="line">          out.print(t+<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      out.println(<span class="string">&quot;&lt;a href=&#x27;goods.jsp&#x27;&gt;返回商店&lt;/a&gt;&quot;</span>);</span><br><span class="line">  %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>javaweb</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>javaweb</tag>
        <tag>application</tag>
      </tags>
  </entry>
  <entry>
    <title>application实现网页访问计数功能</title>
    <url>/2022/09/18/application%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>用application实现一个网页计数功能，将计数器放在application中</p>
<h4 id="application-jsp"><a class="header-anchor" href="#application-jsp">¶</a>application.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">16</span>:<span class="number">43</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="type">int</span> num;</span><br><span class="line">        <span class="keyword">if</span>(application.getAttribute(<span class="string">&quot;num&quot;</span>)==<span class="literal">null</span>)&#123;</span><br><span class="line">            num=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            num = (Integer)application.getAttribute(<span class="string">&quot;num&quot;</span>);</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        application.setAttribute(<span class="string">&quot;num&quot;</span>,num);</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;h3&gt;页面已被访问了&lt;%= num%&gt;次&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>javaweb</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>javaweb</tag>
        <tag>application</tag>
      </tags>
  </entry>
  <entry>
    <title>cookie实现自动登录功能</title>
    <url>/2022/09/17/cookie%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用cookie实现用户自动登录功能</p>
<h4 id="login-jsp"><a class="header-anchor" href="#login-jsp">¶</a>login.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">20</span>:<span class="number">12</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            padding: <span class="number">0</span>;</span><br><span class="line">            margin: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        .main &#123;</span><br><span class="line">            padding-top: 20px;</span><br><span class="line">            margin: 60px auto;</span><br><span class="line">            width: <span class="number">18</span>%;</span><br><span class="line">            height: 210px;</span><br><span class="line">            border-radius: <span class="number">5</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .man &#123;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">        .man .top,</span><br><span class="line">        .down &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">30</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .main .top .l,</span><br><span class="line">        .down .l &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">        .main .top .r,</span><br><span class="line">        .down .r &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            right: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">        .main .down &#123;</span><br><span class="line">            margin-top: 15px;</span><br><span class="line">        &#125;</span><br><span class="line">        .mess &#123;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: 50px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        .mess .top &#123;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">50</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .mess .down &#123;</span><br><span class="line">            margin-top: <span class="number">0</span>;</span><br><span class="line">            width: <span class="number">100</span>%;</span><br><span class="line">            height: <span class="number">50</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .submit &#123;</span><br><span class="line">            margin-top: 20px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        .submit button &#123;</span><br><span class="line">            margin: auto;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--    如果cookie存在并且存储着用户的登录信息，则直接登录跳转页面--%&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        Cookie c[] = request.getCookies();</span><br><span class="line">        <span class="keyword">if</span>(c!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;c.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(c[i].getName().equals(<span class="string">&quot;user&quot;</span>))&#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> c[i].getValue();</span><br><span class="line">                    session.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">                    response.sendRedirect(<span class="string">&quot;zy.jsp&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;dealLogin.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span> class=<span class="string">&quot;main&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;man&quot;</span>&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;top&quot;</span>&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;l&quot;</span>&gt;用户名&lt;/div&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;r&quot;</span>&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;user&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;down&quot;</span>&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;l&quot;</span>&gt;密码&lt;/div&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;r&quot;</span>&gt;&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;passwd&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;mess&quot;</span>&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;top&quot;</span>&gt;</span><br><span class="line">                不保存用户名</span><br><span class="line">                &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;timer&quot;</span> value=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;down&quot;</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;timer&quot;</span> value=<span class="string">&quot;5&quot;</span>&gt;<span class="number">5</span>秒</span><br><span class="line">                &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;timer&quot;</span> value=<span class="string">&quot;10&quot;</span>&gt;<span class="number">10</span>秒</span><br><span class="line">                &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;timer&quot;</span> value=<span class="string">&quot;20&quot;</span>&gt;<span class="number">20</span>秒</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">            &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;提交&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="dealLogin-jsp"><a class="header-anchor" href="#dealLogin-jsp">¶</a>dealLogin.jsp</h3>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">20</span>:<span class="number">48</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">passwd</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;passwd&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user.equals(<span class="string">&quot;kittates&quot;</span>)&amp;&amp;passwd.equals(<span class="string">&quot;kittates&quot;</span>)&amp;&amp;user!=<span class="literal">null</span>&amp;&amp;passwd!=<span class="literal">null</span>)&#123;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">            session.setAttribute(<span class="string">&quot;passwd&quot;</span>,passwd);</span><br><span class="line">            <span class="type">String</span> <span class="variable">timer</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;timer&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(timer!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> Integer.parseInt(timer);</span><br><span class="line">                <span class="type">Cookie</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">                c.setMaxAge(num);</span><br><span class="line">                response.addCookie(c);</span><br><span class="line"><span class="comment">//                if(num&gt;0)&#123;</span></span><br><span class="line"><span class="comment">//                    Cookie c = new Cookie(&quot;user&quot;,user);</span></span><br><span class="line"><span class="comment">//                    c.setMaxAge(num);</span></span><br><span class="line"><span class="comment">//                    response.addCookie(c);</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;zy.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;login_cookie.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="zy-jsp"><a class="header-anchor" href="#zy-jsp">¶</a>zy.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">20</span>:<span class="number">58</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> (String)session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user!=<span class="literal">null</span>)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;welcome &lt;/h3&gt;&quot;</span>+user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;login.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="总结"><a class="header-anchor" href="#总结">¶</a>总结</h4>
<p>很带劲😢</p>
]]></content>
      <categories>
        <category>javaweb</category>
        <category>cookie</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>javaweb</tag>
        <tag>cookie</tag>
      </tags>
  </entry>
  <entry>
    <title>session实现简易购物车</title>
    <url>/2022/09/17/session%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93%E8%B4%AD%E7%89%A9%E8%BD%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="简介"><a class="header-anchor" href="#简介">¶</a>简介</h4>
<p>通过session实现简易购物车。</p>
<p>session对象保存用户的登录信息以及用户的购物信息，使得用户在不同的页面购买商品后仍能读取幷显示之前所购买的商品。</p>
<ul>
<li>head.jsp：顶部列表界面，通过&lt;%@ include file=“”%&gt;包含在内</li>
<li>fruit.jsp：水果购物界面</li>
<li>drink.jsp：音频购物界面</li>
<li>buy.jsp：添加到购物车界面，会转向到shop.jsp页面，为商品界面和cart.jsp界面传递用户选取的商品信息</li>
<li>cart.jsp：购物车界面</li>
<li>check.jsp：验证用户登录信息的页面，若没有登录，则不能访问，会自动跳转到login.html页面上</li>
<li>logout.jsp：用户退出页面</li>
</ul>
<h4 id="login-html"><a class="header-anchor" href="#login-html">¶</a>login.html</h4>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">110px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">60%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span> <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span> <span class="selector-class">.right</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> <span class="selector-class">.sub</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">125px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> <span class="selector-class">.reset</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">115px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sub</span> <span class="selector-tag">button</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.reset</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login.jsp&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>用户:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;passwd&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;passwd&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;foot&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sub&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">name</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="login-jsp"><a class="header-anchor" href="#login-jsp">¶</a>login.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">16</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">58</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="number">4</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">span</span> <span class="operator">=</span> document.querySelector(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">            <span class="type">var</span> <span class="variable">timer</span> <span class="operator">=</span> setInterval(function()&#123;</span><br><span class="line">                <span class="keyword">if</span>(t===<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.innerHTML=t;</span><br><span class="line">                    t--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">passwd</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;passwd&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user.length()==<span class="number">0</span> || passwd.length()==<span class="number">0</span>)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;请正确输入，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(user.equals(<span class="string">&quot;kittates&quot;</span>)&amp;&amp;passwd.equals(<span class="string">&quot;kittates&quot;</span>) &amp;&amp; user.length()!=<span class="number">0</span> &amp;&amp;passwd.length()!=<span class="number">0</span>) &#123;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;loginUserName&quot;</span>,user);</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;success.jsp?name=&quot;</span>+user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;用户名或密码错误，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="success-jsp"><a class="header-anchor" href="#success-jsp">¶</a>success.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">0</span>:<span class="number">10</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%--check一下是否用户登录--%&gt;</span><br><span class="line">&lt;%@ include file=<span class="string">&quot;check.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="number">4</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">span</span> <span class="operator">=</span> document.querySelector(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">            <span class="type">var</span> <span class="variable">timer</span> <span class="operator">=</span> setInterval(function()&#123;</span><br><span class="line">                <span class="keyword">if</span>(t===<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.innerHTML=t;</span><br><span class="line">                    t--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%@ include file=<span class="string">&quot;head.jsp&quot;</span>%&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h3&gt;欢迎光临 &quot;</span>+name+<span class="string">&quot; 登录成功&lt;/h3&gt;&quot;</span>);</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="head-jsp"><a class="header-anchor" href="#head-jsp">¶</a>head.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">05</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;fruit.jsp&quot;</span>&gt;水果店&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;drink.jsp&quot;</span>&gt;饮品店&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;cart.jsp&quot;</span>&gt;购物车&lt;/a&gt;</span><br><span class="line">        &lt;a href=<span class="string">&quot;logout.jsp&quot;</span>&gt;退出登录&lt;/a&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="check-jsp"><a class="header-anchor" href="#check-jsp">¶</a>check.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">10</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="number">4</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">span</span> <span class="operator">=</span> document.querySelector(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">            <span class="type">var</span> <span class="variable">timer</span> <span class="operator">=</span> setInterval(function()&#123;</span><br><span class="line">                <span class="keyword">if</span>(t===<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.innerHTML=t;</span><br><span class="line">                    t--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)session.getAttribute(<span class="string">&quot;loginUserName&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(name==<span class="literal">null</span>)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;请先登录，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="fruit-jsp"><a class="header-anchor" href="#fruit-jsp">¶</a>fruit.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">21</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ include file=<span class="string">&quot;check.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">&quot;head.jsp&quot;</span>%&gt;</span><br><span class="line">    &lt;div align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">        &lt;form action=<span class="string">&quot;buy.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">            &lt;select name=<span class="string">&quot;goods&quot;</span> id=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;梨&quot;</span>&gt;梨&lt;/option&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;苹果&quot;</span>&gt;苹果&lt;/option&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;香蕉&quot;</span>&gt;香蕉&lt;/option&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;橘子&quot;</span>&gt;橘子&lt;/option&gt;</span><br><span class="line">            &lt;/select&gt;</span><br><span class="line">            &lt;button type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span>&gt;加入购物车&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="buy-jsp"><a class="header-anchor" href="#buy-jsp">¶</a>buy.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">28</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ include file=<span class="string">&quot;check.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">goods</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(goods==<span class="literal">null</span>)&#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;success.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ArrayList&lt;String&gt; carts = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(carts == <span class="literal">null</span>)&#123;</span><br><span class="line">                carts = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            carts.add(goods);</span><br><span class="line">            session.setAttribute(<span class="string">&quot;carts&quot;</span>,carts);</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;cart.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="drink-jsp"><a class="header-anchor" href="#drink-jsp">¶</a>drink.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">24</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ include file=<span class="string">&quot;check.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">&quot;head.jsp&quot;</span>%&gt;</span><br><span class="line">    &lt;div align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">        &lt;form action=<span class="string">&quot;buy.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">            &lt;select name=<span class="string">&quot;goods&quot;</span> id=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;啤酒&quot;</span>&gt;啤酒&lt;/option&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;可乐&quot;</span>&gt;可乐&lt;/option&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;牛奶&quot;</span>&gt;牛奶&lt;/option&gt;</span><br><span class="line">                &lt;option value=<span class="string">&quot;咖啡&quot;</span>&gt;咖啡&lt;/option&gt;</span><br><span class="line">            &lt;/select&gt;</span><br><span class="line">            &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;加入购物车&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="cart-jsp"><a class="header-anchor" href="#cart-jsp">¶</a>cart.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">35</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ include file=<span class="string">&quot;check.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">&quot;head.jsp&quot;</span>%&gt;</span><br><span class="line">    &lt;div align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            ArrayList&lt;String&gt; carts = (ArrayList&lt;String&gt;)session.getAttribute(<span class="string">&quot;carts&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(carts==<span class="literal">null</span>)&#123;</span><br><span class="line">                out.print(<span class="string">&quot;&lt;h3&gt;你的购物车为空&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                out.println(<span class="string">&quot;您的购物车中选购了：&quot;</span>);</span><br><span class="line">                <span class="keyword">for</span>(String t:carts)&#123;</span><br><span class="line">                    out.println(t+<span class="string">&quot;&amp;nbsp;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="logout-jsp"><a class="header-anchor" href="#logout-jsp">¶</a>logout.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">40</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page errorPage=<span class="string">&quot;pageError.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="number">4</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">span</span> <span class="operator">=</span> document.querySelector(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">            <span class="type">var</span> <span class="variable">timer</span> <span class="operator">=</span> setInterval(function()&#123;</span><br><span class="line">                <span class="keyword">if</span>(t===<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.innerHTML=t;</span><br><span class="line">                    t--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        session.invalidate();</span><br><span class="line">        out.println(<span class="string">&quot;&lt;h3&gt;退出中，&lt;span&gt;5&lt;/span&gt;秒后返回&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>javaweb</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>javaweb</tag>
        <tag>session</tag>
      </tags>
  </entry>
  <entry>
    <title>session实现用户登录</title>
    <url>/2022/09/17/session%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用session对象实现用户的登录验证功能，对于没有登录的用户不允许其访问网站页面，登录成功的用户信息将保存到session中，供success.jsp使用;如果直接通过url地址访问success,.jsp，则会因为session为null而重定向的login.html中。</p>
<h4 id="login-html"><a class="header-anchor" href="#login-html">¶</a>login.html</h4>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">110px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">60%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span> <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span> <span class="selector-class">.right</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> <span class="selector-class">.sub</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">125px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> <span class="selector-class">.reset</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">115px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sub</span> <span class="selector-tag">button</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.reset</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login.jsp&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>用户:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;passwd&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;passwd&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;foot&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sub&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">name</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="login-jsp"><a class="header-anchor" href="#login-jsp">¶</a>login.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">16</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">58</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="number">4</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">span</span> <span class="operator">=</span> document.querySelector(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">            <span class="type">var</span> <span class="variable">timer</span> <span class="operator">=</span> setInterval(function()&#123;</span><br><span class="line">                <span class="keyword">if</span>(t===<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.innerHTML=t;</span><br><span class="line">                    t--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">passwd</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;passwd&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user.length()==<span class="number">0</span> || passwd.length()==<span class="number">0</span>)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;请正确输入，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(user.equals(<span class="string">&quot;kittates&quot;</span>)&amp;&amp;passwd.equals(<span class="string">&quot;kittates&quot;</span>) &amp;&amp; user.length()!=<span class="number">0</span> &amp;&amp;passwd.length()!=<span class="number">0</span>) &#123;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;loginUserName&quot;</span>,user);</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;success.jsp?name=&quot;</span>+user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;用户名或密码错误，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="success-jsp"><a class="header-anchor" href="#success-jsp">¶</a>success.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">0</span>:<span class="number">10</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="number">4</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">span</span> <span class="operator">=</span> document.querySelector(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">            <span class="type">var</span> <span class="variable">timer</span> <span class="operator">=</span> setInterval(function()&#123;</span><br><span class="line">                <span class="keyword">if</span>(t===<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.innerHTML=t;</span><br><span class="line">                    t--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="type">String</span> <span class="variable">loginUserName</span> <span class="operator">=</span> (String)session.getAttribute(<span class="string">&quot;loginUserName&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(loginUserName==<span class="literal">null</span>)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;请先登录，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            out.println(<span class="string">&quot;登录成功! 欢迎&quot;</span>+request.getParameter(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="总结"><a class="header-anchor" href="#总结">¶</a>总结</h4>
<p>总体来说还算可以，理解了session的使用方式，虽然和学的前端没有什么交集😢</p>
<p>此外配置了emoji😄，可以在页面上面使用emoji了👌</p>
]]></content>
      <categories>
        <category>javaweb</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>javaweb</tag>
      </tags>
  </entry>
  <entry>
    <title>模拟用户登录功能</title>
    <url>/2022/09/17/%E6%A8%A1%E6%8B%9F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用response对象模拟用户登录后的跳转</p>
<span id="more"></span>
<h4 id="login-html"><a class="header-anchor" href="#login-html">¶</a>login.html</h4>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">110px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">60%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span> <span class="selector-class">.left</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span> <span class="selector-class">.right</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.passwd</span> <span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> <span class="selector-class">.sub</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">125px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.foot</span> <span class="selector-class">.reset</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">115px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.sub</span> <span class="selector-tag">button</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.reset</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login.jsp&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>用户:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;passwd&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;passwd&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;foot&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sub&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">name</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>自己简单的写的，不太美观 <s>因为没有原型图</s></p>
<h4 id="login-jsp"><a class="header-anchor" href="#login-jsp">¶</a>login.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">16</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">58</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload=function()&#123;</span><br><span class="line">            <span class="keyword">var</span> t=<span class="number">4</span>;</span><br><span class="line">            <span class="type">var</span> <span class="variable">span</span> <span class="operator">=</span> document.querySelector(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">            <span class="type">var</span> <span class="variable">timer</span> <span class="operator">=</span> setInterval(function()&#123;</span><br><span class="line">                <span class="keyword">if</span>(t===<span class="number">0</span>) &#123;</span><br><span class="line">                    clearInterval(timer);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    span.innerHTML=t;</span><br><span class="line">                    t--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">passwd</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;passwd&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user.length()==<span class="number">0</span> || passwd.length()==<span class="number">0</span>)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;请正确输入，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(user.equals(<span class="string">&quot;kittates&quot;</span>)&amp;&amp;passwd.equals(<span class="string">&quot;kittates&quot;</span>) &amp;&amp; user.length()!=<span class="number">0</span> &amp;&amp;passwd.length()!=<span class="number">0</span>) &#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;success.jsp?name=&quot;</span>+user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h3&gt;用户名或密码错误，&lt;span&gt;5&lt;/span&gt;秒后返回登录&lt;a href=&#x27;login.html&#x27;&gt;登录页面&lt;/a&gt;&lt;/h3&gt;&quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;5;url=login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>简简单单写了一个倒计时功能</p>
<h4 id="success-jsp"><a class="header-anchor" href="#success-jsp">¶</a>success.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">0</span>:<span class="number">10</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;welcome &lt;%= request.getParameter(<span class="string">&quot;name&quot;</span>)%&gt;!&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="体验"><a class="header-anchor" href="#体验">¶</a>体验</h4>
<p>总体来说还算很好，只是在调试hexo的时候浪费了一部分事件，从下午六点多到现在这个点儿，还不算太困：），换做其他天，早就…</p>
<p><img src="/2022/09/17/%E6%A8%A1%E6%8B%9F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD/image-20220917002755589.png" alt="image-20220917002755589"></p>
<p>明天继续学！</p>
]]></content>
      <categories>
        <category>javaweb</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>javaweb</tag>
      </tags>
  </entry>
  <entry>
    <title>javaweb学习的第一天</title>
    <url>/2022/09/16/javaweb%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>第一次尝试Javaweb的例子</p>
<span id="more"></span>
<h4 id="reg-html"><a class="header-anchor" href="#reg-html">¶</a>reg.html</h4>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.title</span>,<span class="selector-class">.Form</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tb</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onload</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> submit=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.submit&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            submit.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> passwd1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.passwd1&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> passwd2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.passwd2&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(passwd1===<span class="string">&quot;&quot;</span> || passwd2===<span class="string">&quot;&quot;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;please enter password&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;form&quot;</span>).<span class="property">action</span>=<span class="string">&quot;reg.html&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">else</span> <span class="keyword">if</span>(passwd1!==passwd2 )&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&#x27;two password you have writed are not same!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;form&quot;</span>).<span class="property">action</span>=<span class="string">&quot;reg.html&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;success!&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>用户注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;Form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;reg.jsp&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tb&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;passwd&quot;</span> <span class="attr">class</span>=<span class="string">&quot;passwd1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;repasswd&quot;</span> <span class="attr">class</span>=<span class="string">&quot;passwd2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>&gt;</span>男</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>职位<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span> <span class="attr">size</span>=<span class="string">1</span> <span class="attr">name</span>=<span class="string">&quot;career&quot;</span> <span class="attr">id</span>=<span class="string">&quot;career&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;教育工作者&quot;</span> <span class="attr">selected</span>&gt;</span>教育工作者<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;公司职员&quot;</span>&gt;</span>公司职员<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;自由职业&quot;</span>&gt;</span>自由职业<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;其他&quot;</span>&gt;</span>其他<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>电话号码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tel&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>电子邮件<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;mail&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>兴趣爱好<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">value</span>=<span class="string">&quot;体育&quot;</span>&gt;</span>体育</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">value</span>=<span class="string">&quot;看书&quot;</span>&gt;</span>看书</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">value</span>=<span class="string">&quot;旅游&quot;</span>&gt;</span>旅游</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fav&quot;</span> <span class="attr">value</span>=<span class="string">&quot;美食&quot;</span>&gt;</span>美食</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>自我简介<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;self&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="reg-jsp"><a class="header-anchor" href="#reg-jsp">¶</a>reg.jsp</h4>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: DELL</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">9</span>/<span class="number">16</span></span><br><span class="line">  Time: <span class="number">18</span>:<span class="number">40</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;<span class="built_in">this</span> is a test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    name: &lt;%= request.getParameter(<span class="string">&quot;name&quot;</span>)%&gt;&lt;br&gt;</span><br><span class="line">    password: &lt;%= request.getParameter(<span class="string">&quot;passwd&quot;</span>)%&gt;&lt;br&gt;</span><br><span class="line">    sex: &lt;%= request.getParameter(<span class="string">&quot;sex&quot;</span>)%&gt;&lt;br&gt;</span><br><span class="line">    career: &lt;%= request.getParameter(<span class="string">&quot;career&quot;</span>)%&gt;&lt;br&gt;</span><br><span class="line">    tel: &lt;%= request.getParameter(<span class="string">&quot;tel&quot;</span>)%&gt;&lt;br&gt;</span><br><span class="line">    mail: &lt;%= request.getParameter(<span class="string">&quot;mail&quot;</span>)%&gt;&lt;br&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        String[] fav = request.getParameterValues(<span class="string">&quot;fav&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(fav!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(String f:fav)&#123;</span><br><span class="line">                out.print(f);</span><br><span class="line">            &#125;</span><br><span class="line">            out.print(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    self-introduction:&lt;%= request.getParameter(<span class="string">&quot;self&quot;</span>)%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="困扰之处"><a class="header-anchor" href="#困扰之处">¶</a>困扰之处</h4>
<p>有一点困住了，两次密码输入不相同时页面不应该发生跳转，JS学了，也忘了，花了很长时间才解决。</p>
<p>由于submit绑定了js事件，原本以为点击后会先执行表单提交。但结果并不是。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">f</span>(<span class="params">passwd1===<span class="string">&quot;&quot;</span> || passwd2===<span class="string">&quot;&quot;</span></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;please enter password&quot;</span>)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;form&quot;</span>).<span class="property">action</span>=<span class="string">&quot;reg.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(passwd1!==passwd2 )&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;two password you have writed are not same!&#x27;</span>);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;form&quot;</span>).<span class="property">action</span>=<span class="string">&quot;reg.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;success!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>javaweb</category>
      </categories>
      <tags>
        <tag>code</tag>
        <tag>javaweb</tag>
      </tags>
  </entry>
  <entry>
    <title>已知极限反求参数能否用洛必达？......</title>
    <url>/2022/08/12/%E5%B7%B2%E7%9F%A5%E6%9E%81%E9%99%90%E5%8F%8D%E6%B1%82%E5%8F%82%E6%95%B0%E8%83%BD%E5%90%A6%E7%94%A8%E6%B4%9B%E5%BF%85%E8%BE%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一开始只是认为洛必达只能单向使用，但真实的情况不是这样的。如果洛完之后分子分母构成的式子极限证明是存在的，则此时的极限结果和原极限结果是相同的。这一点在求解<strong>已知极限反求参数</strong>的试题中很常见。</p>
<span id="more"></span>
<p><a href="https://www.zhihu.com/question/58048076/answer/2424257656">参考1</a><br>
<a href="https://www.bilibili.com/video/BV1f54y187Lq?p=27&amp;vd_source=17d751ead91c1949ce62fa6d0db4cc54">参考2 9:25</a></p>
]]></content>
      <categories>
        <category>math</category>
      </categories>
      <tags>
        <tag>洛必达</tag>
        <tag>极限</tag>
      </tags>
  </entry>
  <entry>
    <title>显微小平台</title>
    <url>/2022/07/31/%E6%98%BE%E5%BE%AE%E5%B0%8F%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>先放图片</p>
<center class="half">
        <img src="/2022/07/31/%E6%98%BE%E5%BE%AE%E5%B0%8F%E5%B9%B3%E5%8F%B0/1.jpg" width="300" class="fancybox"> 
        <img src="/2022/07/31/%E6%98%BE%E5%BE%AE%E5%B0%8F%E5%B9%B3%E5%8F%B0/2.jpg" width="300" class="fancybox">
</center>
<p>这个是几天前制作的，制作这个的原因是：左边的耳机不出声了，本来想凑活着只用一个镜头来看那些小细密零件，结果镜头不好拿，就想着制作一个小平台，以后专门用来观察细小的东西。</p>
<p>结果到现在耳机都没修好，估摸着是插孔那块电线断了，现在只有一个出声，另一个不出声。</p>
<p>也录了一段视频：</p>
<iframe width="854" height="480" src="video.mp4" frameborder="0" allowfullscreen></iframe>
<p>以后会不定期的把一些小发明放到这上面记录一下，以前发明的许多小玩意都没有纪念一下就被我拆了零件。</p>
]]></content>
      <categories>
        <category>小发明</category>
      </categories>
  </entry>
  <entry>
    <title>个人博客大体算是建好了</title>
    <url>/2022/07/31/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>总体来说算是建好了</p>
<span id="more"></span>
<p>一直以来都想有一个自己的网站，记录一些自己的日常，奈何自己租用的服务器快到期了(还剩半年)，只能将其移到github了。</p>
<p>这个是从昨天晚上开始部署的，当时用了fluid主题，不太习惯，所以第二天也就是今天，使用了default主题，在部署的过程中遇到了一些小问题，开源者也没有做详细的介绍，花费了很多时间来搞这些问题。后面还有一些小的问题，这些就不着急了，后面慢慢的修补吧。</p>
<center>
    <img src="/2022/07/31/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/a.jpg" alt="error" width="60%" style="margin: auto" class="fancybox">
</center>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
